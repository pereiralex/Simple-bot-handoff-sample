{"version":3,"file":"azure-communicationservices-signaling.js","sources":["../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tsregistrar/2020.37.0-1.1-d26fc/node_modules/@skype/tsregistrar/lib/webpack:/webpack/universalModuleDefinition","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tsregistrar/2020.37.0-1.1-d26fc/node_modules/@skype/tsregistrar/lib/webpack:/webpack/bootstrap 6a79ff6cf43517d0a794","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tsregistrar/2020.37.0-1.1-d26fc/node_modules/@skype/tsregistrar/lib/webpack:/tsregistrar.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tsregistrar/2020.37.0-1.1-d26fc/node_modules/@skype/tsregistrar/lib/webpack:/lib_temp/Common.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tsregistrar/2020.37.0-1.1-d26fc/node_modules/@skype/tsregistrar/lib/webpack:/lib_temp/RegistrarClient.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/webpack/universalModuleDefinition","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/webpack/bootstrap 6c6d06d371e9aa8c6173","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/tstrouter.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/Logger.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/Interfaces.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/Constants.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/Common.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/(webpack)/buildin/global.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/InternalInterfaces.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/MessageHandler.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/SkypeTokenProviderWithCache.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/TrouterManager.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/TrouterUrlPromise.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/socket.io.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/config/versionTemplate.txt","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/utils.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/asap.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/then.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/promise/resolve.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/-internal.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/enumerator.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/promise/all.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/promise/race.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/promise/reject.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/promise.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/polyfill.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/~/process/browser.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/(webpack)/buildin/module.js","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/ConnectionTracker.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/ExponentialBackoff.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/TrouterConnection.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/TrouterFsm.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/TrouterManagerFsm.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/TsTrouter.ts","../../../common/temp/node_modules/.pnpm/skype.pkgs.visualstudio.com/@skype/tstrouter/2020.37.0-1.1-d26fc/node_modules/@skype/tstrouter/lib/webpack:/external \"@skype/tsregistrar\"","../dist-esm/src/TrouterUtils.js","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/httpHeaders.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/tslib/2.0.3/node_modules/tslib/tslib.es6.js","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/util/base64.browser.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/uuid/8.3.1/node_modules/uuid/dist/esm-browser/rng.js","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/uuid/8.3.1/node_modules/uuid/dist/esm-browser/regex.js","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/uuid/8.3.1/node_modules/uuid/dist/esm-browser/validate.js","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/uuid/8.3.1/node_modules/uuid/dist/esm-browser/stringify.js","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/uuid/8.3.1/node_modules/uuid/dist/esm-browser/v4.js","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/util/constants.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/util/utils.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/util/serializer.common.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/serializer.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/webResource.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/tslib/1.14.1/node_modules/tslib/tslib.es6.js","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/abort-controller/1.0.1/node_modules/@azure/abort-controller/src/AbortSignal.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/abort-controller/1.0.1/node_modules/@azure/abort-controller/src/AbortController.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/util/inspect.browser.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/url.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/util/sanitizer.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/restError.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/xhrHttpClient.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/httpPipelineLogLevel.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/operationOptions.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-auth/1.1.3/node_modules/@azure/core-auth/src/tokenCredential.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/requestPolicy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/logger/1.0.0/node_modules/@azure/logger/src/log.browser.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/logger/1.0.0/node_modules/@azure/logger/src/debug.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/logger/1.0.0/node_modules/@azure/logger/src/logger.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/log.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/logPolicy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/operationParameter.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/operationSpec.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/util/xml.browser.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/deserializationPolicy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/util/exponentialBackoffStrategy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/exponentialRetryPolicy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/generateClientRequestIdPolicy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/msRestUserAgentPolicy.browser.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/userAgentPolicy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/redirectPolicy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/rpRegistrationPolicy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/credentials/accessTokenCache.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/credentials/accessTokenRefresher.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/bearerTokenAuthenticationPolicy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/systemErrorRetryPolicy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/queryCollectionFormat.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/proxyPolicy.browser.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/throttlingRetryPolicy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/signingPolicy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/keepAlivePolicy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/common/Logger.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/context/propagation/getter.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/context/propagation/HttpTextPropagator.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/context/propagation/NoopHttpTextPropagator.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/context/propagation/setter.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/correlation_context/CorrelationContext.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/correlation_context/EntryValue.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/metrics/BatchObserverResult.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/metrics/BoundInstrument.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/metrics/Meter.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/metrics/MeterProvider.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/metrics/Metric.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/metrics/NoopMeter.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/metrics/NoopMeterProvider.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/metrics/Observation.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/metrics/ObserverResult.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/Event.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/instrumentation/Plugin.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/link_context.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/link.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/trace_flags.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/NoopSpan.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/NoopTracer.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/NoopTracerProvider.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/Sampler.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/SamplingResult.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/span_context.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/span_kind.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/span.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/SpanOptions.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/status.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/TimedEvent.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/tracer_provider.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/trace/tracer.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/context-base/0.10.2/node_modules/@opentelemetry/context-base/src/types.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/context-base/0.10.2/node_modules/@opentelemetry/context-base/src/context.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/context-base/0.10.2/node_modules/@opentelemetry/context-base/src/NoopContextManager.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/context-base/0.10.2/node_modules/@opentelemetry/context-base/src/index.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/platform/browser/globalThis.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/platform/browser/index.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/api/global-utils.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/api/context.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/api/trace.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/api/metrics.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/api/propagation.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/api/0.10.2/node_modules/@opentelemetry/api/src/index.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-tracing/1.0.0-preview.9/node_modules/@azure/core-tracing/src/tracers/noop/noOpSpan.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-tracing/1.0.0-preview.9/node_modules/@azure/core-tracing/src/tracers/noop/noOpTracer.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-tracing/1.0.0-preview.9/node_modules/@azure/core-tracing/src/utils/global.browser.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-tracing/1.0.0-preview.9/node_modules/@azure/core-tracing/src/utils/cache.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-tracing/1.0.0-preview.9/node_modules/@azure/core-tracing/src/tracerProxy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-tracing/1.0.0-preview.9/node_modules/@azure/core-tracing/src/utils/traceParentHeader.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/tracingPolicy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/disableResponseDecompressionPolicy.browser.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/policies/ndJsonPolicy.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/serviceClient.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/credentials/basicAuthenticationCredentials.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/credentials/apiKeyCredentials.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/credentials/topicCredentials.ts","../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-http/1.2.0/node_modules/@azure/core-http/src/coreHttp.ts","../dist-esm/src/TrouterSettings.js","../dist-esm/src/SignalingClient.js","../dist-esm/src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@skype/tsregistrar\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@skype/tsregistrar\"] = factory();\n\telse\n\t\troot[\"@skype/tsregistrar\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6a79ff6cf43517d0a794","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@skype/tsregistrar\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@skype/tsregistrar\"] = factory();\n\telse\n\t\troot[\"@skype/tsregistrar\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:no-any\r\n// tslint:disable:export-name\r\nfunction toJson(obj) {\r\n    try {\r\n        return JSON.stringify(obj);\r\n    }\r\n    catch (error) {\r\n        return \"Unable to serialize object of type \" + typeof obj;\r\n    }\r\n}\r\nexports.toJson = toJson;\r\n/**\r\n * Simplify calculation of time intervals\r\n */\r\nvar Timespan = /** @class */ (function () {\r\n    function Timespan() {\r\n        this.start = Date.now();\r\n    }\r\n    Object.defineProperty(Timespan.prototype, \"duration\", {\r\n        /**\r\n         * Returns number of milliseconds from start\r\n         */\r\n        get: function () {\r\n            return Date.now() - this.start;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Timespan.prototype, \"startTime\", {\r\n        /**\r\n         * Returns start time\r\n         */\r\n        get: function () {\r\n            return this.start;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Reset start of interval to current timestamp\r\n     */\r\n    Timespan.prototype.reset = function () {\r\n        this.start = Date.now();\r\n    };\r\n    return Timespan;\r\n}());\r\nexports.Timespan = Timespan;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Common_1 = __webpack_require__(0);\r\n/**\r\n * Thrown when retry process was cancelled\r\n */\r\nvar CancelationError = /** @class */ (function (_super) {\r\n    __extends(CancelationError, _super);\r\n    function CancelationError(message) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.name = 'CancelationError';\r\n        return _this;\r\n    }\r\n    return CancelationError;\r\n}(Error));\r\n/**\r\n * Randomized exponential delay used for retries\r\n */\r\nvar ExponentialDelay = /** @class */ (function () {\r\n    function ExponentialDelay(logger, maxBackoffInMs, initialDelay) {\r\n        this.logger = logger;\r\n        this.maxBackoffInMs = maxBackoffInMs;\r\n        this.initialDelay = initialDelay;\r\n        this.backoffCount = 0;\r\n        this.id = ++ExponentialDelay.idCounter;\r\n    }\r\n    // tslint:disable-next-line: promise-function-async\r\n    ExponentialDelay.prototype.delay = function (taskName) {\r\n        var _this = this;\r\n        if (this.timerHandle !== undefined) {\r\n            throw new Error('Retry sequence logical failure');\r\n        }\r\n        if (this.backoffCount === -1) {\r\n            return new Promise(function (resolve, reject) { reject(new CancelationError('Cancelled')); });\r\n        }\r\n        var backoffMs = this.calculateNextBackoffMs();\r\n        this.backoffCount++;\r\n        this.logger.info(\"[RegistrarClient] Backing off \" + taskName + \" for \" + backoffMs + \" milliseconds with ID \" + this.id);\r\n        return new Promise(function (resolve, reject) {\r\n            _this.cancelFunc = reject;\r\n            _this.timerHandle = setTimeout(function () {\r\n                _this.logger.info(\"[RegistrarClient] Back off for \" + taskName + \" with ID \" + _this.id + \" complete\");\r\n                _this.timerHandle = undefined;\r\n                resolve();\r\n            }, backoffMs);\r\n        });\r\n    };\r\n    ExponentialDelay.prototype.cancel = function () {\r\n        if (this.timerHandle !== undefined) {\r\n            this.logger.debug('Resetting back off');\r\n            clearTimeout(this.timerHandle);\r\n            if (this.cancelFunc !== undefined) {\r\n                this.cancelFunc(new CancelationError('Cancelled'));\r\n            }\r\n        }\r\n        this.backoffCount = -1;\r\n    };\r\n    ExponentialDelay.prototype.calculateNextBackoffMs = function () {\r\n        // tslint:disable-next-line:insecure-random\r\n        var fudge = 1 + (Math.random() - 0.5) * 0.4; // +/- 20%\r\n        var backoff = this.initialDelay * Math.pow(2, this.backoffCount) * fudge;\r\n        backoff = Math.round(backoff);\r\n        return Math.min(this.maxBackoffInMs, backoff);\r\n    };\r\n    ExponentialDelay.idCounter = 0;\r\n    return ExponentialDelay;\r\n}());\r\n/**\r\n * Registrar client implementation\r\n */\r\nvar RegistrarClient = /** @class */ (function () {\r\n    function RegistrarClient(logger, skypeTokenProvider, options) {\r\n        this.logger = logger;\r\n        this.skypeTokenProvider = skypeTokenProvider;\r\n        this.options = options;\r\n        this.backoffs = {};\r\n    }\r\n    RegistrarClient.prototype.setTelemetryLogger = function (eventLogger) {\r\n        this.eventLogger = eventLogger;\r\n    };\r\n    RegistrarClient.prototype.register = function (client, transports) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.performRegistration(client, transports, 'pr_set_registration')];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.cachedRegistrationParams = [client, transports];\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RegistrarClient.prototype.unregister = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var unregisterRequest;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.info('[RegistrarClient] sending unregister request');\r\n                        unregisterRequest = new Request(this.options.registrarUrl + \"/\" + this.options.registrationId, {\r\n                            method: 'DELETE',\r\n                            mode: 'cors',\r\n                            headers: new Headers({\r\n                                accept: 'application/json, text/javascript'\r\n                            })\r\n                        });\r\n                        return [4 /*yield*/, this.callRegistrar(unregisterRequest, 'pr_delete_registration')];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RegistrarClient.prototype.cancelPendingRequests = function () {\r\n        var _this = this;\r\n        Object.keys(this.backoffs).forEach(function (id) {\r\n            _this.backoffs[id].cancel();\r\n        });\r\n        this.backoffs = {};\r\n    };\r\n    RegistrarClient.prototype.resendRegistration = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.cachedRegistrationParams) {\r\n                            throw new Error('Re-registration failed because there is no registration parameters cached');\r\n                        }\r\n                        return [4 /*yield*/, this.performRegistration(this.cachedRegistrationParams[0], this.cachedRegistrationParams[1], 'pr_resend_registration')];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RegistrarClient.prototype.performRegistration = function (client, transports, eventName) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var payload, registerRequest;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.info('[RegistrarClient] Sending register request');\r\n                        payload = {\r\n                            clientDescription: client,\r\n                            registrationId: this.options.registrationId,\r\n                            nodeId: '',\r\n                            transports: transports\r\n                        };\r\n                        registerRequest = new Request(this.options.registrarUrl, {\r\n                            method: 'POST',\r\n                            mode: 'cors',\r\n                            headers: new Headers({\r\n                                'content-type': 'application/json',\r\n                                accept: 'application/json, text/javascript'\r\n                            }),\r\n                            body: Common_1.toJson(payload)\r\n                        });\r\n                        return [4 /*yield*/, this.callRegistrar(registerRequest, eventName)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RegistrarClient.prototype.startBackoff = function () {\r\n        var backoff = new ExponentialDelay(this.logger, this.options.maxRetryDelayMs, this.options.initialRetryDelayMs);\r\n        this.backoffs[backoff.id] = backoff;\r\n        return backoff;\r\n    };\r\n    RegistrarClient.prototype.stopBackoff = function (backoff) {\r\n        backoff.cancel();\r\n        delete this.backoffs[backoff.id];\r\n    };\r\n    RegistrarClient.prototype.getSkypeToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var backoff, token, error_1, cancelError_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        backoff = this.startBackoff();\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 8]);\r\n                        this.logger.info('[RegistrarClient] Asking for a new skypetoken');\r\n                        return [4 /*yield*/, this.skypeTokenProvider(true)];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        this.stopBackoff(backoff);\r\n                        return [2 /*return*/, token];\r\n                    case 3:\r\n                        error_1 = _a.sent();\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        _a.trys.push([4, 6, , 7]);\r\n                        return [4 /*yield*/, backoff.delay('Fetching a new skypetoken')];\r\n                    case 5:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 6:\r\n                        cancelError_1 = _a.sent();\r\n                        this.stopBackoff(backoff);\r\n                        throw cancelError_1;\r\n                    case 7: return [3 /*break*/, 8];\r\n                    case 8: return [3 /*break*/, 1];\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RegistrarClient.prototype.callRegistrar = function (request, eventName) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var backoff, cachedSkypetoken, stopwatch, response, req, _a, _b, error_2, canceledError_1;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        backoff = this.startBackoff();\r\n                        return [4 /*yield*/, this.skypeTokenProvider(false)];\r\n                    case 1:\r\n                        cachedSkypetoken = _c.sent();\r\n                        this.setSkypeTokenHeader(request, cachedSkypetoken);\r\n                        stopwatch = new Common_1.Timespan();\r\n                        _c.label = 2;\r\n                    case 2:\r\n                        response = void 0;\r\n                        _c.label = 3;\r\n                    case 3:\r\n                        _c.trys.push([3, 8, 13, 14]);\r\n                        req = request.clone();\r\n                        return [4 /*yield*/, this.fetchWithTimeout(req)];\r\n                    case 4:\r\n                        response = _c.sent();\r\n                        if (!(response.status === 401)) return [3 /*break*/, 6];\r\n                        _a = this.setSkypeTokenHeader;\r\n                        _b = [request];\r\n                        return [4 /*yield*/, this.getSkypeToken()];\r\n                    case 5:\r\n                        _a.apply(this, _b.concat([_c.sent()]));\r\n                        //should we wait before retrying with a new skypetoken?\r\n                        return [3 /*break*/, 15];\r\n                    case 6:\r\n                        if (response.status >= 500 && response.status < 600) {\r\n                            // throw and retry after in the catch section\r\n                            throw new Error(\"Fetch for '\" + request.url + \"' failed with \" + response.status + \" \" + response.statusText);\r\n                        }\r\n                        _c.label = 7;\r\n                    case 7: return [3 /*break*/, 14];\r\n                    case 8:\r\n                        error_2 = _c.sent();\r\n                        this.logger.error(\"[RegistrarClient] Request failed with \" + error_2);\r\n                        _c.label = 9;\r\n                    case 9:\r\n                        _c.trys.push([9, 11, , 12]);\r\n                        // retry on network errors (thrown by fetch) and retryable codes\r\n                        return [4 /*yield*/, backoff.delay('Registrar call retry')];\r\n                    case 10:\r\n                        // retry on network errors (thrown by fetch) and retryable codes\r\n                        _c.sent();\r\n                        return [3 /*break*/, 15];\r\n                    case 11:\r\n                        canceledError_1 = _c.sent();\r\n                        this.logger.error('[RegistrarClient] Request cancelled');\r\n                        this.stopBackoff(backoff);\r\n                        throw canceledError_1;\r\n                    case 12: return [3 /*break*/, 14];\r\n                    case 13:\r\n                        this.sendTelemetryEvent(eventName, request, response, stopwatch);\r\n                        return [7 /*endfinally*/];\r\n                    case 14:\r\n                        this.stopBackoff(backoff);\r\n                        if (response.ok) {\r\n                            return [2 /*return*/, response];\r\n                        }\r\n                        else {\r\n                            throw new Error(\"Fetch for '\" + request.url + \"' failed with \" + response.status + \" \" + response.statusText);\r\n                        }\r\n                        _c.label = 15;\r\n                    case 15: return [3 /*break*/, 2];\r\n                    case 16: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RegistrarClient.prototype.setSkypeTokenHeader = function (request, skypetoken) {\r\n        // tslint:disable-next-line: no-backbone-get-set-outside-model\r\n        request.headers.set('X-Skypetoken', skypetoken);\r\n    };\r\n    /** Wrapper to send request with specified timeout */\r\n    // tslint:disable-next-line:promise-function-async\r\n    RegistrarClient.prototype.fetchWithTimeout = function (request) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            fetch(request).then(resolve).catch(reject);\r\n            if (_this.options.requestTimeoutMs !== 0) {\r\n                // tslint:disable-next-line:no-string-based-set-timeout - false positive\r\n                setTimeout(reject, _this.options.requestTimeoutMs, new Error(\"Fetch for '\" + request.url + \"' timed out\"));\r\n            }\r\n        });\r\n    };\r\n    RegistrarClient.prototype.sendTelemetryEvent = function (eventName, request, response, stopwatch) {\r\n        if (this.eventLogger === undefined) {\r\n            return;\r\n        }\r\n        var clientEvent = {\r\n            name: eventName,\r\n            properties: {\r\n                url: { value: request.url },\r\n                result_code: { value: response !== undefined ? response.status : 0 },\r\n                begin_timestamp: { value: stopwatch.startTime },\r\n                elapsed: { value: stopwatch.duration }\r\n            }\r\n        };\r\n        this.eventLogger.logEvent(clientEvent);\r\n    };\r\n    return RegistrarClient;\r\n}());\r\nexports.RegistrarClient = RegistrarClient;\r\nfunction createRegistrarClient(logProvider, skypeTokenProvider, options) {\r\n    return new RegistrarClient(logProvider, skypeTokenProvider, options);\r\n}\r\nexports.createRegistrarClient = createRegistrarClient;\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// tsregistrar.js","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n// tslint:disable:no-any\r\n// tslint:disable:export-name\r\n\r\nexport function toJson(obj: any): string {\r\n    try {\r\n        return JSON.stringify(obj);\r\n    } catch (error) {\r\n        return `Unable to serialize object of type ${typeof obj}`;\r\n    }\r\n}\r\n\r\n/**\r\n * Simplify calculation of time intervals\r\n */\r\nexport class Timespan {\r\n    private start: number;\r\n\r\n    constructor() {\r\n        this.start = Date.now();\r\n    }\r\n\r\n    /**\r\n     * Returns number of milliseconds from start\r\n     */\r\n    public get duration(): number {\r\n        return Date.now() - this.start;\r\n    }\r\n\r\n    /**\r\n     * Returns start time\r\n     */\r\n    public get startTime() {\r\n        return this.start;\r\n    }\r\n\r\n    /**\r\n     * Reset start of interval to current timestamp\r\n     */\r\n    public reset() {\r\n        this.start = Date.now();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/Common.ts","import { Timespan, toJson } from './Common';\r\nimport { IClientDescription, IRegistrarClient, IRegistrarClientOptions, ITelemetrySender,\r\n         ITransports, LogProvider, SkypeTokenProvider, TelemetryEvent } from './Interfaces';\r\n\r\n\r\n/**\r\n * Thrown when retry process was cancelled\r\n */\r\nclass CancelationError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = 'CancelationError';\r\n    }\r\n}\r\n\r\n/**\r\n * Randomized exponential delay used for retries\r\n */\r\nclass ExponentialDelay {\r\n    private static idCounter: number = 0;\r\n\r\n    public readonly id: number;\r\n\r\n    private backoffCount: number = 0;\r\n    private timerHandle?: number;\r\n    // tslint:disable-next-line: no-any\r\n    private cancelFunc: ((err?: any) => void) | undefined;\r\n\r\n    public constructor(\r\n        private logger: LogProvider,\r\n        private maxBackoffInMs: number,\r\n        private initialDelay: number\r\n    ) {\r\n        this.id = ++ExponentialDelay.idCounter;\r\n    }\r\n\r\n    // tslint:disable-next-line: promise-function-async\r\n    public delay(taskName: string): Promise<void> {\r\n        if (this.timerHandle !== undefined) {\r\n            throw new Error('Retry sequence logical failure');\r\n        }\r\n\r\n        if (this.backoffCount === -1) {\r\n            return new Promise((resolve, reject) => { reject(new CancelationError('Cancelled')); });\r\n        }\r\n\r\n        const backoffMs = this.calculateNextBackoffMs();\r\n        this.backoffCount++;\r\n        this.logger.info(`[RegistrarClient] Backing off ${taskName} for ${backoffMs} milliseconds with ID ${this.id}`);\r\n\r\n        return new Promise( (resolve, reject) => {\r\n            this.cancelFunc = reject;\r\n            this.timerHandle = setTimeout(() => {\r\n                this.logger.info(`[RegistrarClient] Back off for ${taskName} with ID ${this.id} complete`);\r\n                this.timerHandle = undefined;\r\n                resolve();\r\n            }, backoffMs);\r\n        });\r\n    }\r\n\r\n    public cancel(): void {\r\n        if (this.timerHandle !== undefined) {\r\n            this.logger.debug('Resetting back off');\r\n            clearTimeout(this.timerHandle);\r\n            if (this.cancelFunc !== undefined) {\r\n                this.cancelFunc(new CancelationError('Cancelled'));\r\n            }\r\n        }\r\n        this.backoffCount = -1;\r\n    }\r\n\r\n    private calculateNextBackoffMs(): number {\r\n        // tslint:disable-next-line:insecure-random\r\n        const fudge = 1 + (Math.random() - 0.5) * 0.4; // +/- 20%\r\n        let backoff = this.initialDelay * Math.pow(2, this.backoffCount) * fudge;\r\n        backoff = Math.round(backoff);\r\n\r\n        return Math.min(this.maxBackoffInMs, backoff);\r\n    }\r\n}\r\n\r\n/**\r\n * Registrar client implementation\r\n */\r\nexport class RegistrarClient implements IRegistrarClient {\r\n    private backoffs: { [id: string]: ExponentialDelay };\r\n    private eventLogger?: ITelemetrySender;\r\n    private cachedRegistrationParams?: [IClientDescription, ITransports];\r\n\r\n    constructor(\r\n        private logger: LogProvider,\r\n        private skypeTokenProvider: SkypeTokenProvider,\r\n        private options: IRegistrarClientOptions\r\n    ) {\r\n        this.backoffs = {};\r\n    }\r\n\r\n    public setTelemetryLogger(eventLogger: ITelemetrySender) {\r\n        this.eventLogger = eventLogger;\r\n    }\r\n\r\n    public async register(client: IClientDescription, transports: ITransports): Promise<void> {\r\n        await this.performRegistration(client, transports, 'pr_set_registration');\r\n        this.cachedRegistrationParams = [client, transports];\r\n    }\r\n\r\n    public async unregister(): Promise<void> {\r\n        this.logger.info('[RegistrarClient] sending unregister request');\r\n\r\n        const unregisterRequest = new Request(`${this.options.registrarUrl}/${this.options.registrationId}`,\r\n            {\r\n                method: 'DELETE',\r\n                mode: 'cors',\r\n                headers: new Headers({\r\n                    accept: 'application/json, text/javascript'\r\n                })\r\n            });\r\n\r\n            await this.callRegistrar(unregisterRequest, 'pr_delete_registration');\r\n    }\r\n\r\n    public cancelPendingRequests() {\r\n        Object.keys(this.backoffs).forEach((id: string) => {\r\n            this.backoffs[id].cancel();\r\n        });\r\n        this.backoffs = {};\r\n    }\r\n\r\n    public async resendRegistration(): Promise<void> {\r\n        if (!this.cachedRegistrationParams) {\r\n            throw new Error('Re-registration failed because there is no registration parameters cached');\r\n        }\r\n\r\n        await this.performRegistration(this.cachedRegistrationParams[0], this.cachedRegistrationParams[1], 'pr_resend_registration');\r\n    }\r\n\r\n    private async performRegistration(client: IClientDescription, transports: ITransports, eventName: string) {\r\n        this.logger.info('[RegistrarClient] Sending register request');\r\n        const payload = {\r\n            clientDescription: client,\r\n            registrationId: this.options.registrationId,\r\n            nodeId: '',\r\n            transports: transports\r\n        };\r\n        const registerRequest = new Request(this.options.registrarUrl, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: new Headers({\r\n                'content-type': 'application/json',\r\n                accept: 'application/json, text/javascript'\r\n            }),\r\n            body: toJson(payload)\r\n        });\r\n        await this.callRegistrar(registerRequest, eventName);\r\n    }\r\n\r\n    private startBackoff() {\r\n        const backoff = new ExponentialDelay(this.logger, this.options.maxRetryDelayMs, this.options.initialRetryDelayMs);\r\n        this.backoffs[backoff.id] = backoff;\r\n\r\n        return backoff;\r\n    }\r\n\r\n    private stopBackoff(backoff: ExponentialDelay) {\r\n        backoff.cancel();\r\n        delete this.backoffs[backoff.id];\r\n    }\r\n\r\n    private async getSkypeToken(): Promise<string> {\r\n        const backoff = this.startBackoff();\r\n        for (;;) {\r\n            try {\r\n                this.logger.info('[RegistrarClient] Asking for a new skypetoken');\r\n                const token = await this.skypeTokenProvider(true);\r\n                this.stopBackoff(backoff);\r\n\r\n                return token;\r\n            } catch (error) {\r\n                try {\r\n                    await backoff.delay('Fetching a new skypetoken');\r\n                    continue;\r\n                } catch (cancelError) {\r\n                    this.stopBackoff(backoff);\r\n                    throw cancelError;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private async callRegistrar(request: Request, eventName: string): Promise<Response> {\r\n        const backoff = this.startBackoff();\r\n\r\n        const cachedSkypetoken = await this.skypeTokenProvider(false);\r\n        this.setSkypeTokenHeader(request, cachedSkypetoken);\r\n\r\n        const stopwatch = new Timespan();\r\n\r\n        for (;;) {\r\n            let response: Response | undefined;\r\n            try {\r\n                // Make a clone in case we need to retry, one Request cannot be used twice with fetch()\r\n                const req = request.clone();\r\n                response = await this.fetchWithTimeout(req);\r\n                if (response.status === 401) {\r\n                    this.setSkypeTokenHeader(request, await this.getSkypeToken());\r\n                    //should we wait before retrying with a new skypetoken?\r\n                    continue;\r\n                } else if (response.status >= 500 && response.status < 600) {\r\n                    // throw and retry after in the catch section\r\n                    throw new Error(`Fetch for '${request.url}' failed with ${response.status} ${response.statusText}`);\r\n                }\r\n            } catch (error) {\r\n                this.logger.error(`[RegistrarClient] Request failed with ${error}`);\r\n                try {\r\n                    // retry on network errors (thrown by fetch) and retryable codes\r\n                    await backoff.delay('Registrar call retry');\r\n                    continue;\r\n                } catch (canceledError) {\r\n                    this.logger.error('[RegistrarClient] Request cancelled');\r\n                    this.stopBackoff(backoff);\r\n                    throw canceledError;\r\n                }\r\n            } finally {\r\n                this.sendTelemetryEvent(eventName, request, response, stopwatch);\r\n            }\r\n\r\n            this.stopBackoff(backoff);\r\n            if (response.ok) {\r\n                return response;\r\n            } else  {\r\n                throw new Error(`Fetch for '${request.url}' failed with ${response.status} ${response.statusText}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setSkypeTokenHeader(request: Request, skypetoken: string) {\r\n        // tslint:disable-next-line: no-backbone-get-set-outside-model\r\n        request.headers.set('X-Skypetoken', skypetoken);\r\n    }\r\n\r\n    /** Wrapper to send request with specified timeout */\r\n    // tslint:disable-next-line:promise-function-async\r\n    private fetchWithTimeout(request: Request): Promise<Response> {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(request).then(resolve).catch(reject);\r\n\r\n            if (this.options.requestTimeoutMs !== 0) {\r\n                // tslint:disable-next-line:no-string-based-set-timeout - false positive\r\n                setTimeout(reject, this.options.requestTimeoutMs, new Error(`Fetch for '${request.url}' timed out`));\r\n            }\r\n        });\r\n    }\r\n\r\n    private sendTelemetryEvent(eventName: string, request: Request, response: Response | undefined, stopwatch: Timespan) {\r\n        if (this.eventLogger === undefined) {\r\n            return;\r\n        }\r\n\r\n        const clientEvent: TelemetryEvent = {\r\n            name: eventName,\r\n            properties: {\r\n                url: { value: request.url },\r\n                result_code: { value: response !== undefined ? response.status : 0 },\r\n                begin_timestamp: { value: stopwatch.startTime },\r\n                elapsed: { value: stopwatch.duration }\r\n            }\r\n        };\r\n\r\n        this.eventLogger.logEvent(clientEvent);\r\n    }\r\n}\r\n\r\nexport function createRegistrarClient(\r\n    logProvider: LogProvider,\r\n    skypeTokenProvider: SkypeTokenProvider,\r\n    options: IRegistrarClientOptions\r\n): IRegistrarClient {\r\n    return new RegistrarClient(logProvider, skypeTokenProvider, options);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/RegistrarClient.ts","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@skype/tsregistrar\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@skype/tstrouter\", [\"@skype/tsregistrar\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@skype/tstrouter\"] = factory(require(\"@skype/tsregistrar\"));\n\telse\n\t\troot[\"@skype/tstrouter\"] = factory(root[\"@skype/tsregistrar\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_20__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6c6d06d371e9aa8c6173","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@skype/tsregistrar\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@skype/tstrouter\", [\"@skype/tsregistrar\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@skype/tstrouter\"] = factory(require(\"@skype/tsregistrar\"));\n\telse\n\t\troot[\"@skype/tstrouter\"] = factory(root[\"@skype/tsregistrar\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_20__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 19);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Simple logger\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(name, logger) {\r\n        this.name = name;\r\n        this.logger = logger;\r\n    }\r\n    Logger.prototype.debug = function (message) {\r\n        this.logger.debug(\"[\" + this.name + \"] \" + message);\r\n    };\r\n    Logger.prototype.info = function (message) {\r\n        this.logger.info(\"[\" + this.name + \"] \" + message);\r\n    };\r\n    Logger.prototype.warn = function (message) {\r\n        this.logger.warn(\"[\" + this.name + \"] \" + message);\r\n    };\r\n    Logger.prototype.error = function (message) {\r\n        this.logger.error(\"[\" + this.name + \"] \" + message);\r\n    };\r\n    return Logger;\r\n}());\r\nexports.Logger = Logger;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Type definitions for Trouter JavaScript Client 2020.37.01.1\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/** Headers for HTTP request */\r\nvar HttpHeaders = /** @class */ (function () {\r\n    function HttpHeaders() {\r\n    }\r\n    return HttpHeaders;\r\n}());\r\nexports.HttpHeaders = HttpHeaders;\r\nvar TrouterState;\r\n(function (TrouterState) {\r\n    /** Initial state */\r\n    TrouterState[TrouterState[\"Unknown\"] = 0] = \"Unknown\";\r\n    /** ready to work */\r\n    TrouterState[TrouterState[\"Connected\"] = 2] = \"Connected\";\r\n    /** waiting for 'connected' event */\r\n    TrouterState[TrouterState[\"Disconnected\"] = 3] = \"Disconnected\";\r\n    /** waiting for 'register' from second connection */\r\n    TrouterState[TrouterState[\"Switching\"] = 9] = \"Switching\";\r\n})(TrouterState = exports.TrouterState || (exports.TrouterState = {}));\r\n/** States that a user can reach. */\r\nvar UserActivityState;\r\n(function (UserActivityState) {\r\n    /** Initial state */\r\n    UserActivityState[UserActivityState[\"Unknown\"] = 0] = \"Unknown\";\r\n    /** User is active according to the application. */\r\n    UserActivityState[UserActivityState[\"Active\"] = 1] = \"Active\";\r\n    /** User is not active according to the application. */\r\n    UserActivityState[UserActivityState[\"Inactive\"] = 2] = \"Inactive\";\r\n})(UserActivityState = exports.UserActivityState || (exports.UserActivityState = {}));\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.constants = {\r\n    TROUTER_INIT: 'trouterinit',\r\n    TROUTER_READY_EVENT: 'trouterReadyEvent',\r\n    TROUTER_READY_TIMEOUT: 'trouterReadyTimeout',\r\n    TROUTER_TOKEN_REQUEST: 'trouterTokenRequest',\r\n    TROUTER_TOKEN_GET_SUCCEEDED: 'trouterTokenGetSucceeded',\r\n    TROUTER_TOKEN_GET_FAILED: 'trouterTokenGetFailed',\r\n    TROUTER_RECONNECTING: 'trouterReconnecting',\r\n    RENEWAL: 'renewal',\r\n    NEW_CONNECTION: 'newConnection',\r\n    ENDPOINT_REGISTRATION_FAILED: 'endpointRegistrationFailed'\r\n};\r\nexports.CLIENT_VERSION = '2020.37.01.1';\r\nexports.HANDLED_MESSAGE_ACK = 200;\r\nexports.UNHANDLED_MESSAGE_ACK = 404;\r\nexports.FAILED_MESSAGE_ACK = 500;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:no-any\r\n// tslint:disable:export-name\r\nfunction toJson(obj) {\r\n    try {\r\n        return JSON.stringify(obj);\r\n    }\r\n    catch (error) {\r\n        return \"Unable to serialize object of type \" + typeof obj;\r\n    }\r\n}\r\nexports.toJson = toJson;\r\nfunction calculateTtlInSec(expirationTsInSec) {\r\n    var now = Math.round(new Date().getTime() / 1000);\r\n    return expirationTsInSec !== undefined && expirationTsInSec > now\r\n        ? expirationTsInSec - now\r\n        : 0;\r\n}\r\nexports.calculateTtlInSec = calculateTtlInSec;\r\nfunction calculateExpireTsInSec(ttlInSec) {\r\n    return Math.round(new Date().getTime() / 1000) + ttlInSec;\r\n}\r\nexports.calculateExpireTsInSec = calculateExpireTsInSec;\r\n/**\r\n * Simplify calculation of time intervals\r\n */\r\nvar Timespan = /** @class */ (function () {\r\n    function Timespan() {\r\n        this.start = Date.now();\r\n    }\r\n    Object.defineProperty(Timespan.prototype, \"duration\", {\r\n        /**\r\n         * Returns number of milliseconds from start\r\n         */\r\n        get: function () {\r\n            return Date.now() - this.start;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Timespan.prototype, \"startTime\", {\r\n        /**\r\n         * Returns start time\r\n         */\r\n        get: function () {\r\n            return this.start;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Reset start of interval to current timestamp\r\n     */\r\n    Timespan.prototype.reset = function () {\r\n        this.start = Date.now();\r\n    };\r\n    return Timespan;\r\n}());\r\nexports.Timespan = Timespan;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Internal type definitions for Trouter JavaScript Client\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Common_1 = __webpack_require__(3);\r\n/**\r\n * Information about server connection\r\n */\r\nvar ServerState = /** @class */ (function () {\r\n    function ServerState(\r\n    /** Trouter client connection ID */\r\n    connectionId, \r\n    /** Trouter client connected client ID */\r\n    connectedClientId, \r\n    /** window.location.hostname */\r\n    domId, \r\n    /** Unsecure Trouter url at which client can be reached */\r\n    unsecureUrl, \r\n    /** Secure Trouter url at which client can be reached */\r\n    url, \r\n    /** URL base to use for client-to-client requests */\r\n    c2cUrlBase, \r\n    /** expiration timestamp for connection in seconds */\r\n    expirationTsSec) {\r\n        this.connectionId = connectionId;\r\n        this.connectedClientId = connectedClientId;\r\n        this.domId = domId;\r\n        this.unsecureUrl = unsecureUrl;\r\n        this.url = url;\r\n        this.c2cUrlBase = c2cUrlBase;\r\n        this.expirationTsSec = expirationTsSec;\r\n    }\r\n    /** Return connection TTL, i.e. number of seconds till expiration */\r\n    ServerState.prototype.getRemainingTtlInSec = function () {\r\n        return Common_1.calculateTtlInSec(this.expirationTsSec);\r\n    };\r\n    return ServerState;\r\n}());\r\nexports.ServerState = ServerState;\r\nvar UserActivityEventReason;\r\n(function (UserActivityEventReason) {\r\n    UserActivityEventReason[UserActivityEventReason[\"Unknown\"] = 0] = \"Unknown\";\r\n    UserActivityEventReason[UserActivityEventReason[\"Modified\"] = 1] = \"Modified\";\r\n    UserActivityEventReason[UserActivityEventReason[\"Snapshot\"] = 2] = \"Snapshot\";\r\n    UserActivityEventReason[UserActivityEventReason[\"Connected\"] = 3] = \"Connected\";\r\n})(UserActivityEventReason = exports.UserActivityEventReason || (exports.UserActivityEventReason = {}));\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:export-name\r\nvar Constants_1 = __webpack_require__(2);\r\n/**\r\n * Registry of message handlers.\r\n * Safely executes individual handlers and aggregates results\r\n */\r\nvar MessageHandlerRegistry = /** @class */ (function () {\r\n    function MessageHandlerRegistry(logger) {\r\n        this.logger = logger;\r\n        this.messageHandlers = [];\r\n    }\r\n    MessageHandlerRegistry.prototype.register = function (handler) {\r\n        if (this.messageHandlers.some(function (item) { return item === handler; })) {\r\n            throw new Error('Registering the same handler twice is not allowed');\r\n        }\r\n        this.messageHandlers.push(handler);\r\n    };\r\n    MessageHandlerRegistry.prototype.clear = function () {\r\n        this.logger.debug('Clearing message handlers');\r\n        this.messageHandlers = [];\r\n    };\r\n    MessageHandlerRegistry.prototype.active = function () {\r\n        return (this.messageHandlers.length > 0);\r\n    };\r\n    MessageHandlerRegistry.prototype.handleMessage = function (message) {\r\n        var unhandledMessageResult = {\r\n            resultCode: Constants_1.UNHANDLED_MESSAGE_ACK,\r\n            isHandled: false\r\n        };\r\n        for (var _i = 0, _a = this.messageHandlers; _i < _a.length; _i++) {\r\n            var messageHandler = _a[_i];\r\n            var result = this.safeExecuteHandle(messageHandler, message);\r\n            if (result !== undefined && (result.isHandled === undefined || result.isHandled)) {\r\n                if (result.resultCode === undefined) {\r\n                    result.resultCode = Constants_1.HANDLED_MESSAGE_ACK;\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        return unhandledMessageResult;\r\n    };\r\n    MessageHandlerRegistry.prototype.safeExecuteHandle = function (handler, message) {\r\n        try {\r\n            return handler.handleMessage(message);\r\n        }\r\n        catch (exception) {\r\n            this.logger.warn(\"A trouter message handler is throwing exceptions. exception: \" + exception);\r\n            return undefined;\r\n        }\r\n    };\r\n    return MessageHandlerRegistry;\r\n}());\r\nexports.MessageHandlerRegistry = MessageHandlerRegistry;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable-next-line:export-name\r\nfunction addCacheAsBackupTo(provider) {\r\n    var _this = this;\r\n    var cachedToken;\r\n    return function (forceRefresh) { return __awaiter(_this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            if (forceRefresh) {\r\n                cachedToken = undefined;\r\n            }\r\n            return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                    provider(forceRefresh).then(function (token) {\r\n                        cachedToken = token;\r\n                        resolve(token);\r\n                    }).catch(function (error) {\r\n                        if (cachedToken !== undefined && cachedToken.length > 0) {\r\n                            resolve(cachedToken);\r\n                        }\r\n                        reject(error);\r\n                    });\r\n                })];\r\n        });\r\n    }); };\r\n}\r\nexports.addCacheAsBackupTo = addCacheAsBackupTo;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:strict-boolean-expressions\r\nvar Common_1 = __webpack_require__(3);\r\nvar Interfaces_1 = __webpack_require__(1);\r\nvar Logger_1 = __webpack_require__(0);\r\nvar TrouterConnection_1 = __webpack_require__(16);\r\nvar TrouterManagerFsm_1 = __webpack_require__(18);\r\n/**\r\n * Trouter implementation\r\n */\r\nvar TrouterManager = /** @class */ (function () {\r\n    function TrouterManager(logFunc, options, tokenProvider, listener) {\r\n        this.logFunc = logFunc;\r\n        this.options = options;\r\n        this.tokenProvider = tokenProvider;\r\n        this.listener = listener;\r\n        this.logger = new Logger_1.Logger('Manager', logFunc);\r\n        this.logger.info(\"Created TrouterManager with options \" + Common_1.toJson(this.options));\r\n        this.fsm = new TrouterManagerFsm_1.TrouterManagerFsm(logFunc, this);\r\n        this.baseEndpointUrl = '';\r\n        this.processedMessageLoss = {};\r\n    }\r\n    TrouterManager.prototype.start = function () {\r\n        this.fsm.start();\r\n    };\r\n    TrouterManager.prototype.stop = function () {\r\n        this.fsm.stop();\r\n    };\r\n    TrouterManager.prototype.configure = function (options) {\r\n        this.options = options;\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.configure(options);\r\n        }\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.configure(options);\r\n        }\r\n        this.logger.info(\"Reconfigured TrouterManager with options \" + Common_1.toJson(this.options));\r\n    };\r\n    TrouterManager.prototype.checkConnection = function (disconnectDetected) {\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.checkConnection(disconnectDetected);\r\n        }\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.checkConnection(disconnectDetected);\r\n        }\r\n    };\r\n    TrouterManager.prototype.resendRegistration = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.secondConnection !== undefined) {\r\n                    this.logger.info('Resending registration on the second/new connection');\r\n                    return [2 /*return*/, this.secondConnection.resendRegistration()];\r\n                }\r\n                if (this.firstConnection !== undefined) {\r\n                    this.logger.info('Resending registration on the first/current connection');\r\n                    return [2 /*return*/, this.firstConnection.resendRegistration()];\r\n                }\r\n                this.logger.info('No connection to resend registration on, will be done upon (re)connect');\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    TrouterManager.prototype.getServerState = function () {\r\n        if (this.firstConnection !== undefined) {\r\n            return this.firstConnection.getServerState();\r\n        }\r\n        return undefined;\r\n    };\r\n    /** Returns current state */\r\n    TrouterManager.prototype.getState = function () {\r\n        return this.fsm.getState();\r\n    };\r\n    //////////// IManagerWorker ////////////\r\n    TrouterManager.prototype.startFirstConnection = function () {\r\n        this.firstConnection = new TrouterConnection_1.TrouterConnection(this.logFunc, this.options, this, this.tokenProvider);\r\n        this.firstConnection.start();\r\n    };\r\n    TrouterManager.prototype.startSecondConnection = function () {\r\n        var userActivityState = this.firstConnection !== undefined\r\n            ? this.firstConnection.getUserActivityState()\r\n            : Interfaces_1.UserActivityState.Unknown;\r\n        this.secondConnection = new TrouterConnection_1.TrouterConnection(this.logFunc, this.options, this, this.tokenProvider, userActivityState);\r\n        this.secondConnection.start();\r\n    };\r\n    TrouterManager.prototype.stopFirstConnection = function (dontUnregister) {\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.stop(dontUnregister);\r\n            // Store first connection to be able to compare in onDisconnected() handler\r\n            this.storedFirstConnection = this.firstConnection;\r\n            this.firstConnection = undefined;\r\n        }\r\n    };\r\n    TrouterManager.prototype.stopSecondConnection = function (dontUnregister) {\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.stop(dontUnregister);\r\n            this.secondConnection = undefined;\r\n        }\r\n    };\r\n    TrouterManager.prototype.stopSecondConnectionDelayed = function () {\r\n        if (this.secondConnection !== undefined) {\r\n            var connection_1 = this.secondConnection;\r\n            this.secondConnection = undefined;\r\n            this.logger.info(\"Closing an inactive connection in \" + Math.round(this.options.lingeringConnectionDelayMs / 1000) + \"s\");\r\n            setTimeout(function () {\r\n                connection_1.stop(true);\r\n            }, this.options.lingeringConnectionDelayMs);\r\n        }\r\n    };\r\n    TrouterManager.prototype.switchConnections = function () {\r\n        var tmp = this.firstConnection;\r\n        this.firstConnection = this.secondConnection;\r\n        this.secondConnection = tmp;\r\n    };\r\n    TrouterManager.prototype.doesSecondConnectionExist = function () {\r\n        return this.secondConnection !== undefined;\r\n    };\r\n    TrouterManager.prototype.dispatchConnected = function () {\r\n        if (this.firstConnection !== undefined) {\r\n            var ss = this.firstConnection.getServerState();\r\n            var baseEndpointUrl = (ss.url.slice(-1) === '/') ? ss.url.slice(0, -1) : ss.url;\r\n            var connectionInfo = {\r\n                baseEndpointUrl: baseEndpointUrl,\r\n                newEndpointUrl: (baseEndpointUrl !== this.baseEndpointUrl),\r\n                c2cUrlBase: ss.c2cUrlBase,\r\n                clientId: ss.connectedClientId,\r\n                connectionId: ss.connectionId,\r\n                connectionTtlSec: ss.getRemainingTtlInSec()\r\n            };\r\n            this.baseEndpointUrl = baseEndpointUrl;\r\n            this.listener.onTrouterConnected(ss.url, connectionInfo);\r\n        }\r\n    };\r\n    TrouterManager.prototype.dispatchReconnecting = function () {\r\n        if (this.listener.onTrouterDisconnected) {\r\n            this.listener.onTrouterDisconnected();\r\n        }\r\n    };\r\n    TrouterManager.prototype.dispatchStopped = function () {\r\n        if (this.listener.onTrouterDisconnected) {\r\n            this.listener.onTrouterDisconnected();\r\n        }\r\n    };\r\n    //////////// IManagerConsumer ////////////\r\n    TrouterManager.prototype.onDownstreamRequest = function (connection, request, response) {\r\n        var req = {\r\n            id: request.id,\r\n            method: request.method,\r\n            path: \"/\" + request.shortUrl,\r\n            body: request.body,\r\n            headers: request.headers\r\n        };\r\n        var rsp = {\r\n            id: request.id,\r\n            status: 0,\r\n            headers: {},\r\n            body: '',\r\n            send: function () {\r\n                if (rsp.status <= 100 || rsp.status >= 999) {\r\n                    return 3 /* Incomplete */;\r\n                }\r\n                response.writeHead(rsp.status, rsp.headers);\r\n                return response.end(rsp.body);\r\n            }\r\n        };\r\n        this.listener.onTrouterRequest(req, rsp);\r\n    };\r\n    TrouterManager.prototype.onConnected = function (connection) {\r\n        this.fsm.onConnected(connection === this.firstConnection);\r\n    };\r\n    TrouterManager.prototype.onRegistered = function (connection) {\r\n        this.fsm.onRegistered(connection === this.firstConnection);\r\n    };\r\n    TrouterManager.prototype.onReconnecting = function (connection) {\r\n        this.fsm.onReconnecting(connection === this.firstConnection);\r\n    };\r\n    TrouterManager.prototype.onReconnectIsRequired = function (connection) {\r\n        this.fsm.onReconnectionRequired(connection === this.firstConnection);\r\n    };\r\n    TrouterManager.prototype.onDisconnected = function (connection) {\r\n        this.fsm.onDisconnected(connection === this.storedFirstConnection);\r\n    };\r\n    TrouterManager.prototype.setUserActivityState = function (state) {\r\n        if (this.secondConnection !== undefined) {\r\n            this.logger.info(\"Setting user activity state \" + Interfaces_1.UserActivityState[state] + \" on the second/new connection\");\r\n            this.secondConnection.setUserActivityState(state);\r\n            return;\r\n        }\r\n        if (this.firstConnection !== undefined) {\r\n            this.logger.info(\"Setting user activity state \" + Interfaces_1.UserActivityState[state] + \" on the first/current connection\");\r\n            this.firstConnection.setUserActivityState(state);\r\n            return;\r\n        }\r\n        throw new Error('setUserActivityState called too early');\r\n    };\r\n    TrouterManager.prototype.onTrouterMessageLost = function (indicators) {\r\n        var _this = this;\r\n        if (this.listener.onTrouterMessageLoss) {\r\n            if (indicators && indicators.length) {\r\n                // Filter out already seen dropped indicators and inform server that they are processed\r\n                var duplicates = indicators.filter(function (di) { return _this.processedMessageLoss[di.tag + \"-\" + di.etag] !== undefined; });\r\n                if (duplicates.length) {\r\n                    this.logger.warn('onTrouterMessageLoss - removing duplicates and sending event to server');\r\n                    this.sendProcessedDroppedIndicators(duplicates);\r\n                    indicators = indicators.filter(function (di) { return _this.processedMessageLoss[di.tag + \"-\" + di.etag] === undefined; });\r\n                    if (!indicators.length) {\r\n                        this.logger.warn('onTrouterMessageLoss - All the data are duplicated');\r\n                        return;\r\n                    }\r\n                }\r\n                // Send the data to the listeners\r\n                var messageLossProcessed = this.listener.onTrouterMessageLoss(indicators.map(function (di) { return di.tag; }));\r\n                if (!messageLossProcessed) {\r\n                    this.logger.warn('onTrouterMessageLoss - flow tags have not been processed by listeners');\r\n                    return;\r\n                }\r\n                // Update the cache\r\n                indicators.forEach(function (di) {\r\n                    _this.processedMessageLoss[di.tag + \"-\" + di.etag] = '';\r\n                });\r\n                this.sendProcessedDroppedIndicators(indicators);\r\n            }\r\n            else {\r\n                this.logger.warn('onTrouterMessageLoss - no flow tags have been provided');\r\n            }\r\n        }\r\n    };\r\n    TrouterManager.prototype.sendProcessedDroppedIndicators = function (messageLossIndicators) {\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.sendProcessedDroppedIndicators(messageLossIndicators);\r\n            return;\r\n        }\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.sendProcessedDroppedIndicators(messageLossIndicators);\r\n            return;\r\n        }\r\n    };\r\n    return TrouterManager;\r\n}());\r\nexports.TrouterManager = TrouterManager;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Util that encapsulates lifecycle of active trouter URL and manages waiter for the URL via promise\r\n */\r\nvar TrouterUrlPromise = /** @class */ (function () {\r\n    function TrouterUrlPromise(logger) {\r\n        this.logger = logger;\r\n    }\r\n    // tslint:disable-next-line:promise-function-async\r\n    TrouterUrlPromise.prototype.getPromise = function () {\r\n        var _this = this;\r\n        if (this.url !== undefined) {\r\n            this.logger.debug(\"[TrouterUrlPromise] returning previously resolved url: \" + this.url);\r\n            return Promise.resolve(this.url);\r\n        }\r\n        if (this.pendingPromise === undefined) {\r\n            this.logger.debug('[TrouterUrlPromise] creating and returning promise');\r\n            // tslint:disable-next-line:promise-must-complete\r\n            this.pendingPromise = new Promise(function (resolve, reject) {\r\n                _this.pendingPromiseResolveRef = resolve;\r\n                _this.pendingPromiseRejectRef = reject;\r\n            });\r\n        }\r\n        else {\r\n            this.logger.debug('[TrouterUrlPromise] returning existing promise');\r\n        }\r\n        return this.pendingPromise;\r\n    };\r\n    TrouterUrlPromise.prototype.resolveUrl = function (url) {\r\n        this.url = url;\r\n        this.logger.debug(\"[TrouterUrlPromise] got url: \" + this.url);\r\n        var resolveCallback = this.pendingPromiseResolveRef;\r\n        this.pendingPromise = undefined;\r\n        this.pendingPromiseResolveRef = undefined;\r\n        this.pendingPromiseRejectRef = undefined;\r\n        if (resolveCallback !== undefined) {\r\n            this.logger.debug('[TrouterUrlPromise] resolving promise');\r\n            resolveCallback(url);\r\n        }\r\n    };\r\n    TrouterUrlPromise.prototype.rejectUrl = function (error) {\r\n        this.logger.debug('[TrouterUrlPromise] aborting');\r\n        var rejectCallback = this.pendingPromiseRejectRef;\r\n        this.url = undefined;\r\n        this.pendingPromise = undefined;\r\n        this.pendingPromiseResolveRef = undefined;\r\n        this.pendingPromiseRejectRef = undefined;\r\n        if (rejectCallback !== undefined) {\r\n            this.logger.debug('[TrouterUrlPromise] rejecting promise');\r\n            rejectCallback(error);\r\n        }\r\n    };\r\n    TrouterUrlPromise.prototype.resetUrl = function () {\r\n        this.logger.debug('[TrouterUrlPromise] resetting url');\r\n        this.url = undefined;\r\n    };\r\n    return TrouterUrlPromise;\r\n}());\r\nexports.TrouterUrlPromise = TrouterUrlPromise;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {/** Socket.IO.js build:0.9.6, development. Copyright(c) 2011 LearnBoost <dev@learnboost.com> MIT Licensed */\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, global) {\r\n\r\n  /**\r\n   * IO namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  var io = exports;\r\n\r\n  /**\r\n   * Socket.IO version\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  io.version = '0.9.6';\r\n\r\n  /**\r\n   * Protocol implemented.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  io.protocol = 1;\r\n\r\n  /**\r\n   * Available transports, these will be populated with the available transports\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  io.transports = [];\r\n\r\n  /**\r\n   * Keep track of jsonp callbacks.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.j = [];\r\n\r\n  /**\r\n   * Keep track of our io.Sockets\r\n   *\r\n   * @api private\r\n   */\r\n  io.sockets = {};\r\n\r\n\r\n  /**\r\n   * Manages connections to hosts.\r\n   *\r\n   * @param {String} uri\r\n   * @Param {Boolean} force creation of new socket (defaults to false)\r\n   * @api public\r\n   */\r\n\r\n  io.connect = function (host, details) {\r\n    var uri = io.util.parseUri(host)\r\n      , uuri\r\n      , socket;\r\n\r\n    if (global && global.location) {\r\n      uri.protocol = uri.protocol || global.location.protocol.slice(0, -1);\r\n      uri.host = uri.host || (global.document\r\n        ? global.document.domain : global.location.hostname);\r\n      uri.port = uri.port || global.location.port;\r\n    }\r\n\r\n    uuri = io.util.uniqueUri(uri);\r\n\r\n    var options = {\r\n        host: uri.host\r\n      , secure: 'https' == uri.protocol\r\n      , port: uri.port || ('https' == uri.protocol ? 443 : 80)\r\n      , query: uri.query || ''\r\n    };\r\n\r\n    io.util.merge(options, details);\r\n\r\n    if (options['force new connection'] || !io.sockets[uuri]) {\r\n      socket = new io.Socket(options);\r\n    }\r\n\r\n    if (!options['force new connection'] && socket) {\r\n      io.sockets[uuri] = socket;\r\n    }\r\n\r\n    socket = socket || io.sockets[uuri];\r\n\r\n    // if path is different from '' or /\r\n    return socket.of(uri.path.length > 1 ? uri.path : '');\r\n  };\r\n\r\n})(\r\n     true ? module.exports : (this.io = {})\r\n  , 'undefined' === typeof global ? window : global);\r\n\r\n// Workaround inside webpack\r\nvar io = module.exports;\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, global) {\r\n\r\n  /**\r\n   * Utilities namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  var util = exports.util = {};\r\n\r\n  /**\r\n   * Parses an URI\r\n   *\r\n   * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n   * @api public\r\n   */\r\n\r\n  var re = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\n  var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password',\r\n               'host', 'port', 'relative', 'path', 'directory', 'file', 'query',\r\n               'anchor'];\r\n\r\n  util.parseUri = function (str) {\r\n    var m = re.exec(str || '')\r\n      , uri = {}\r\n      , i = 14;\r\n\r\n    while (i--) {\r\n      uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    return uri;\r\n  };\r\n\r\n  /**\r\n   * Produces a unique url that identifies a Socket.IO connection.\r\n   *\r\n   * @param {Object} uri\r\n   * @api public\r\n   */\r\n\r\n  util.uniqueUri = function (uri) {\r\n    var protocol = uri.protocol\r\n      , host = uri.host\r\n      , port = uri.port;\r\n\r\n    if ('document' in global) {\r\n      host = host || document.domain;\r\n      port = port || (protocol == 'https'\r\n        && document.location.protocol !== 'https:' ? 443 : document.location.port);\r\n    } else {\r\n      host = host || 'localhost';\r\n\r\n      if (!port && protocol == 'https') {\r\n        port = 443;\r\n      }\r\n    }\r\n\r\n    return (protocol || 'http') + '://' + host + ':' + (port || 80);\r\n  };\r\n\r\n  /**\r\n   * Mergest 2 query strings in to once unique query string\r\n   *\r\n   * @param {String} base\r\n   * @param {String} addition\r\n   * @api public\r\n   */\r\n\r\n  util.query = function (base, addition) {\r\n    var query = util.chunkQuery(base || '')\r\n      , components = [];\r\n\r\n    util.merge(query, util.chunkQuery(addition || ''));\r\n    for (var part in query) {\r\n      if (query.hasOwnProperty(part)) {\r\n        components.push(part + '=' + query[part]);\r\n      }\r\n    }\r\n\r\n    return components.length ? '?' + components.join('&') : '';\r\n  };\r\n\r\n  /**\r\n   * Transforms a querystring in to an object\r\n   *\r\n   * @param {String} qs\r\n   * @api public\r\n   */\r\n\r\n  util.chunkQuery = function (qs) {\r\n    var query = {}\r\n      , params = qs.split('&')\r\n      , i = 0\r\n      , l = params.length\r\n      , kv;\r\n\r\n    for (; i < l; ++i) {\r\n      kv = params[i].split('=');\r\n      if (kv[0]) {\r\n        query[kv[0]] = kv[1];\r\n      }\r\n    }\r\n\r\n    return query;\r\n  };\r\n\r\n  /**\r\n   * Executes the given function when the page is loaded.\r\n   *\r\n   *     io.util.load(function () { console.log('page loaded'); });\r\n   *\r\n   * @param {Function} fn\r\n   * @api public\r\n   */\r\n\r\n  var pageLoaded = false;\r\n\r\n  util.load = function (fn) {\r\n    if ('document' in global && document.readyState === 'complete' || pageLoaded) {\r\n      return fn();\r\n    }\r\n\r\n    util.on(global, 'load', fn, false);\r\n  };\r\n\r\n  /**\r\n   * Adds an event.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  util.on = function (element, event, fn, capture) {\r\n    if (element.attachEvent) {\r\n      element.attachEvent('on' + event, fn);\r\n    } else if (element.addEventListener) {\r\n      element.addEventListener(event, fn, capture);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Generates the correct `XMLHttpRequest` for regular and cross domain requests.\r\n   *\r\n   * @param {Boolean} [xdomain] Create a request that can be used cross domain.\r\n   * @returns {XMLHttpRequest|false} If we can create a XMLHttpRequest.\r\n   * @api private\r\n   */\r\n\r\n  util.request = function (xdomain) {\r\n\r\n    if (xdomain && 'undefined' != typeof XDomainRequest) {\r\n      return new XDomainRequest();\r\n    }\r\n\r\n    if ('undefined' != typeof XMLHttpRequest && (!xdomain || util.ua.hasCORS)) {\r\n      return new XMLHttpRequest();\r\n    }\r\n\r\n    if (!xdomain) {\r\n      try {\r\n        return new window[(['Active'].concat('Object').join('X'))]('Microsoft.XMLHTTP');\r\n      } catch(e) { }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * XHR based transport constructor.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  /**\r\n   * Change the internal pageLoaded value.\r\n   */\r\n\r\n  if ('undefined' != typeof window) {\r\n    util.load(function () {\r\n      pageLoaded = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Defers a function to ensure a spinner is not displayed by the browser\r\n   *\r\n   * @param {Function} fn\r\n   * @api public\r\n   */\r\n\r\n  util.defer = function (fn) {\r\n    if (!util.ua.webkit || 'undefined' != typeof importScripts) {\r\n      return fn();\r\n    }\r\n\r\n    util.load(function () {\r\n      setTimeout(fn, 100);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Merges two objects.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.merge = function merge (target, additional, deep, lastseen) {\r\n    var seen = lastseen || []\r\n      , depth = typeof deep == 'undefined' ? 2 : deep\r\n      , prop;\r\n\r\n    for (prop in additional) {\r\n      if (additional.hasOwnProperty(prop) && util.indexOf(seen, prop) < 0) {\r\n        if (typeof target[prop] !== 'object' || !depth) {\r\n          target[prop] = additional[prop];\r\n          seen.push(additional[prop]);\r\n        } else {\r\n          util.merge(target[prop], additional[prop], depth - 1, seen);\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  };\r\n\r\n  /**\r\n   * Merges prototypes from objects\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.mixin = function (ctor, ctor2) {\r\n    util.merge(ctor.prototype, ctor2.prototype);\r\n  };\r\n\r\n  /**\r\n   * Shortcut for prototypical and static inheritance.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  util.inherit = function (ctor, ctor2) {\r\n    function f() {};\r\n    f.prototype = ctor2.prototype;\r\n    ctor.prototype = new f;\r\n  };\r\n\r\n  /**\r\n   * Checks if the given object is an Array.\r\n   *\r\n   *     io.util.isArray([]); // true\r\n   *     io.util.isArray({}); // false\r\n   *\r\n   * @param Object obj\r\n   * @api public\r\n   */\r\n\r\n  util.isArray = Array.isArray || function (obj) {\r\n    return Object.prototype.toString.call(obj) === '[object Array]';\r\n  };\r\n\r\n  /**\r\n   * Intersects values of two arrays into a third\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.intersect = function (arr, arr2) {\r\n    var ret = []\r\n      , longest = arr.length > arr2.length ? arr : arr2\r\n      , shortest = arr.length > arr2.length ? arr2 : arr;\r\n\r\n    for (var i = 0, l = shortest.length; i < l; i++) {\r\n      if (~util.indexOf(longest, shortest[i]))\r\n        ret.push(shortest[i]);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * Array indexOf compatibility.\r\n   *\r\n   * @see bit.ly/a5Dxa2\r\n   * @api public\r\n   */\r\n\r\n  util.indexOf = function (arr, o, i) {\r\n\r\n    for (var j = arr.length, i = i < 0 ? i + j < 0 ? 0 : i + j : i || 0;\r\n         i < j && arr[i] !== o; i++) {}\r\n\r\n    return j <= i ? -1 : i;\r\n  };\r\n\r\n  /**\r\n   * Converts enumerables to array.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.toArray = function (enu) {\r\n    var arr = [];\r\n\r\n    for (var i = 0, l = enu.length; i < l; i++)\r\n      arr.push(enu[i]);\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * UA / engines detection namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  util.ua = {};\r\n\r\n  /**\r\n   * Whether the UA supports CORS for XHR.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.ua.hasCORS = 'undefined' != typeof XMLHttpRequest && (function () {\r\n    try {\r\n      var a = new XMLHttpRequest();\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n\r\n    return a.withCredentials != undefined;\r\n  })();\r\n\r\n  /**\r\n   * Detect webkit.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.ua.webkit = 'undefined' != typeof navigator\r\n    && /webkit/i.test(navigator.userAgent);\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' === typeof global ? window : global);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.EventEmitter = EventEmitter;\r\n\r\n  /**\r\n   * Event emitter constructor.\r\n   *\r\n   * @api public.\r\n   */\r\n\r\n  function EventEmitter () {};\r\n\r\n  /**\r\n   * Adds a listener\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.on = function (name, fn) {\r\n    if (!this.$events) {\r\n      this.$events = {};\r\n    }\r\n\r\n    if (!this.$events[name]) {\r\n      this.$events[name] = fn;\r\n    } else if (io.util.isArray(this.$events[name])) {\r\n      this.$events[name].push(fn);\r\n    } else {\r\n      this.$events[name] = [this.$events[name], fn];\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n  /**\r\n   * Adds a volatile listener.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.once = function (name, fn) {\r\n    var self = this;\r\n\r\n    function on () {\r\n      self.removeListener(name, on);\r\n      fn.apply(this, arguments);\r\n    };\r\n\r\n    on.listener = fn;\r\n    this.on(name, on);\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Removes a listener.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.removeListener = function (name, fn) {\r\n    if (this.$events && this.$events[name]) {\r\n      var list = this.$events[name];\r\n\r\n      if (io.util.isArray(list)) {\r\n        var pos = -1;\r\n\r\n        for (var i = 0, l = list.length; i < l; i++) {\r\n          if (list[i] === fn || (list[i].listener && list[i].listener === fn)) {\r\n            pos = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (pos < 0) {\r\n          return this;\r\n        }\r\n\r\n        list.splice(pos, 1);\r\n\r\n        if (!list.length) {\r\n          delete this.$events[name];\r\n        }\r\n      } else if (list === fn || (list.listener && list.listener === fn)) {\r\n        delete this.$events[name];\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Removes all listeners for an event.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.removeAllListeners = function (name) {\r\n    // TODO: enable this when node 0.5 is stable\r\n    //if (name === undefined) {\r\n      //this.$events = {};\r\n      //return this;\r\n    //}\r\n\r\n    if (this.$events && this.$events[name]) {\r\n      this.$events[name] = null;\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Gets all listeners for a certain event.\r\n   *\r\n   * @api publci\r\n   */\r\n\r\n  EventEmitter.prototype.listeners = function (name) {\r\n    if (!this.$events) {\r\n      this.$events = {};\r\n    }\r\n\r\n    if (!this.$events[name]) {\r\n      this.$events[name] = [];\r\n    }\r\n\r\n    if (!io.util.isArray(this.$events[name])) {\r\n      this.$events[name] = [this.$events[name]];\r\n    }\r\n\r\n    return this.$events[name];\r\n  };\r\n\r\n  /**\r\n   * Emits an event.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.emit = function (name) {\r\n    if (!this.$events) {\r\n      return false;\r\n    }\r\n\r\n    var handler = this.$events[name];\r\n\r\n    if (!handler) {\r\n      return false;\r\n    }\r\n\r\n    var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n    if ('function' == typeof handler) {\r\n      handler.apply(this, args);\r\n    } else if (io.util.isArray(handler)) {\r\n      var listeners = handler.slice();\r\n\r\n      for (var i = 0, l = listeners.length; i < l; i++) {\r\n        listeners[i].apply(this, args);\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n/**\r\n * Based on JSON2 (http://www.JSON.org/js.html).\r\n */\r\n\r\n(function (exports, nativeJSON) {\r\n  \"use strict\";\r\n\r\n  // use native JSON if it's available\r\n  if (nativeJSON && nativeJSON.parse){\r\n    return exports.JSON = {\r\n      parse: nativeJSON.parse\r\n    , stringify: nativeJSON.stringify\r\n    }\r\n  }\r\n\r\n  var JSON = exports.JSON = {};\r\n\r\n  function f(n) {\r\n      // Format integers to have at least two digits.\r\n      return n < 10 ? '0' + n : n;\r\n  }\r\n\r\n  function date(d, key) {\r\n    return isFinite(d.valueOf()) ?\r\n        d.getUTCFullYear()     + '-' +\r\n        f(d.getUTCMonth() + 1) + '-' +\r\n        f(d.getUTCDate())      + 'T' +\r\n        f(d.getUTCHours())     + ':' +\r\n        f(d.getUTCMinutes())   + ':' +\r\n        f(d.getUTCSeconds())   + 'Z' : null;\r\n  };\r\n\r\n  var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\r\n      escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\r\n      gap,\r\n      indent,\r\n      meta = {    // table of character substitutions\r\n          '\\b': '\\\\b',\r\n          '\\t': '\\\\t',\r\n          '\\n': '\\\\n',\r\n          '\\f': '\\\\f',\r\n          '\\r': '\\\\r',\r\n          '\"' : '\\\\\"',\r\n          '\\\\': '\\\\\\\\'\r\n      },\r\n      rep;\r\n\r\n\r\n  function quote(string) {\r\n\r\n// If the string contains no control characters, no quote characters, and no\r\n// backslash characters, then we can safely slap some quotes around it.\r\n// Otherwise we must also replace the offending characters with safe escape\r\n// sequences.\r\n\r\n      escapable.lastIndex = 0;\r\n      return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\r\n          var c = meta[a];\r\n          return typeof c === 'string' ? c :\r\n              '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\r\n      }) + '\"' : '\"' + string + '\"';\r\n  }\r\n\r\n\r\n  function str(key, holder) {\r\n\r\n// Produce a string from holder[key].\r\n\r\n      var i,          // The loop counter.\r\n          k,          // The member key.\r\n          v,          // The member value.\r\n          length,\r\n          mind = gap,\r\n          partial,\r\n          value = holder[key];\r\n\r\n// If the value has a toJSON method, call it to obtain a replacement value.\r\n\r\n      if (value instanceof Date) {\r\n          value = date(key);\r\n      }\r\n\r\n// If we were called with a replacer function, then call the replacer to\r\n// obtain a replacement value.\r\n\r\n      if (typeof rep === 'function') {\r\n          value = rep.call(holder, key, value);\r\n      }\r\n\r\n// What happens next depends on the value's type.\r\n\r\n      switch (typeof value) {\r\n      case 'string':\r\n          return quote(value);\r\n\r\n      case 'number':\r\n\r\n// JSON numbers must be finite. Encode non-finite numbers as null.\r\n\r\n          return isFinite(value) ? String(value) : 'null';\r\n\r\n      case 'boolean':\r\n      case 'null':\r\n\r\n// If the value is a boolean or null, convert it to a string. Note:\r\n// typeof null does not produce 'null'. The case is included here in\r\n// the remote chance that this gets fixed someday.\r\n\r\n          return String(value);\r\n\r\n// If the type is 'object', we might be dealing with an object or an array or\r\n// null.\r\n\r\n      case 'object':\r\n\r\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\r\n// so watch out for that case.\r\n\r\n          if (!value) {\r\n              return 'null';\r\n          }\r\n\r\n// Make an array to hold the partial results of stringifying this object value.\r\n\r\n          gap += indent;\r\n          partial = [];\r\n\r\n// Is the value an array?\r\n\r\n          if (Object.prototype.toString.apply(value) === '[object Array]') {\r\n\r\n// The value is an array. Stringify every element. Use null as a placeholder\r\n// for non-JSON values.\r\n\r\n              length = value.length;\r\n              for (i = 0; i < length; i += 1) {\r\n                  partial[i] = str(i, value) || 'null';\r\n              }\r\n\r\n// Join all of the elements together, separated with commas, and wrap them in\r\n// brackets.\r\n\r\n              v = partial.length === 0 ? '[]' : gap ?\r\n                  '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\r\n                  '[' + partial.join(',') + ']';\r\n              gap = mind;\r\n              return v;\r\n          }\r\n\r\n// If the replacer is an array, use it to select the members to be stringified.\r\n\r\n          if (rep && typeof rep === 'object') {\r\n              length = rep.length;\r\n              for (i = 0; i < length; i += 1) {\r\n                  if (typeof rep[i] === 'string') {\r\n                      k = rep[i];\r\n                      v = str(k, value);\r\n                      if (v) {\r\n                          partial.push(quote(k) + (gap ? ': ' : ':') + v);\r\n                      }\r\n                  }\r\n              }\r\n          } else {\r\n\r\n// Otherwise, iterate through all of the keys in the object.\r\n\r\n              for (k in value) {\r\n                  if (Object.prototype.hasOwnProperty.call(value, k)) {\r\n                      v = str(k, value);\r\n                      if (v) {\r\n                          partial.push(quote(k) + (gap ? ': ' : ':') + v);\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n\r\n// Join all of the member texts together, separated with commas,\r\n// and wrap them in braces.\r\n\r\n          v = partial.length === 0 ? '{}' : gap ?\r\n              '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\r\n              '{' + partial.join(',') + '}';\r\n          gap = mind;\r\n          return v;\r\n      }\r\n  }\r\n\r\n// If the JSON object does not yet have a stringify method, give it one.\r\n\r\n  JSON.stringify = function (value, replacer, space) {\r\n\r\n// The stringify method takes a value and an optional replacer, and an optional\r\n// space parameter, and returns a JSON text. The replacer can be a function\r\n// that can replace values, or an array of strings that will select the keys.\r\n// A default replacer method can be provided. Use of the space parameter can\r\n// produce text that is more easily readable.\r\n\r\n      var i;\r\n      gap = '';\r\n      indent = '';\r\n\r\n// If the space parameter is a number, make an indent string containing that\r\n// many spaces.\r\n\r\n      if (typeof space === 'number') {\r\n          for (i = 0; i < space; i += 1) {\r\n              indent += ' ';\r\n          }\r\n\r\n// If the space parameter is a string, it will be used as the indent string.\r\n\r\n      } else if (typeof space === 'string') {\r\n          indent = space;\r\n      }\r\n\r\n// If there is a replacer, it must be a function or an array.\r\n// Otherwise, throw an error.\r\n\r\n      rep = replacer;\r\n      if (replacer && typeof replacer !== 'function' &&\r\n              (typeof replacer !== 'object' ||\r\n              typeof replacer.length !== 'number')) {\r\n          throw new Error('JSON.stringify');\r\n      }\r\n\r\n// Make a fake root object containing our value under the key of ''.\r\n// Return the result of stringifying the value.\r\n\r\n      return str('', {'': value});\r\n  };\r\n\r\n// If the JSON object does not yet have a parse method, give it one.\r\n\r\n  JSON.parse = function (text, reviver) {\r\n  // The parse method takes a text and an optional reviver function, and returns\r\n  // a JavaScript value if the text is a valid JSON text.\r\n\r\n      var j;\r\n\r\n      function walk(holder, key) {\r\n\r\n  // The walk method is used to recursively walk the resulting structure so\r\n  // that modifications can be made.\r\n\r\n          var k, v, value = holder[key];\r\n          if (value && typeof value === 'object') {\r\n              for (k in value) {\r\n                  if (Object.prototype.hasOwnProperty.call(value, k)) {\r\n                      v = walk(value, k);\r\n                      if (v !== undefined) {\r\n                          value[k] = v;\r\n                      } else {\r\n                          delete value[k];\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          return reviver.call(holder, key, value);\r\n      }\r\n\r\n\r\n  // Parsing happens in four stages. In the first stage, we replace certain\r\n  // Unicode characters with escape sequences. JavaScript handles many characters\r\n  // incorrectly, either silently deleting them, or treating them as line endings.\r\n\r\n      text = String(text);\r\n      cx.lastIndex = 0;\r\n      if (cx.test(text)) {\r\n          text = text.replace(cx, function (a) {\r\n              return '\\\\u' +\r\n                  ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\r\n          });\r\n      }\r\n\r\n  // In the second stage, we run the text against regular expressions that look\r\n  // for non-JSON patterns. We are especially concerned with '()' and 'new'\r\n  // because they can cause invocation, and '=' because it can cause mutation.\r\n  // But just to be safe, we want to reject all unexpected forms.\r\n\r\n  // We split the second stage into 4 regexp operations in order to work around\r\n  // crippling inefficiencies in IE's and Safari's regexp engines. First we\r\n  // replace the JSON backslash pairs with '@' (a non-JSON character). Second, we\r\n  // replace all simple value tokens with ']' characters. Third, we delete all\r\n  // open brackets that follow a colon or comma or that begin the text. Finally,\r\n  // we look to see that the remaining characters are only whitespace or ']' or\r\n  // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\r\n\r\n      if (/^[\\],:{}\\s]*$/\r\n              .test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')\r\n                  .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\r\n                  .replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\r\n\r\n  // In the third stage we use the eval function to compile the text into a\r\n  // JavaScript structure. The '{' operator is subject to a syntactic ambiguity\r\n  // in JavaScript: it can begin a block or an object literal. We wrap the text\r\n  // in parens to eliminate the ambiguity.\r\n\r\n          j = eval('(' + text + ')');\r\n\r\n  // In the optional fourth stage, we recursively walk the new structure, passing\r\n  // each name/value pair to a reviver function for possible transformation.\r\n\r\n          return typeof reviver === 'function' ?\r\n              walk({'': j}, '') : j;\r\n      }\r\n\r\n  // If the text is not JSON parseable, then a SyntaxError is thrown.\r\n\r\n      throw new SyntaxError('JSON.parse');\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , typeof JSON !== 'undefined' ? JSON : undefined\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Parser namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  var parser = exports.parser = {};\r\n\r\n  /**\r\n   * Packet types.\r\n   */\r\n\r\n  var packets = parser.packets = [\r\n      'disconnect'\r\n    , 'connect'\r\n    , 'heartbeat'\r\n    , 'message'\r\n    , 'json'\r\n    , 'event'\r\n    , 'ack'\r\n    , 'error'\r\n    , 'noop'\r\n  ];\r\n\r\n  /**\r\n   * Errors reasons.\r\n   */\r\n\r\n  var reasons = parser.reasons = [\r\n      'transport not supported'\r\n    , 'client not handshaken'\r\n    , 'unauthorized'\r\n  ];\r\n\r\n  /**\r\n   * Errors advice.\r\n   */\r\n\r\n  var advice = parser.advice = [\r\n      'reconnect'\r\n  ];\r\n\r\n  /**\r\n   * Shortcuts.\r\n   */\r\n\r\n  var JSON = io.JSON\r\n    , indexOf = io.util.indexOf;\r\n\r\n  /**\r\n   * Encodes a packet.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  parser.encodePacket = function (packet) {\r\n    var type = indexOf(packets, packet.type)\r\n      , id = packet.id || ''\r\n      , endpoint = packet.endpoint || ''\r\n      , ack = packet.ack\r\n      , data = null;\r\n\r\n    switch (packet.type) {\r\n      case 'error':\r\n        var reason = packet.reason ? indexOf(reasons, packet.reason) : ''\r\n          , adv = packet.advice ? indexOf(advice, packet.advice) : '';\r\n\r\n        if (reason !== '' || adv !== '')\r\n          data = reason + (adv !== '' ? ('+' + adv) : '');\r\n\r\n        break;\r\n\r\n      case 'message':\r\n        if (packet.data !== '')\r\n          data = packet.data;\r\n        break;\r\n\r\n      case 'event':\r\n        var ev = { name: packet.name };\r\n\r\n        if (packet.args && packet.args.length) {\r\n          ev.args = packet.args;\r\n        }\r\n\r\n        data = JSON.stringify(ev);\r\n        break;\r\n\r\n      case 'json':\r\n        data = JSON.stringify(packet.data);\r\n        break;\r\n\r\n      case 'connect':\r\n        if (packet.qs)\r\n          data = packet.qs;\r\n        break;\r\n\r\n      case 'ack':\r\n        data = packet.ackId\r\n          + (packet.args && packet.args.length\r\n              ? '+' + JSON.stringify(packet.args) : '');\r\n        break;\r\n    }\r\n\r\n    // construct packet with required fragments\r\n    var encoded = [\r\n        type\r\n      , id + (ack == 'data' ? '+' : '')\r\n      , endpoint\r\n    ];\r\n\r\n    // data fragment is optional\r\n    if (data !== null && data !== undefined)\r\n      encoded.push(data);\r\n\r\n    return encoded.join(':');\r\n  };\r\n\r\n  /**\r\n   * Encodes multiple messages (payload).\r\n   *\r\n   * @param {Array} messages\r\n   * @api private\r\n   */\r\n\r\n  parser.encodePayload = function (packets) {\r\n    var decoded = '';\r\n\r\n    if (packets.length == 1)\r\n      return packets[0];\r\n\r\n    for (var i = 0, l = packets.length; i < l; i++) {\r\n      var packet = packets[i];\r\n      decoded += '\\ufffd' + packet.length + '\\ufffd' + packets[i];\r\n    }\r\n\r\n    return decoded;\r\n  };\r\n\r\n  /**\r\n   * Decodes a packet\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  var regexp = /([^:]+):([0-9]+)?(\\+)?:([^:]+)?:?([\\s\\S]*)?/;\r\n\r\n  parser.decodePacket = function (data) {\r\n    var pieces = data.match(regexp);\r\n\r\n    if (!pieces) return {};\r\n\r\n    var id = pieces[2] || ''\r\n      , data = pieces[5] || ''\r\n      , packet = {\r\n            type: packets[pieces[1]]\r\n          , endpoint: pieces[4] || ''\r\n        };\r\n\r\n    // whether we need to acknowledge the packet\r\n    if (id) {\r\n      packet.id = id;\r\n      if (pieces[3])\r\n        packet.ack = 'data';\r\n      else\r\n        packet.ack = true;\r\n    }\r\n\r\n    // handle different packet types\r\n    switch (packet.type) {\r\n      case 'error':\r\n        var pieces = data.split('+');\r\n        packet.reason = reasons[pieces[0]] || '';\r\n        packet.advice = advice[pieces[1]] || '';\r\n        break;\r\n\r\n      case 'message':\r\n        packet.data = data || '';\r\n        break;\r\n\r\n      case 'event':\r\n        try {\r\n          var opts = JSON.parse(data);\r\n          packet.name = opts.name;\r\n          packet.args = opts.args;\r\n        } catch (e) { }\r\n\r\n        packet.args = packet.args || [];\r\n        break;\r\n\r\n      case 'json':\r\n        try {\r\n          packet.data = JSON.parse(data);\r\n        } catch (e) { }\r\n        break;\r\n\r\n      case 'connect':\r\n        packet.qs = data || '';\r\n        break;\r\n\r\n      case 'ack':\r\n        var pieces = data.match(/^([0-9]+)(\\+)?(.*)/);\r\n        if (pieces) {\r\n          packet.ackId = pieces[1];\r\n          packet.args = [];\r\n\r\n          if (pieces[3]) {\r\n            try {\r\n              packet.args = pieces[3] ? JSON.parse(pieces[3]) : [];\r\n            } catch (e) { }\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'disconnect':\r\n      case 'heartbeat':\r\n        break;\r\n    };\r\n\r\n    return packet;\r\n  };\r\n\r\n  /**\r\n   * Decodes data payload. Detects multiple messages\r\n   *\r\n   * @return {Array} messages\r\n   * @api public\r\n   */\r\n\r\n  parser.decodePayload = function (data) {\r\n    // IE doesn't like data[i] for unicode chars, charAt works fine\r\n    if (data.charAt(0) == '\\ufffd') {\r\n      var ret = [];\r\n\r\n      for (var i = 1, length = ''; i < data.length; i++) {\r\n        if (data.charAt(i) == '\\ufffd') {\r\n          ret.push(parser.decodePacket(data.substr(i + 1).substr(0, length)));\r\n          i += Number(length) + 1;\r\n          length = '';\r\n        } else {\r\n          length += data.charAt(i);\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    } else {\r\n      return [parser.decodePacket(data)];\r\n    }\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.Transport = Transport;\r\n\r\n  /**\r\n   * This is the transport template for all supported transport methods.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  function Transport (socket, sessid) {\r\n    this.socket = socket;\r\n    this.sessid = sessid;\r\n    this.connectErrorCallback = undefined;\r\n    this.isOpened = false;\r\n  };\r\n\r\n  /**\r\n   * Apply EventEmitter mixin.\r\n   */\r\n\r\n  io.util.mixin(Transport, io.EventEmitter);\r\n\r\n  /**\r\n   * Handles the response from the server. When a new response is received\r\n   * it will automatically update the timeout, decode the message and\r\n   * forwards the response to the onMessage function for further processing.\r\n   *\r\n   * @param {String} data Response from the server.\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onData = function (data) {\r\n    this.clearCloseTimeout();\r\n\r\n    // If the connection in currently open (or in a reopening state) reset the close\r\n    // timeout since we have just received data. This check is necessary so\r\n    // that we don't reset the timeout on an explicitly disconnected connection.\r\n    if (this.socket.connected || this.socket.connecting || this.socket.reconnecting) {\r\n      this.setCloseTimeout();\r\n    }\r\n\r\n    if (data !== '') {\r\n      // todo: we should only do decodePayload for xhr transports\r\n      var msgs = io.parser.decodePayload(data);\r\n\r\n      if (msgs && msgs.length) {\r\n        for (var i = 0, l = msgs.length; i < l; i++) {\r\n          this.onPacket(msgs[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Handles packets.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onPacket = function (packet) {\r\n    this.socket.setHeartbeatTimeout();\r\n\r\n    if (packet.type == 'heartbeat') {\r\n      return this.onHeartbeat();\r\n    }\r\n\r\n    if (packet.type == 'connect' && packet.endpoint == '') {\r\n      this.onConnect();\r\n    }\r\n\r\n    if (packet.type == 'error' && packet.advice == 'reconnect') {\r\n      this.isOpened = false;\r\n    }\r\n\r\n    this.socket.onPacket(packet);\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sets close timeout\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.setCloseTimeout = function () {\r\n    if (!this.closeTimeout) {\r\n      var self = this;\r\n\r\n      this.closeTimeout = setTimeout(function () {\r\n        self.onDisconnect();\r\n      }, this.socket.closeTimeout);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called when transport disconnects.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onDisconnect = function () {\r\n    if (this.close && this.isOpened) this.close();\r\n    this.clearTimeouts();\r\n    this.socket.onDisconnect();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Called when transport connects\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onConnect = function () {\r\n    this.socket.onConnect();\r\n    this.connectErrorCallback = undefined;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clears close timeout\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.clearCloseTimeout = function () {\r\n    if (this.closeTimeout) {\r\n      clearTimeout(this.closeTimeout);\r\n      this.closeTimeout = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Clear timeouts\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.clearTimeouts = function () {\r\n    this.clearCloseTimeout();\r\n\r\n    if (this.reopenTimeout) {\r\n      clearTimeout(this.reopenTimeout);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Sends a packet\r\n   *\r\n   * @param {Object} packet object.\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.packet = function (packet) {\r\n    this.send(io.parser.encodePacket(packet));\r\n  };\r\n\r\n  /**\r\n   * Send the received heartbeat message back to server. So the server\r\n   * knows we are still connected.\r\n   *\r\n   * @param {String} heartbeat Heartbeat response from the server.\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onHeartbeat = function (heartbeat) {\r\n    this.packet({ type: 'heartbeat' });\r\n  };\r\n\r\n  /**\r\n   * Called when the transport opens.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onOpen = function () {\r\n    this.isOpened = true;\r\n    this.clearCloseTimeout();\r\n    this.socket.onOpen();\r\n  };\r\n\r\n  /**\r\n   * Notifies the base when the connection with the Socket.IO server\r\n   * has been disconnected.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onClose = function () {\r\n    var self = this;\r\n\r\n    /* FIXME: reopen delay causing a infinit loop\r\n    this.reopenTimeout = setTimeout(function () {\r\n      self.open();\r\n    }, this.socket.options['reopen delay']);*/\r\n\r\n    this.isOpened = false;\r\n    this.socket.onClose();\r\n    this.onDisconnect();\r\n  };\r\n\r\n  /**\r\n   * Generates a connection url based on the Socket.IO URL Protocol.\r\n   * See <https://github.com/learnboost/socket.io-node/> for more details.\r\n   *\r\n   * @returns {String} Connection url\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.prepareUrl = function () {\r\n    var options = this.socket.options;\r\n\r\n    return this.scheme() + '://'\r\n      + options.host + ':' + options.port + '/'\r\n      + options.resource + '/' + io.protocol\r\n      + '/' + this.name + '/' + this.sessid;\r\n  };\r\n\r\n  /**\r\n   * Checks if the transport is ready to start a connection.\r\n   *\r\n   * @param {Socket} socket The socket instance that needs a transport\r\n   * @param {Function} fn The callback\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.ready = function (socket, fn) {\r\n    fn.call(this);\r\n  };\r\n\r\n  /**\r\n   * Clears the event handlers attached on to by specific transport implementations.\r\n   *\r\n   * @api private\r\n   */\r\n  Transport.prototype.clearEventHandlers = function () {\r\n      return this;\r\n  };\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.Socket = Socket;\r\n\r\n  /**\r\n   * Create a new `Socket.IO client` which can establish a persistent\r\n   * connection with a Socket.IO enabled server.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  function Socket (options) {\r\n    this.options = {\r\n        port: 80\r\n      , secure: false\r\n      , document: 'document' in global ? document : false\r\n      , resource: 'socket.io'\r\n      , transports: io.transports.slice()\r\n      , 'connect timeout': 10000\r\n      , 'try multiple transports': true\r\n      , 'reconnect': true\r\n      , 'reconnection delay': 500\r\n      , 'reconnection limit': Infinity\r\n      , 'reopen delay': 3000\r\n      , 'max reconnection attempts': 10\r\n      , 'sync disconnect on unload': true\r\n      , 'auto connect': true\r\n      , 'flash policy port': 10843\r\n    };\r\n\r\n    io.util.merge(this.options, options);\r\n\r\n    this.connected = false;\r\n    this.open = false;\r\n    this.connecting = false;\r\n    this.reconnecting = false;\r\n    this.namespaces = {};\r\n    this.buffer = [];\r\n    this.doBuffer = false;\r\n\r\n    if (this.options['sync disconnect on unload'] &&\r\n        (!this.isXDomain() || io.util.ua.hasCORS)) {\r\n      var self = this;\r\n\r\n      io.util.on(global, 'unload', function () {\r\n        self.disconnectSync();\r\n      }, false);\r\n    }\r\n\r\n    if (this.options['auto connect']) {\r\n      this.connect();\r\n    }\r\n};\r\n\r\n  /**\r\n   * Apply EventEmitter mixin.\r\n   */\r\n\r\n  io.util.mixin(Socket, io.EventEmitter);\r\n\r\n  /**\r\n   * Returns a namespace listener/emitter for this socket\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.of = function (name) {\r\n    if (!this.namespaces[name]) {\r\n      this.namespaces[name] = new io.SocketNamespace(this, name);\r\n\r\n      if (name !== '') {\r\n        this.namespaces[name].packet({ type: 'connect' });\r\n      }\r\n    }\r\n\r\n    return this.namespaces[name];\r\n  };\r\n\r\n  /**\r\n   * Emits the given event to the Socket and all namespaces\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.publish = function () {\r\n    this.emit.apply(this, arguments);\r\n\r\n    var nsp;\r\n\r\n    for (var i in this.namespaces) {\r\n      if (this.namespaces.hasOwnProperty(i)) {\r\n        nsp = this.of(i);\r\n        nsp.$emit.apply(nsp, arguments);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Performs the handshake\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  function empty () { };\r\n\r\n  Socket.prototype.handshake = function (fn) {\r\n    var self = this\r\n      , options = this.options;\r\n\r\n    function complete (data) {\r\n      if (data instanceof Error) {\r\n        self.onError(data.message);\r\n      } else {\r\n        fn.apply(null, data.split(':'));\r\n      }\r\n    };\r\n\r\n    var url = [\r\n          'http' + (options.secure ? 's' : '') + ':/'\r\n        , options.host + ':' + options.port\r\n        , options.resource\r\n        , io.protocol\r\n        , io.util.query(this.options.query, 't=' + +new Date)\r\n      ].join('/');\r\n\r\n    if (this.isXDomain() && !io.util.ua.hasCORS) {\r\n      var insertAt = document.getElementsByTagName('script')[0]\r\n        , script = document.createElement('script');\r\n\r\n      script.src = url + '&jsonp=' + io.j.length;\r\n      insertAt.parentNode.insertBefore(script, insertAt);\r\n\r\n      io.j.push(function (data) {\r\n        complete(data);\r\n        script.parentNode.removeChild(script);\r\n      });\r\n    } else {\r\n      var xhr = io.util.request();\r\n\r\n      xhr.open('GET', url, true);\r\n      xhr.withCredentials = true;\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n          xhr.onreadystatechange = empty;\r\n\r\n          if (xhr.status == 200) {\r\n            complete(xhr.responseText);\r\n          } else {\r\n            !self.reconnecting && self.onError(xhr.responseText);\r\n          }\r\n        }\r\n      };\r\n      xhr.send(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Find an available transport based on the options supplied in the constructor.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.getTransport = function (override) {\r\n    var transports = override || this.transports, match;\r\n\r\n    for (var i = 0, transport; transport = transports[i]; i++) {\r\n      if (io.Transport[transport]\r\n        && io.Transport[transport].check(this)\r\n        && (!this.isXDomain() || io.Transport[transport].xdomainCheck())) {\r\n        return new io.Transport[transport](this, this.sessionid);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Connects to the server.\r\n   *\r\n   * @param {Function} [fn] Callback.\r\n   * @returns {io.Socket}\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.connect = function (fn) {\r\n    if (this.connecting) {\r\n      return this;\r\n    }\r\n\r\n    var self = this;\r\n\r\n    this.handshake(function (sid, heartbeat, close, transports) {\r\n      // Params come from response's body - it's splitted by ':'\r\n      // example: 1178beba4026e2c7-48e62d038b18f416:85:85:websocket,xhr-polling,jsonp-polling\r\n      self.sessionid = sid;\r\n      // Add two seconds, so connection is closed by server, not client - otherwise\r\n      // there will be a onSocketDisconnect event which will start health check, etc\r\n      // This can happen if server returns close/heartbeat timeout equal to 40 which is server's timeout to\r\n      // close long poll connection, in such case client can close connection before server response with empty\r\n      // response and client goes to health check. Server can return such timeout if client send too small ping timeout\r\n      // during handshake\r\n      self.closeTimeout = close * 1000 + 2000;\r\n      self.heartbeatTimeout = heartbeat * 1000 + 2000;\r\n      self.transports = transports ? io.util.intersect(\r\n          transports.split(',')\r\n        , self.options.transports\r\n      ) : self.options.transports;\r\n\r\n      self.setHeartbeatTimeout();\r\n      self.remainingTransports = self.transports.slice(0);\r\n\r\n      function tryNextTransport() {\r\n        if (!self.connected) {\r\n          self.connecting = false;\r\n          clearTimeout(self.connectTimeoutTimer);\r\n\r\n          if (self.options['try multiple transports']) {\r\n            while (self.remainingTransports.length > 0\r\n                   && self.remainingTransports.splice(0,1)[0] != self.transport.name) {}\r\n\r\n            if (self.remainingTransports.length){\r\n              connect(self.remainingTransports);\r\n            } else {\r\n              self.publish('connect_failed');\r\n            }\r\n          } else {\r\n            self.publish('connect_failed');\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      function connect (transports){\r\n        if (self.transport) {\r\n            self.transport.clearTimeouts();\r\n            self.transport.clearEventHandlers();\r\n        }\r\n\r\n        self.transport = self.getTransport(transports);\r\n        if (!self.transport) return self.publish('connect_failed');\r\n\r\n        // once the transport is ready (i.e. page is fully loaded)\r\n        self.transport.ready(self, function () {\r\n          self.connecting = true;\r\n          self.publish('connecting', self.transport.name);\r\n          self.transport.open(tryNextTransport);\r\n\r\n          if (self.options['connect timeout']) {\r\n            self.connectTimeoutTimer = setTimeout(function () {\r\n              tryNextTransport();\r\n            }, self.options['connect timeout']);\r\n          }\r\n        });\r\n      }\r\n\r\n      connect(self.transports);\r\n\r\n      self.once('connect', function (){\r\n        clearTimeout(self.connectTimeoutTimer);\r\n\r\n        fn && typeof fn == 'function' && fn();\r\n      });\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Clears and sets a new heartbeat timeout using the value given by the\r\n   * server during the handshake.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.setHeartbeatTimeout = function () {\r\n    clearTimeout(this.heartbeatTimeoutTimer);\r\n\r\n    var self = this;\r\n    this.heartbeatTimeoutTimer = setTimeout(function () {\r\n      self.transport.onClose();\r\n    }, this.heartbeatTimeout);\r\n  };\r\n\r\n  /**\r\n   * Sends a message.\r\n   *\r\n   * @param {Object} data packet.\r\n   * @returns {io.Socket}\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.packet = function (data) {\r\n    if (this.connected && !this.doBuffer) {\r\n      this.transport.packet(data);\r\n    } else {\r\n      this.buffer.push(data);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sets buffer state\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.setBuffer = function (v) {\r\n    this.doBuffer = v;\r\n\r\n    if (!v && this.connected && this.buffer.length) {\r\n      this.transport.payload(this.buffer);\r\n      this.buffer = [];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Disconnect the established connect.\r\n   *\r\n   * @returns {io.Socket}\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.disconnect = function () {\r\n    if (this.connected || this.connecting) {\r\n      if (this.open) {\r\n        this.of('').packet({ type: 'disconnect' });\r\n      }\r\n\r\n      // handle disconnection immediately\r\n      this.onDisconnect('booted');\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Disconnects the socket with a sync XHR.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.disconnectSync = function () {\r\n    // ensure disconnection\r\n    var xhr = io.util.request()\r\n      , uri = this.resource + '/' + io.protocol + '/' + this.sessionid;\r\n\r\n    xhr.open('GET', uri, true);\r\n\r\n    // handle disconnection immediately\r\n    this.onDisconnect('booted');\r\n  };\r\n\r\n  /**\r\n   * Check if we need to use cross domain enabled transports. Cross domain would\r\n   * be a different port or different domain name.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.isXDomain = function () {\r\n\r\n    var port = global.location.port ||\r\n      ('https:' == global.location.protocol ? 443 : 80);\r\n\r\n    return this.options.host !== global.location.hostname\r\n      || this.options.port != port;\r\n  };\r\n\r\n  /**\r\n   * Called upon handshake.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onConnect = function () {\r\n    if (!this.connected) {\r\n      this.connected = true;\r\n      this.connecting = false;\r\n      if (!this.doBuffer) {\r\n        // make sure to flush the buffer\r\n        this.setBuffer(false);\r\n      }\r\n      this.emit('connect');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called when the transport opens\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onOpen = function () {\r\n    this.open = true;\r\n  };\r\n\r\n  /**\r\n   * Called when the transport closes.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onClose = function () {\r\n    this.open = false;\r\n    clearTimeout(this.heartbeatTimeoutTimer);\r\n  };\r\n\r\n  /**\r\n   * Called when the transport first opens a connection\r\n   *\r\n   * @param text\r\n   */\r\n\r\n  Socket.prototype.onPacket = function (packet) {\r\n    this.of(packet.endpoint).onPacket(packet);\r\n  };\r\n\r\n  /**\r\n   * Handles an error.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onError = function (err) {\r\n    if (err && err.advice) {\r\n      if (err.advice === 'reconnect' && (this.connected || this.connecting)) {\r\n        this.disconnect();\r\n        if (this.options.reconnect) {\r\n          this.reconnect();\r\n        }\r\n      }\r\n    }\r\n\r\n    this.publish('error', err && err.reason ? err.reason : err);\r\n  };\r\n\r\n  /**\r\n   * Called when the transport disconnects.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onDisconnect = function (reason) {\r\n    var wasConnected = this.connected\r\n      , wasConnecting = this.connecting;\r\n\r\n    this.connected = false;\r\n    this.connecting = false;\r\n    this.open = false;\r\n\r\n    if (wasConnected || wasConnecting) {\r\n      this.transport.close();\r\n      this.transport.clearTimeouts();\r\n      if (wasConnected) {\r\n        this.publish('disconnect', reason);\r\n\r\n        if ('booted' != reason && this.options.reconnect && !this.reconnecting) {\r\n          this.reconnect();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called upon reconnection.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.reconnect = function () {\r\n    this.reconnecting = true;\r\n    this.reconnectionAttempts = 0;\r\n    this.reconnectionDelay = this.options['reconnection delay'];\r\n\r\n    var self = this\r\n      , maxAttempts = this.options['max reconnection attempts']\r\n      , tryMultiple = this.options['try multiple transports']\r\n      , limit = this.options['reconnection limit'];\r\n\r\n    function reset () {\r\n      if (self.connected) {\r\n        for (var i in self.namespaces) {\r\n          if (self.namespaces.hasOwnProperty(i) && '' !== i) {\r\n              self.namespaces[i].packet({ type: 'connect' });\r\n          }\r\n        }\r\n        self.publish('reconnect', self.transport.name, self.reconnectionAttempts);\r\n      }\r\n\r\n      clearTimeout(self.reconnectionTimer);\r\n\r\n      self.removeListener('connect_failed', maybeReconnect);\r\n      self.removeListener('connect', maybeReconnect);\r\n\r\n      self.reconnecting = false;\r\n\r\n      delete self.reconnectionAttempts;\r\n      delete self.reconnectionDelay;\r\n      delete self.reconnectionTimer;\r\n      delete self.redoTransports;\r\n\r\n      self.options['try multiple transports'] = tryMultiple;\r\n    };\r\n\r\n    function maybeReconnect () {\r\n      if (!self.reconnecting) {\r\n        return;\r\n      }\r\n\r\n      if (self.connected) {\r\n        return reset();\r\n      };\r\n\r\n      if (self.connecting && self.reconnecting) {\r\n        return self.reconnectionTimer = setTimeout(maybeReconnect, 1000);\r\n      }\r\n\r\n      if (self.reconnectionAttempts++ >= maxAttempts) {\r\n        if (!self.redoTransports) {\r\n          self.on('connect_failed', maybeReconnect);\r\n          self.options['try multiple transports'] = true;\r\n          self.transport = self.getTransport();\r\n          self.redoTransports = true;\r\n          self.connect();\r\n        } else {\r\n          self.publish('reconnect_failed');\r\n          reset();\r\n        }\r\n      } else {\r\n        if (self.reconnectionDelay < limit) {\r\n          self.reconnectionDelay *= 2; // exponential back off\r\n        }\r\n\r\n        self.connect();\r\n        self.publish('reconnecting', self.reconnectionDelay, self.reconnectionAttempts);\r\n        self.reconnectionTimer = setTimeout(maybeReconnect, self.reconnectionDelay);\r\n      }\r\n    };\r\n\r\n    this.options['try multiple transports'] = false;\r\n    this.reconnectionTimer = setTimeout(maybeReconnect, this.reconnectionDelay);\r\n\r\n    this.on('connect', maybeReconnect);\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.SocketNamespace = SocketNamespace;\r\n\r\n  /**\r\n   * Socket namespace constructor.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  function SocketNamespace (socket, name) {\r\n    this.socket = socket;\r\n    this.name = name || '';\r\n    this.flags = {};\r\n    this.json = new Flag(this, 'json');\r\n    this.ackPackets = 0;\r\n    this.acks = {};\r\n  };\r\n\r\n  /**\r\n   * Apply EventEmitter mixin.\r\n   */\r\n\r\n  io.util.mixin(SocketNamespace, io.EventEmitter);\r\n\r\n  /**\r\n   * Copies emit since we override it\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.$emit = io.EventEmitter.prototype.emit;\r\n\r\n  /**\r\n   * Creates a new namespace, by proxying the request to the socket. This\r\n   * allows us to use the synax as we do on the server.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  SocketNamespace.prototype.of = function () {\r\n    return this.socket.of.apply(this.socket, arguments);\r\n  };\r\n\r\n  /**\r\n   * Sends a packet.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.packet = function (packet) {\r\n    packet.endpoint = this.name;\r\n    this.socket.packet(packet);\r\n    this.flags = {};\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sends a message\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  SocketNamespace.prototype.send = function (data, fn) {\r\n    var packet = {\r\n        type: this.flags.json ? 'json' : 'message'\r\n      , data: data\r\n    };\r\n\r\n    if ('function' == typeof fn) {\r\n      packet.id = ++this.ackPackets;\r\n      packet.ack = true;\r\n      this.acks[packet.id] = fn;\r\n    }\r\n\r\n    return this.packet(packet);\r\n  };\r\n\r\n  /**\r\n   * Emits an event\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  SocketNamespace.prototype.emit = function (name) {\r\n    var args = Array.prototype.slice.call(arguments, 1)\r\n      , lastArg = args[args.length - 1]\r\n      , packet = {\r\n            type: 'event'\r\n          , name: name\r\n        };\r\n\r\n    if ('function' == typeof lastArg) {\r\n      packet.id = ++this.ackPackets;\r\n      packet.ack = 'data';\r\n      this.acks[packet.id] = lastArg;\r\n      args = args.slice(0, args.length - 1);\r\n    }\r\n\r\n    packet.args = args;\r\n\r\n    return this.packet(packet);\r\n  };\r\n\r\n  /**\r\n   * Disconnects the namespace\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.disconnect = function () {\r\n    if (this.name === '') {\r\n      this.socket.disconnect();\r\n    } else {\r\n      this.packet({ type: 'disconnect' });\r\n      this.$emit('disconnect');\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Handles a packet\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.onPacket = function (packet) {\r\n    var self = this;\r\n\r\n    function ack () {\r\n      self.packet({\r\n          type: 'ack'\r\n        , args: io.util.toArray(arguments)\r\n        , ackId: packet.id\r\n      });\r\n    };\r\n\r\n    switch (packet.type) {\r\n      case 'connect':\r\n        this.$emit('connect');\r\n        break;\r\n\r\n      case 'disconnect':\r\n        if (this.name === '') {\r\n          this.socket.onDisconnect(packet.reason || 'booted');\r\n        } else {\r\n          this.$emit('disconnect', packet.reason);\r\n        }\r\n        break;\r\n\r\n      case 'message':\r\n      case 'json':\r\n        var params = ['message', packet.data];\r\n\r\n        if (packet.ack == 'data') {\r\n          params.push(ack);\r\n        } else if (packet.ack) {\r\n          this.packet({ type: 'ack', ackId: packet.id });\r\n        }\r\n\r\n        this.$emit.apply(this, params);\r\n        break;\r\n\r\n      case 'event':\r\n        var params = [packet.name].concat(packet.args);\r\n\r\n        if (packet.ack == 'data')\r\n          params.push(ack);\r\n\r\n        this.$emit.apply(this, params);\r\n        break;\r\n\r\n      case 'ack':\r\n        if (this.acks[packet.ackId]) {\r\n          this.acks[packet.ackId].apply(this, packet.args);\r\n          delete this.acks[packet.ackId];\r\n        }\r\n        break;\r\n\r\n      case 'error':\r\n        if (packet.advice){\r\n          this.socket.onError(packet);\r\n        } else {\r\n          if (packet.reason == 'unauthorized') {\r\n            this.$emit('connect_failed', packet.reason);\r\n          } else {\r\n            this.$emit('error', packet.reason);\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Flag interface.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  function Flag (nsp, name) {\r\n    this.namespace = nsp;\r\n    this.name = name;\r\n  };\r\n\r\n  /**\r\n   * Send a message\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Flag.prototype.send = function () {\r\n    this.namespace.flags[this.name] = true;\r\n    this.namespace.send.apply(this.namespace, arguments);\r\n  };\r\n\r\n  /**\r\n   * Emit an event\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Flag.prototype.emit = function () {\r\n    this.namespace.flags[this.name] = true;\r\n    this.namespace.emit.apply(this.namespace, arguments);\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.websocket = WS;\r\n\r\n  /**\r\n   * The WebSocket transport uses the HTML5 WebSocket API to establish an\r\n   * persistent connection with the Socket.IO server. This transport will also\r\n   * be inherited by the FlashSocket fallback as it provides a API compatible\r\n   * polyfill for the WebSockets.\r\n   *\r\n   * @constructor\r\n   * @extends {io.Transport}\r\n   * @api public\r\n   */\r\n\r\n  function WS (socket) {\r\n    io.Transport.apply(this, arguments);\r\n  };\r\n\r\n  /**\r\n   * Inherits from Transport.\r\n   */\r\n\r\n  io.util.inherit(WS, io.Transport);\r\n\r\n  /**\r\n   * Transport name\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.name = 'websocket';\r\n\r\n  function empty() { };\r\n\r\n  /**\r\n   * Initializes a new `WebSocket` connection with the Socket.IO server. We attach\r\n   * all the appropriate listeners to handle the responses from the server.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.open = function (connectErrorCallback) {\r\n    var query = io.util.query(this.socket.options.query)\r\n      , self = this\r\n      , Socket\r\n\r\n    this.connectErrorCallback = connectErrorCallback;\r\n\r\n    if (!Socket) {\r\n      Socket = global.MozWebSocket || global.WebSocket;\r\n    }\r\n\r\n    this.websocket = new Socket(this.prepareUrl() + query);\r\n\r\n    this.websocket.onopen = function () {\r\n      self.onOpen();\r\n      self.socket.setBuffer(false);\r\n    };\r\n    this.websocket.onmessage = function (ev) {\r\n      self.onData(ev.data);\r\n    };\r\n    this.websocket.onclose = function () {\r\n      self.onClose();\r\n      self.socket.setBuffer(true);\r\n    };\r\n    this.websocket.onerror = function (e) {\r\n      self.onError(e);\r\n    };\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Send a message to the Socket.IO server. The message will automatically be\r\n   * encoded in the correct message format.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.send = function (data) {\r\n    this.websocket.send(data);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Payload\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  WS.prototype.payload = function (arr) {\r\n    for (var i = 0, l = arr.length; i < l; i++) {\r\n      this.packet(arr[i]);\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Disconnect the established `WebSocket` connection.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.close = function () {\r\n    this.websocket.close();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Handle the errors that `WebSocket` might be giving when we\r\n   * are attempting to connect or send messages.\r\n   *\r\n   * @param {Error} e The error.\r\n   * @api private\r\n   */\r\n\r\n  WS.prototype.onError = function (e) {\r\n      if (this.connectErrorCallback !== undefined) {\r\n        this.connectErrorCallback();\r\n        this.connectErrorCallback = undefined;\r\n      }\r\n      this.socket.onError(e);\r\n  };\r\n\r\n  /**\r\n   * Returns the appropriate scheme for the URI generation.\r\n   *\r\n   * @api private\r\n   */\r\n  WS.prototype.scheme = function () {\r\n    return this.socket.options.secure ? 'wss' : 'ws';\r\n  };\r\n\r\n  /**\r\n   * Checks if the browser has support for native `WebSockets` and that\r\n   * it's not the polyfill created for the FlashSocket transport.\r\n   *\r\n   * @return {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  WS.check = function () {\r\n    return ('WebSocket' in global && !('__addTask' in WebSocket))\r\n          || 'MozWebSocket' in global;\r\n  };\r\n\r\n  /**\r\n   * Check if the `WebSocket` transport support cross domain communications.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  WS.xdomainCheck = function () {\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Clears the event listeners attached to the `WebSocket` transport object.\r\n   *\r\n   * @api private\r\n   */\r\n  WS.prototype.clearEventHandlers = function() {\r\n      if (this.websocket) {\r\n          this.websocket.onopen = this.websocket.onmessage = this.websocket.onclose = this.websocket.onerror = empty;\r\n      }\r\n      return this;\r\n  };\r\n\r\n  /**\r\n   * Add the transport to your public io.transports array.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.transports.push('websocket');\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  exports.XHR = XHR;\r\n\r\n  /**\r\n   * XHR constructor\r\n   *\r\n   * @costructor\r\n   * @api public\r\n   */\r\n\r\n  function XHR (socket) {\r\n    if (!socket) return;\r\n\r\n    io.Transport.apply(this, arguments);\r\n    this.sendBuffer = [];\r\n  };\r\n\r\n  /**\r\n   * Inherits from Transport.\r\n   */\r\n\r\n  io.util.inherit(XHR, io.Transport);\r\n\r\n  /**\r\n   * Establish a connection\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  XHR.prototype.open = function () {\r\n    this.socket.setBuffer(false);\r\n    this.onOpen();\r\n    this.get();\r\n\r\n    // we need to make sure the request succeeds since we have no indication\r\n    // whether the request opened or not until it succeeded.\r\n    this.setCloseTimeout();\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Check if we need to send data to the Socket.IO server, if we have data in our\r\n   * buffer we encode it and forward it to the `post` method.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHR.prototype.payload = function (payload) {\r\n    var msgs = [];\r\n\r\n    for (var i = 0, l = payload.length; i < l; i++) {\r\n      msgs.push(io.parser.encodePacket(payload[i]));\r\n    }\r\n\r\n    this.send(io.parser.encodePayload(msgs));\r\n  };\r\n\r\n  /**\r\n   * Send data to the Socket.IO server.\r\n   *\r\n   * @param data The message\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  XHR.prototype.send = function (data) {\r\n    this.post(data);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Posts a encoded message to the Socket.IO server.\r\n   *\r\n   * @param {String} data A encoded message.\r\n   * @api private\r\n   */\r\n\r\n  function empty () { };\r\n\r\n  XHR.prototype.post = function (data) {\r\n    var self = this;\r\n    this.socket.setBuffer(true);\r\n\r\n    this.sendXHR = this.request('POST');\r\n\r\n    function stateChange () {\r\n      if (this.readyState == 4) {\r\n        this.onreadystatechange = empty;\r\n        self.posting = false;\r\n\r\n        if (this.status == 200){\r\n          self.socket.setBuffer(false);\r\n          clearTimeout(self.sendXHR.ackTimeoutTimer);\r\n        } else {\r\n          self.onClose();\r\n        }\r\n      }\r\n    }\r\n\r\n    function onload () {\r\n      this.onload = empty;\r\n      self.socket.setBuffer(false);\r\n    };\r\n\r\n    if (global.XDomainRequest && this.sendXHR instanceof XDomainRequest) {\r\n      this.sendXHR.onload = this.sendXHR.onerror = onload;\r\n    } else {\r\n      this.sendXHR.onreadystatechange = stateChange;\r\n    }\r\n\r\n    this.sendXHR.send(data);\r\n    self.sendXHR.ackTimeoutTimer = setTimeout(function () {\r\n      self.onClose();\r\n    }, self.socket.options.ackTimeoutMs);\r\n  };\r\n\r\n  /**\r\n   * Disconnects the established `XHR` connection.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  XHR.prototype.close = function () {\r\n    this.onClose();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Generates a configured XHR request\r\n   *\r\n   * @param {String} url The url that needs to be requested.\r\n   * @param {String} method The method the request should use.\r\n   * @returns {XMLHttpRequest}\r\n   * @api private\r\n   */\r\n\r\n  XHR.prototype.request = function (method) {\r\n    var req = io.util.request(this.socket.isXDomain())\r\n      , query = io.util.query(this.socket.options.query, 't=' + +new Date);\r\n\r\n    req.open(method || 'GET', this.prepareUrl() + query, true);\r\n\r\n    if (method == 'POST') {\r\n      try {\r\n        if (req.setRequestHeader) {\r\n          req.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\r\n        } else {\r\n          // XDomainRequest\r\n          req.contentType = 'text/plain';\r\n        }\r\n      } catch (e) {}\r\n    }\r\n\r\n    return req;\r\n  };\r\n\r\n  /**\r\n   * Returns the scheme to use for the transport URLs.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHR.prototype.scheme = function () {\r\n    return this.socket.options.secure ? 'https' : 'http';\r\n  };\r\n\r\n  /**\r\n   * Check if the XHR transports are supported\r\n   *\r\n   * @param {Boolean} xdomain Check if we support cross domain requests.\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  XHR.check = function (socket, xdomain) {\r\n\r\n    try {\r\n      var request = io.util.request(xdomain),\r\n          usesXDomReq = (global.XDomainRequest && request instanceof XDomainRequest),\r\n          socketProtocol = (socket && socket.options && socket.options.secure ? 'https:' : 'http:'),\r\n          isXProtocol = (socketProtocol != global.location.protocol);\r\n      if (request && !(usesXDomReq && isXProtocol)) {\r\n        return true;\r\n      }\r\n    } catch(e) {}\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Check if the XHR transport supports cross domain requests.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  XHR.xdomainCheck = function () {\r\n    return XHR.check(null, true);\r\n  };\r\n\r\n  /**\r\n   * Clears the event listeners attached to the XHR transport object.\r\n   *\r\n   * @api private\r\n   */\r\n  XHR.prototype.clearEventHandlers = function () {\r\n      if (this.sendXHR) {\r\n          this.sendXHR.onreadystatechange = this.sendXHR.onload = empty;\r\n      }\r\n      return this;\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports['xhr-polling'] = XHRPolling;\r\n\r\n  /**\r\n   * The XHR-polling transport uses long polling XHR requests to create a\r\n   * \"persistent\" connection with the server.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  function XHRPolling () {\r\n    io.Transport.XHR.apply(this, arguments);\r\n  };\r\n\r\n  /**\r\n   * Inherits from XHR transport.\r\n   */\r\n\r\n  io.util.inherit(XHRPolling, io.Transport.XHR);\r\n\r\n  /**\r\n   * Merge the properties from XHR transport\r\n   */\r\n\r\n  io.util.merge(XHRPolling, io.Transport.XHR);\r\n\r\n  /**\r\n   * Transport name\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  XHRPolling.prototype.name = 'xhr-polling';\r\n\r\n  /**\r\n   * Establish a connection, for iPhone and Android this will be done once the page\r\n   * is loaded.\r\n   *\r\n   * @returns {Transport} Chaining.\r\n   * @api public\r\n   */\r\n\r\n  XHRPolling.prototype.open = function (connectErrorCallback) {\r\n    var self = this;\r\n\r\n    self.connectErrorCallback = connectErrorCallback;\r\n\r\n    io.Transport.XHR.prototype.open.call(self);\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Starts a XHR request to wait for incoming messages.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  function empty () {};\r\n\r\n  XHRPolling.prototype.get = function () {\r\n    if (!this.isOpened) return;\r\n\r\n    var self = this;\r\n\r\n    function stateChange () {\r\n      if (this.readyState == 4) {\r\n        this.onreadystatechange = empty;\r\n\r\n        if (this.status == 200) {\r\n          self.connectErrorCallback = undefined;\r\n          self.onData(this.responseText);\r\n          self.get();\r\n        } else {\r\n          self.onClose();\r\n\r\n          if (self.connectErrorCallback !== undefined) {\r\n            self.connectErrorCallback();\r\n            self.connectErrorCallback = undefined;\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    function onload () {\r\n      self.connectErrorCallback = undefined;\r\n      this.onload = empty;\r\n      this.onerror = empty;\r\n      self.onData(this.responseText);\r\n      self.get();\r\n    };\r\n\r\n    function onerror () {\r\n      self.onClose();\r\n\r\n      if (self.connectErrorCallback !== undefined) {\r\n        self.connectErrorCallback();\r\n        self.connectErrorCallback = undefined;\r\n      }\r\n    };\r\n\r\n    this.xhr = this.request();\r\n\r\n    if (global.XDomainRequest && this.xhr instanceof XDomainRequest) {\r\n      this.xhr.onload = onload;\r\n      this.xhr.onerror = onerror;\r\n    } else {\r\n      this.xhr.onreadystatechange = stateChange;\r\n    }\r\n\r\n    this.xhr.send(null);\r\n  };\r\n\r\n  /**\r\n   * Handle the unclean close behavior.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHRPolling.prototype.onClose = function () {\r\n    io.Transport.XHR.prototype.onClose.call(this);\r\n\r\n    if (this.xhr) {\r\n      this.xhr.onreadystatechange = this.xhr.onload = this.xhr.onerror = empty;\r\n      try {\r\n        this.xhr.abort();\r\n      } catch(e){}\r\n      this.xhr = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Webkit based browsers show a infinit spinner when you start a XHR request\r\n   * before the browsers onload event is called so we need to defer opening of\r\n   * the transport until the onload event is called. Wrapping the cb in our\r\n   * defer method solve this.\r\n   *\r\n   * @param {Socket} socket The socket instance that needs a transport\r\n   * @param {Function} fn The callback\r\n   * @api private\r\n   */\r\n\r\n  XHRPolling.prototype.ready = function (socket, fn) {\r\n    var self = this;\r\n\r\n    io.util.defer(function () {\r\n      fn.call(self);\r\n    });\r\n  };\r\n\r\n   /**\r\n   * Clears the event listeners attached to the XHR transport object.\r\n   *\r\n   * @api private\r\n   */\r\n  XHRPolling.prototype.clearEventHandlers = function () {\r\n      io.Transport.XHR.prototype.clearEventHandlers.call(this);\r\n\r\n      if (this.xhr) {\r\n          this.xhr.onreadystatechange = this.xhr.onload = this.xhr.onerror = empty;\r\n      }\r\n      return this;\r\n  }\r\n\r\n  /**\r\n   * Add the transport to your public io.transports array.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.transports.push('xhr-polling');\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n\r\nexports.io = io;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4), __webpack_require__(13)(module)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, global) {var require;/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.0.5\n */\n\n(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = __webpack_require__(21);\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && \"function\" === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        _resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      _reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      _reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    _reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return _resolve(promise, value);\n    }, function (reason) {\n      return _reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      _reject(promise, GET_THEN_ERROR.error);\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction _resolve(promise, value) {\n  if (promise === value) {\n    _reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction _reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      _reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      _resolve(promise, value);\n    }, function rejectPromise(reason) {\n      _reject(promise, reason);\n    });\n  } catch (e) {\n    _reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    _reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$ = c.resolve;\n\n  if (resolve$$ === resolve) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$) {\n        return resolve$$(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      _reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve;\nPromise.reject = reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\n\nreturn Promise;\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12), __webpack_require__(4)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:no-any\r\n// tslint:disable:no-unsafe-any\r\n// tslint:disable:max-classes-per-file\r\n// tslint:disable:variable-name\r\nvar Common_1 = __webpack_require__(3);\r\nvar Constants_1 = __webpack_require__(2);\r\nvar Logger_1 = __webpack_require__(0);\r\n/**\r\n * Data for trouter response\r\n */\r\nvar ResponseData = /** @class */ (function () {\r\n    function ResponseData(id) {\r\n        this.id = id;\r\n        this.status = 200;\r\n        this.headers = {};\r\n        this.body = '';\r\n    }\r\n    return ResponseData;\r\n}());\r\nexports.ResponseData = ResponseData;\r\n// Possible telemetry events\r\nvar ClientEventName;\r\n(function (ClientEventName) {\r\n    ClientEventName[\"Connected\"] = \"trouter_js_client_connected\";\r\n    ClientEventName[\"Disconnected\"] = \"trouter_js_client_disconnected\";\r\n    ClientEventName[\"Error\"] = \"trouter_js_client_error\";\r\n    ClientEventName[\"Progress\"] = \"trouter_js_client_progress\";\r\n    ClientEventName[\"Response\"] = \"trouter_js_client_response\";\r\n    ClientEventName[\"Request\"] = \"trouter_js_client_request\";\r\n    ClientEventName[\"CheckConnection\"] = \"trouter_js_client_check_connection\";\r\n    ClientEventName[\"Registration\"] = \"trouter_js_client_registration\";\r\n    ClientEventName[\"Unregistration\"] = \"trouter_js_client_unregistration\";\r\n})(ClientEventName = exports.ClientEventName || (exports.ClientEventName = {}));\r\n/**\r\n * Stores one step of connection process\r\n */\r\nvar TrackerStep = /** @class */ (function () {\r\n    function TrackerStep(stepName, operation, delta, ts, error) {\r\n        this.stepName = stepName;\r\n        this.operation = operation;\r\n        this.delta = delta;\r\n        this.ts = ts;\r\n        this.error = error;\r\n    }\r\n    return TrackerStep;\r\n}());\r\nexports.TrackerStep = TrackerStep;\r\n/**\r\n * Base class for something that can be used as a property bag\r\n */\r\nvar Properties = /** @class */ (function () {\r\n    function Properties() {\r\n    }\r\n    return Properties;\r\n}());\r\nexports.Properties = Properties;\r\n/**\r\n * Information about connection\r\n */\r\nvar ConnectedInfo = /** @class */ (function () {\r\n    function ConnectedInfo() {\r\n        this.numberOfPingReplies = 0;\r\n        this.connectedTimestamp = 0;\r\n        this.isNewUrl = false;\r\n        this.transportType = '';\r\n        this.connectionNumber = 0;\r\n    }\r\n    return ConnectedInfo;\r\n}());\r\n/**\r\n * Default values for IEventLogSettings\r\n */\r\nvar EventLogSettings = /** @class */ (function () {\r\n    function EventLogSettings() {\r\n        this.enabled = false;\r\n        this.numberOfStepsToMaintain = 40;\r\n        this.logHealthCheckError = false;\r\n        this.sendProgressTimeoutSecs = 55;\r\n        this.logSendPingError = false;\r\n        this.maxBackoffInMs = 120000;\r\n        this.trouter_js_client_connected = false;\r\n        this.trouter_js_client_disconnected = false;\r\n        this.trouter_js_client_error = false;\r\n        this.trouter_js_client_progress = false;\r\n        this.trouter_js_client_response = false;\r\n        this.trouter_js_client_request = false;\r\n        this.trouter_js_client_registration = false;\r\n        this.trouter_js_client_unregistration = false;\r\n        /** This event is ENABLED by default */\r\n        this.trouter_js_client_check_connection = true;\r\n    }\r\n    return EventLogSettings;\r\n}());\r\n/**\r\n * Telemetry sender\r\n */\r\nvar ConnectionTracker = /** @class */ (function () {\r\n    function ConnectionTracker(logfunc, clientId, clientInfo, getServerState, endpointId, clientCorrelationID, environment) {\r\n        this.clientId = clientId;\r\n        this.clientInfo = clientInfo;\r\n        this.getServerState = getServerState;\r\n        this.endpointId = endpointId;\r\n        this.clientCorrelationID = clientCorrelationID;\r\n        this.environment = environment;\r\n        this.logger = new Logger_1.Logger('ConnectionTracker', logfunc);\r\n        this.clientCorrelationID = clientCorrelationID !== undefined ? clientCorrelationID : '';\r\n        this.steps = [];\r\n        this.connectionAttempt = 0;\r\n        this.totalStepCount = 0;\r\n        this.beginTimestamp = new Common_1.Timespan();\r\n        this.eventLogSettings = new EventLogSettings();\r\n        this.connectedInfo = new ConnectedInfo();\r\n    }\r\n    ConnectionTracker.prototype.enable = function (telemetrySender) {\r\n        this.eventLogSettings.enabled = true;\r\n        this.eventLogger = telemetrySender;\r\n    };\r\n    ConnectionTracker.prototype.disable = function () {\r\n        this.eventLogSettings.enabled = false;\r\n    };\r\n    ConnectionTracker.prototype.sendProgress = function (context) {\r\n        // connect truncates steps array. this check ensures that a progress event is only sent out if the client is not connected\r\n        if (this.steps.length > 0) {\r\n            this.sendTelemetry(ClientEventName.Progress, context, this.steps);\r\n        }\r\n    };\r\n    ConnectionTracker.prototype.cancelProgressTimer = function () {\r\n        if (this.progressTimeout !== undefined) {\r\n            clearTimeout(this.progressTimeout);\r\n            this.progressTimeout = undefined;\r\n        }\r\n    };\r\n    ConnectionTracker.prototype.resetProgressSendTimer = function () {\r\n        var _this = this;\r\n        this.cancelProgressTimer();\r\n        // send connection steps after a timeout\r\n        // this timeout may fire if auth callback never comes or the client is stuck in a loop to get connected\r\n        if (this.eventLogSettings.sendProgressTimeoutSecs !== undefined && this.eventLogSettings.sendProgressTimeoutSecs > 0) {\r\n            this.progressTimeout = setTimeout(function () {\r\n                _this.sendProgress({\r\n                    reason: 'timeout',\r\n                    timeoutSecs: _this.eventLogSettings.sendProgressTimeoutSecs\r\n                });\r\n            }, 1000 * this.eventLogSettings.sendProgressTimeoutSecs);\r\n        }\r\n    };\r\n    ConnectionTracker.prototype.setConnectedInfo = function (isNewUrl, transportType) {\r\n        this.connectedInfo.numberOfPingReplies = 0;\r\n        this.connectedInfo.connectedTimestamp = Date.now();\r\n        this.connectedInfo.isNewUrl = isNewUrl;\r\n        this.connectedInfo.transportType = transportType;\r\n        ++this.connectedInfo.connectionNumber;\r\n    };\r\n    ConnectionTracker.prototype.clearConnectedInfo = function () {\r\n        this.connectedInfo.numberOfPingReplies = 0;\r\n        this.connectedInfo.connectedTimestamp = 0;\r\n        this.connectedInfo.isNewUrl = true;\r\n        this.connectedInfo.transportType = '';\r\n    };\r\n    // Copies from\r\n    // source {\r\n    //    propName: value\r\n    // }\r\n    // to\r\n    // dest {\r\n    //    propName: { value: actualValue }\r\n    // }\r\n    ConnectionTracker.prototype.copyProperties = function (dest, source) {\r\n        // copy properties from source and add in a format expected by logger\r\n        for (var _i = 0, _a = Object.keys(source); _i < _a.length; _i++) {\r\n            var prop = _a[_i];\r\n            if (source.hasOwnProperty(prop) && source[prop] !== undefined) {\r\n                // replace hyphen by _\r\n                dest[prop.replace(/-/g, '_')] = { value: source[prop] };\r\n            }\r\n        }\r\n    };\r\n    ConnectionTracker.prototype.increasePingResponseCount = function () {\r\n        ++this.connectedInfo.numberOfPingReplies;\r\n    };\r\n    /**\r\n     * @param eventName Telemetry event name\r\n     * @param eventProperties Event property bag\r\n     * @param progress\r\n     */\r\n    ConnectionTracker.prototype.sendTelemetry = function (eventName, eventProperties, progress) {\r\n        try {\r\n            if (this.eventLogSettings.enabled === true\r\n                && this.eventLogSettings[eventName] === true\r\n                && this.eventLogger !== undefined) {\r\n                var serverState = this.getServerState();\r\n                var clientEvent = {\r\n                    name: eventName,\r\n                    properties: {\r\n                        connectionAttempt: { value: this.connectionAttempt },\r\n                        epid: { value: this.endpointId },\r\n                        clientCorrelationID: { value: this.clientCorrelationID },\r\n                        steps: { value: Common_1.toJson(progress) },\r\n                        clientID: { value: this.clientId },\r\n                        eventVersion: { value: 3 },\r\n                        environment: { value: this.environment },\r\n                        cv: { value: Constants_1.CLIENT_VERSION },\r\n                        ua: { value: this.clientInfo.ua },\r\n                        // Copy ServerState\r\n                        connectionId: { value: serverState.connectionId },\r\n                        connectedClientId: { value: serverState.connectedClientId },\r\n                        domId: { value: serverState.domId },\r\n                        url: { value: serverState.unsecureUrl },\r\n                        surl: { value: serverState.url },\r\n                        ttlInSecs: { value: serverState.getRemainingTtlInSec() },\r\n                        // Copy this.connectedInfo\r\n                        numberOfPingReplies: { value: this.connectedInfo.numberOfPingReplies },\r\n                        connectedTimestamp: { value: this.connectedInfo.connectedTimestamp },\r\n                        isNewUrl: { value: this.connectedInfo.isNewUrl },\r\n                        transportType: { value: this.connectedInfo.transportType },\r\n                        connectionNumber: { value: this.connectedInfo.connectionNumber }\r\n                    }\r\n                };\r\n                this.copyProperties(clientEvent.properties, eventProperties);\r\n                this.eventLogger.logEvent(clientEvent);\r\n            }\r\n        }\r\n        catch (exc) {\r\n            this.logger.warn(\"error in sending event \" + eventName + \": \" + Common_1.toJson(exc));\r\n        }\r\n    };\r\n    ConnectionTracker.prototype.createStep = function (stepName, operation, error) {\r\n        return new TrackerStep(stepName, operation, this.beginTimestamp.duration, Date.now(), error);\r\n    };\r\n    ConnectionTracker.prototype.addStep = function (tag, progressHint, error) {\r\n        if (this.eventLogSettings.enabled === false) {\r\n            return;\r\n        }\r\n        if (this.steps.length === 0) {\r\n            this.beginTimestamp.reset();\r\n        }\r\n        this.steps.push(this.createStep(tag, progressHint, error));\r\n        ++this.totalStepCount;\r\n        // do not maintain an ever growing list of steps. send a progress event with what is collected so far and clear steps\r\n        // there should be enough context in any event for the server to group events created for the sameonnection\r\n        if (this.eventLogSettings.numberOfStepsToMaintain !== undefined\r\n            && this.steps.length > this.eventLogSettings.numberOfStepsToMaintain) {\r\n            var progress = this.steps.slice(0);\r\n            this.steps.length = 0;\r\n            this.sendTelemetry(ClientEventName.Progress, { reason: 'flush' }, progress);\r\n        }\r\n    };\r\n    ConnectionTracker.prototype.trackStart = function (tag) {\r\n        this.addStep(tag, 'start');\r\n    };\r\n    ConnectionTracker.prototype.trackEnd = function (tag) {\r\n        this.addStep(tag, 'end');\r\n    };\r\n    ConnectionTracker.prototype.trackError = function (tag, error, addStep, subOperation) {\r\n        if (addStep === void 0) { addStep = true; }\r\n        if (tag === 'health' && this.eventLogSettings.logHealthCheckError !== true) {\r\n            return;\r\n        }\r\n        if (tag === 'ping' && this.eventLogSettings.logSendPingError === false) {\r\n            return;\r\n        }\r\n        if (subOperation === undefined) {\r\n            subOperation = 'error';\r\n        }\r\n        if (addStep === true) {\r\n            this.addStep(tag, subOperation, error);\r\n        }\r\n        this.sendTelemetry(ClientEventName.Error, {}, [this.createStep(tag, subOperation, error)]);\r\n    };\r\n    ConnectionTracker.prototype.trackProgress = function (tag, subOperation) {\r\n        this.addStep(tag, subOperation);\r\n    };\r\n    ConnectionTracker.prototype.trackConnected = function (isNewUrl, transportType) {\r\n        this.setConnectedInfo(isNewUrl, transportType);\r\n        var progress = this.steps.slice(0);\r\n        var totalSteps = this.totalStepCount;\r\n        var connectionDuration = this.beginTimestamp.duration;\r\n        // clear steps collected\r\n        this.steps.length = 0;\r\n        this.totalStepCount = 0;\r\n        this.sendTelemetry(ClientEventName.Connected, {\r\n            stepCount: progress.length,\r\n            totalStepCount: totalSteps,\r\n            connectionEstablishmentMs_Total: connectionDuration\r\n        }, progress);\r\n        this.cancelProgressTimer();\r\n    };\r\n    ConnectionTracker.prototype.trackDisconnected = function (context) {\r\n        context.sessionLengthMS = Date.now() - this.connectedInfo.connectedTimestamp;\r\n        this.sendTelemetry(ClientEventName.Disconnected, context, []);\r\n        this.resetProgressSendTimer();\r\n    };\r\n    ConnectionTracker.prototype.trackNewConnection = function () {\r\n        ++this.connectionAttempt;\r\n    };\r\n    ConnectionTracker.prototype.trackRequest = function (request, errorMsg) {\r\n        var context = {};\r\n        if (errorMsg !== undefined) {\r\n            context.hasError = true;\r\n            context.error = errorMsg;\r\n        }\r\n        try {\r\n            if (request) {\r\n                context.requestID = request.id;\r\n                context.httpMethod = request.method;\r\n                context.url = request.url;\r\n                context.bodyLength = request.body.length;\r\n                context.shortUrl = request.shortUrl;\r\n                context.requestTimeStamp = request.startTS;\r\n                context.correlationVector = request.correlationVector;\r\n                var headers = request.headers;\r\n                for (var _i = 0, _a = Object.keys(headers); _i < _a.length; _i++) {\r\n                    var header = _a[_i];\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        context[header] = headers[header];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (exc) {\r\n            context.hasError = true;\r\n            context.error = context.error + \" error creating request context \" + Common_1.toJson(exc);\r\n        }\r\n        this.sendTelemetry(ClientEventName.Request, context, []);\r\n    };\r\n    ConnectionTracker.prototype.trackResponse = function (request, latencyMS, responseData, errorMsg) {\r\n        var context = {};\r\n        if (errorMsg !== undefined) {\r\n            context.hasError = true;\r\n            context.error = errorMsg;\r\n        }\r\n        try {\r\n            context.responseTimestamp = responseData !== undefined ? responseData.sentTS : Date.now();\r\n            if (request) {\r\n                context.requestID = request.id;\r\n                context.httpMethod = request.method;\r\n                context.shortUrl = request.shortUrl;\r\n                context.correlationVector = request.correlationVector;\r\n                var headers = request.headers;\r\n                for (var _i = 0, _a = Object.keys(headers); _i < _a.length; _i++) {\r\n                    var header = _a[_i];\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        context[header] = headers[header];\r\n                    }\r\n                }\r\n            }\r\n            if (responseData) {\r\n                context.latencyMS = latencyMS;\r\n                context.responseCode = responseData.status;\r\n                context.responseLength = responseData.body.length;\r\n            }\r\n        }\r\n        catch (exc) {\r\n            context.hasError = true;\r\n            context.error = context.error + \" error creating response context \" + Common_1.toJson(exc);\r\n        }\r\n        this.sendTelemetry(ClientEventName.Response, context, []);\r\n    };\r\n    ConnectionTracker.prototype.sendResponseError = function (errorMsg, request, responseData) {\r\n        this.trackResponse(request, undefined, responseData, errorMsg);\r\n    };\r\n    ConnectionTracker.prototype.close = function () {\r\n        this.sendProgress({\r\n            reason: 'closed'\r\n        });\r\n        this.steps.length = 0;\r\n        this.cancelProgressTimer();\r\n    };\r\n    ConnectionTracker.prototype.mergeSettings = function (settings) {\r\n        if (!settings) {\r\n            return;\r\n        }\r\n        this.eventLogSettings.numberOfStepsToMaintain = Math.min(40, Math.max(10, (settings.numberOfStepsToMaintain !== undefined ? settings.numberOfStepsToMaintain : 0)));\r\n        // min of 55 secs and max allowed is 1 hr\r\n        var newProgressTimeout = Math.min(3600, Math.max(55, settings.sendProgressTimeoutSecs !== undefined ? settings.sendProgressTimeoutSecs : 0));\r\n        this.eventLogSettings.logHealthCheckError = settings.logHealthCheckError;\r\n        this.eventLogSettings.logSendPingError = settings.logSendPingError;\r\n        // Copy enable/disable flags for all telemetry events\r\n        for (var _i = 0, _a = Object.keys(ClientEventName).map(function (k) { return ClientEventName[k]; }); _i < _a.length; _i++) {\r\n            var iterator = _a[_i];\r\n            if (settings.hasOwnProperty(iterator) && settings[iterator] !== undefined) {\r\n                this.eventLogSettings[iterator] = settings[iterator];\r\n            }\r\n        }\r\n        if (this.eventLogSettings.sendProgressTimeoutSecs !== newProgressTimeout) {\r\n            this.eventLogSettings.sendProgressTimeoutSecs = newProgressTimeout;\r\n            this.resetProgressSendTimer();\r\n        }\r\n    };\r\n    return ConnectionTracker;\r\n}());\r\nexports.ConnectionTracker = ConnectionTracker;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Executes callbacks with exponential backoff\r\n */\r\nvar ExponentialBackoff = /** @class */ (function () {\r\n    function ExponentialBackoff(logger, maxBackoffInMs) {\r\n        this.logger = logger;\r\n        this.maxBackoffInMs = maxBackoffInMs;\r\n        this.backoffId = 0;\r\n        this.backoffCount = 0;\r\n    }\r\n    ExponentialBackoff.calculateNextBackoffMs = function (backoffCount, maxBackoffInMs) {\r\n        // tslint:disable-next-line:insecure-random\r\n        var fudge = 1 + (Math.random() - 0.5) * 0.4; // +/- 20%\r\n        var backoff = 1000 * Math.pow(2, backoffCount) * fudge; // 1s initial\r\n        backoff = Math.round(backoff);\r\n        return Math.min(maxBackoffInMs, backoff);\r\n    };\r\n    ExponentialBackoff.prototype.setMaxBackoffMs = function (ms) {\r\n        this.maxBackoffInMs = ms;\r\n    };\r\n    ExponentialBackoff.prototype.backoff = function (taskName, handler) {\r\n        var _this = this;\r\n        if (this.timerHandle !== undefined) {\r\n            this.logger.debug('Clearing current back off');\r\n            clearTimeout(this.timerHandle);\r\n            this.timerHandle = undefined;\r\n        }\r\n        var backoffMs = ExponentialBackoff.calculateNextBackoffMs(this.backoffCount, this.maxBackoffInMs);\r\n        this.backoffId++;\r\n        this.backoffCount++;\r\n        this.logger.info(\"Backing off \" + taskName + \" for \" + backoffMs + \" milliseconds with ID \" + this.backoffId);\r\n        this.timerHandle = setTimeout(function () {\r\n            _this.logger.info(\"Back off for \" + taskName + \" with ID \" + _this.backoffId + \" complete, invoking handler\");\r\n            _this.timerHandle = undefined;\r\n            handler();\r\n        }, backoffMs);\r\n    };\r\n    ExponentialBackoff.prototype.reset = function () {\r\n        if (this.timerHandle !== undefined) {\r\n            this.logger.debug('Resetting back off');\r\n            clearTimeout(this.timerHandle);\r\n            this.timerHandle = undefined;\r\n        }\r\n        this.backoffCount = 0;\r\n    };\r\n    return ExponentialBackoff;\r\n}());\r\nexports.ExponentialBackoff = ExponentialBackoff;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:no-any\r\n// tslint:disable:no-unsafe-any\r\n// tslint:disable:strict-boolean-expressions\r\n// tslint:disable:max-classes-per-file\r\n// tslint:disable:promise-function-async\r\nvar tsregistrar_1 = __webpack_require__(20);\r\nvar es6_promise_1 = __webpack_require__(11);\r\nvar Common_1 = __webpack_require__(3);\r\nvar ConnectionTracker_1 = __webpack_require__(14);\r\nvar Constants_1 = __webpack_require__(2);\r\nvar ExponentialBackoff_1 = __webpack_require__(15);\r\nvar Interfaces_1 = __webpack_require__(1);\r\nvar InternalInterfaces_1 = __webpack_require__(5);\r\nvar Logger_1 = __webpack_require__(0);\r\nvar TrouterFsm_1 = __webpack_require__(17);\r\n// This is the current API version\r\nvar VERSION = 'v4';\r\n// Default value for registration timeout\r\nvar DEFAULT_REGISTRATION_TIMEOUT_SEC = 3600;\r\nvar io = __webpack_require__(10);\r\n/**\r\n * Stub for IClientInfo\r\n */\r\nvar ClientInfo = /** @class */ (function () {\r\n    function ClientInfo() {\r\n        this.cv = Constants_1.CLIENT_VERSION;\r\n        this.ua = '';\r\n        this.hr = '';\r\n        this.v = '';\r\n    }\r\n    return ClientInfo;\r\n}());\r\n/**\r\n * Stub for ISocketIoOptions\r\n */\r\nvar SocketIoOptions = /** @class */ (function () {\r\n    function SocketIoOptions() {\r\n        this['force new connection'] = true;\r\n        this['reconnect'] = false;\r\n        this['query'] = '';\r\n        this.ackTimeoutMs = 5000;\r\n    }\r\n    return SocketIoOptions;\r\n}());\r\nvar cvHeader = 'MS-CV';\r\n/**\r\n * Request from downstream service\r\n */\r\nvar TrouterRequest = /** @class */ (function () {\r\n    function TrouterRequest(requestJson) {\r\n        this.cvCounter = 0;\r\n        var json = JSON.parse(requestJson);\r\n        this.startTS = json.hasOwnProperty('startTS') ? json.startTS : 0;\r\n        this.url = json.hasOwnProperty('url') ? json.url : '';\r\n        this.shortUrl = json.hasOwnProperty('shortUrl') ? json.shortUrl : '';\r\n        this.body = json.hasOwnProperty('body') ? json.body : '';\r\n        this.headers = json.hasOwnProperty('headers') ? json.headers : {};\r\n        this.id = (json.hasOwnProperty('id') && typeof json.id === 'number') ? json.id : -1;\r\n        this.method = json.hasOwnProperty('method') ? json.method : '';\r\n        this.replied = false;\r\n        this.timedout = false;\r\n        this.timeoutTimerId = 0;\r\n        this.receivedCv = this.headers[cvHeader];\r\n        this.updateCvHeader();\r\n    }\r\n    Object.defineProperty(TrouterRequest.prototype, \"correlationVector\", {\r\n        get: function () {\r\n            return this.receivedCv ? this.receivedCv + \".\" + this.cvCounter : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TrouterRequest.prototype.on = function (target, targetCallback) {\r\n        if (target === 'data') {\r\n            this.dataCallback = targetCallback;\r\n        }\r\n        else if (target === 'end') {\r\n            if (typeof this.dataCallback === 'function') {\r\n                this.dataCallback(this.body);\r\n            }\r\n            targetCallback();\r\n        }\r\n    };\r\n    TrouterRequest.prototype.incrementCorrelationVector = function () {\r\n        ++this.cvCounter;\r\n        this.updateCvHeader();\r\n    };\r\n    TrouterRequest.prototype.updateCvHeader = function () {\r\n        var cv = this.correlationVector;\r\n        if (cv) {\r\n            this.headers[cvHeader] = cv;\r\n        }\r\n    };\r\n    return TrouterRequest;\r\n}());\r\n/**\r\n * Response to downstream service\r\n */\r\nvar TrouterResponse = /** @class */ (function () {\r\n    function TrouterResponse(request, responseData, sendResponse) {\r\n        this.request = request;\r\n        this.responseData = responseData;\r\n        this.sendResponse = sendResponse;\r\n    }\r\n    TrouterResponse.prototype.writeHead = function (status, headers) {\r\n        this.responseData.status = status;\r\n        this.responseData.headers = headers;\r\n    };\r\n    TrouterResponse.prototype.write = function (chunk) {\r\n        this.responseData.body += chunk;\r\n    };\r\n    TrouterResponse.prototype.end = function (chunk) {\r\n        if (chunk) {\r\n            this.responseData.body += chunk;\r\n        }\r\n        return this.sendResponse(this.request, this.responseData);\r\n    };\r\n    return TrouterResponse;\r\n}());\r\n/**\r\n * An client-initiated event that is to be sent to trouter.\r\n */\r\nvar DownstreamEvent = /** @class */ (function () {\r\n    function DownstreamEvent(name) {\r\n        this.name = name;\r\n        this.args = {};\r\n        this.timeoutTimerId = 0;\r\n    }\r\n    return DownstreamEvent;\r\n}());\r\n/**\r\n * Trouter + registration flow implementation\r\n */\r\nvar TrouterConnection = /** @class */ (function () {\r\n    function TrouterConnection(logProvider, options, manager, tokenProvider, initialUserActivityState) {\r\n        var _this = this;\r\n        this.options = options;\r\n        this.manager = manager;\r\n        this.tokenProvider = tokenProvider;\r\n        this.connectionId = '';\r\n        this.inIncallMode = false;\r\n        this.connectionAttempt = 0;\r\n        this.connectedClientId = '';\r\n        this.c2cUrlBase = '';\r\n        this.pendingTimers = {};\r\n        this.UNKNOWN_TRANSPORT = 'unknown_transport';\r\n        this.logger = new Logger_1.Logger('Connection', logProvider);\r\n        this.timeoutOptions = this.options.timeoutOptions;\r\n        this.healthBackoff = new ExponentialBackoff_1.ExponentialBackoff(this.logger, this.timeoutOptions.maxBackoffMs);\r\n        this.tokenBackoff = new ExponentialBackoff_1.ExponentialBackoff(this.logger, this.timeoutOptions.maxBackoffMs);\r\n        this.clientID = Date.now();\r\n        // tslint:disable-next-line:no-typeof-undefined - window exists only in browser\r\n        if ((typeof window !== 'undefined') && window.location) {\r\n            this.domId = window.location.hostname;\r\n        }\r\n        this.clientInfo = new ClientInfo();\r\n        this.clientInfo.cv = Constants_1.CLIENT_VERSION;\r\n        this.clientInfo.ua = '';\r\n        if (this.options && this.options.clientInfo) {\r\n            this.clientInfo.ua = this.safeString(this.options.clientInfo.ua);\r\n            this.clientInfo.v = this.safeString(this.options.clientInfo.v);\r\n        }\r\n        this.connectionTracker = new ConnectionTracker_1.ConnectionTracker(logProvider, this.clientID, this.clientInfo, function () { return _this.getServerState(); }, this.options.endpointId, this.options.clientCorrelationID, this.options.environment);\r\n        this.applyConnectionTrackerOptions(options);\r\n        var useIncallMode = this.options.incallModeTimeoutMs > 0;\r\n        this.fsm = new TrouterFsm_1.TrouterFsm(logProvider, this, useIncallMode);\r\n        if (options.registration) {\r\n            var registrarOptions = {\r\n                registrarUrl: options.registration.registrarUrl,\r\n                registrationId: options.registration.registrationId,\r\n                requestTimeoutMs: options.timeoutOptions.fetchTimeoutMs,\r\n                initialRetryDelayMs: 1000,\r\n                maxRetryDelayMs: options.timeoutOptions.maxBackoffMs\r\n            };\r\n            this.registrarClient = tsregistrar_1.createRegistrarClient(logProvider, this.tokenProvider, registrarOptions);\r\n        }\r\n        this.userActivityState = initialUserActivityState || Interfaces_1.UserActivityState.Unknown;\r\n    }\r\n    TrouterConnection.prototype.start = function () {\r\n        this.logger.info('Starting');\r\n        this.fsm.start();\r\n    };\r\n    TrouterConnection.prototype.stop = function (dontUnregister) {\r\n        this.logger.info('Stopping');\r\n        this.connectionTracker.close();\r\n        this.fsm.stop(dontUnregister);\r\n    };\r\n    TrouterConnection.prototype.configure = function (options) {\r\n        // Currently only baseUrl and telemetrySettings options are supported for reconfiguration\r\n        var urlChanged = this.options.trouterUrl !== options.trouterUrl;\r\n        this.options = options;\r\n        this.applyConnectionTrackerOptions(options);\r\n        if (urlChanged) {\r\n            this.onTrouterReconnect();\r\n        }\r\n    };\r\n    TrouterConnection.prototype.checkConnection = function (disconnectDetected) {\r\n        this.logger.info(\"checkConnection called with \" + disconnectDetected);\r\n        this.fsm.checkConnection(disconnectDetected);\r\n        // Don't send on disconnectDetected === false, because Teams client calls it on timer\r\n        if (disconnectDetected) {\r\n            this.connectionTracker.sendTelemetry(ConnectionTracker_1.ClientEventName.CheckConnection, {\r\n                disconnectDetected: disconnectDetected\r\n            }, []);\r\n        }\r\n    };\r\n    /** Returns info about connection */\r\n    TrouterConnection.prototype.getServerState = function () {\r\n        return new InternalInterfaces_1.ServerState(this.connectionId, this.connectedClientId, this.domId ? this.domId : '', this.allocateResult ? this.allocateResult.url : '', this.allocateResult ? this.allocateResult.surl : '', this.c2cUrlBase, this.connectionExpireTimestampInSecs);\r\n    };\r\n    TrouterConnection.prototype.getUserActivityState = function () {\r\n        return this.userActivityState;\r\n    };\r\n    //////// Implement IWorker ////////\r\n    TrouterConnection.prototype.getToken = function (useCache, backoff) {\r\n        var _this = this;\r\n        this.logger.info(\"Getting token \" + (backoff ? 'with backoff' : 'without backoff'));\r\n        var requestFunction = function () {\r\n            _this.connectionTracker.trackStart('token');\r\n            // tslint:disable-next-line:no-floating-promises\r\n            _this.tokenProvider(!useCache).then(function (token) {\r\n                _this.logger.debug('token is received');\r\n                _this.connectionTracker.trackEnd('token');\r\n                _this.fsm.onTokenReceived(token);\r\n            }).catch(function (error) {\r\n                var msg = Common_1.toJson(error.stack);\r\n                _this.logger.error(\"Getting token failed, will retry after timeout. Error: \" + msg);\r\n                _this.connectionTracker.trackError('token', msg);\r\n                _this.getToken(useCache, true);\r\n            });\r\n        };\r\n        if (backoff) {\r\n            this.tokenBackoff.backoff('getting token', requestFunction);\r\n        }\r\n        else {\r\n            this.tokenBackoff.reset();\r\n            requestFunction();\r\n        }\r\n    };\r\n    TrouterConnection.prototype.startConnectionTimer = function () {\r\n        var _this = this;\r\n        this.stopConnectionTimer();\r\n        this.logger.debug(\"Starting connection timeout for \" + this.timeoutOptions.connectionTimeoutMs + \" ms\");\r\n        this.connectionTimeoutId = setTimeout(function () {\r\n            _this.logger.info('Connection timeout is fired');\r\n            _this.fsm.onConnectingTimeout();\r\n        }, this.timeoutOptions.connectionTimeoutMs);\r\n    };\r\n    TrouterConnection.prototype.stopConnectionTimer = function () {\r\n        if (this.connectionTimeoutId) {\r\n            this.logger.debug('Stopping connection timeout');\r\n            clearTimeout(this.connectionTimeoutId);\r\n            this.connectionTimeoutId = undefined;\r\n        }\r\n    };\r\n    TrouterConnection.prototype.startPingTimer = function () {\r\n        var _this = this;\r\n        if (this.transportTypeName === 'websocket') {\r\n            this.logger.debug(\"Starting ping timeout for \" + this.timeoutOptions.pingTimeoutMs + \" ms\");\r\n            this.pingTimerId = setInterval(function () {\r\n                _this.logger.info('Ping interval fired');\r\n                _this.fsm.onPingInterval();\r\n            }, this.timeoutOptions.pingTimeoutMs);\r\n        }\r\n        else {\r\n            this.logger.debug(\"Not starting ping for transport \" + this.transportTypeName);\r\n        }\r\n    };\r\n    TrouterConnection.prototype.stopPingTimer = function () {\r\n        if (this.pingTimerId) {\r\n            this.logger.debug('Stopping ping timeout');\r\n            this.clearPingResponseTimer();\r\n            clearInterval(this.pingTimerId);\r\n            this.pingTimerId = undefined;\r\n        }\r\n    };\r\n    TrouterConnection.prototype.shouldSkipRegistration = function () {\r\n        return this.options.registration === undefined;\r\n    };\r\n    TrouterConnection.prototype.hasCustomRegisterTtl = function () {\r\n        return this.options.registration && this.options.registration.registrarTtlSec;\r\n    };\r\n    TrouterConnection.prototype.startRegisterTimer = function () {\r\n        var _this = this;\r\n        if (this.registrationTimerId !== undefined) {\r\n            this.logger.error('Another registration timer is set - don\\'t create another one');\r\n            return;\r\n        }\r\n        // 30 seconds for registration update\r\n        var ttl = this.getRegistrationTtl() - 30;\r\n        this.logger.debug(\"Starting registration timeout for \" + ttl + \" sec\");\r\n        this.registrationTimerId = setTimeout(function () {\r\n            _this.logger.info('Registration timeout is fired');\r\n            _this.registrationTimerId = undefined;\r\n            _this.fsm.onRegistrationTimeout();\r\n        }, ttl * 1000);\r\n    };\r\n    TrouterConnection.prototype.stopRegisterTimer = function () {\r\n        if (this.registrationTimerId) {\r\n            this.logger.debug('Stopping registration timeout');\r\n            clearTimeout(this.registrationTimerId);\r\n            this.registrationTimerId = undefined;\r\n        }\r\n    };\r\n    TrouterConnection.prototype.resendRegistration = function () {\r\n        if (!this.registrarClient) {\r\n            throw new Error('Trouter Client not configured to handle registrations');\r\n        }\r\n        return this.registrarClient.resendRegistration();\r\n    };\r\n    TrouterConnection.prototype.buildSocketIoUrlParams = function () {\r\n        if (!this.allocateResult) {\r\n            throw new Error('Allocate result is undefined in buildSocketIoUrlParams()');\r\n        }\r\n        var urlParams = {};\r\n        // Copy connection parameters (i.e. signature) from allocation response\r\n        if (this.allocateResult.connectparams) {\r\n            var signatureData = this.allocateResult.connectparams;\r\n            for (var _i = 0, _a = Object.keys(signatureData); _i < _a.length; _i++) {\r\n                var i = _a[_i];\r\n                if (signatureData.hasOwnProperty(i) && signatureData[i] !== undefined) {\r\n                    urlParams[i] = signatureData[i];\r\n                }\r\n            }\r\n        }\r\n        // And add some more fields\r\n        urlParams.v = VERSION;\r\n        urlParams.tc = encodeURI(Common_1.toJson(this.clientInfo));\r\n        urlParams.timeout = this.timeoutOptions.pingTimeoutMs / 1000;\r\n        urlParams.auth = 'true';\r\n        if (this.options.endpointId) {\r\n            urlParams.epid = this.options.endpointId;\r\n        }\r\n        if (this.userActivityState !== Interfaces_1.UserActivityState.Unknown) {\r\n            urlParams.userActivity = encodeURI(Common_1.toJson(this.createUserActivityObject(this.userActivityState)));\r\n        }\r\n        return this.appendConnectedClientIds(this.buildQuery(urlParams), true);\r\n    };\r\n    TrouterConnection.prototype.startSocketIo = function () {\r\n        var _this = this;\r\n        this.logger.info('Starting socket io');\r\n        this.connectionTracker.trackStart('connectSocket');\r\n        //this.connectionAttempt++;\r\n        if (!this.allocateResult) {\r\n            throw new Error('Allocate result is undefined in startSocketIo()');\r\n        }\r\n        var options = this.options.ioOptions || new SocketIoOptions();\r\n        // Regardless of any passed in socket.io options, force the following settings.\r\n        options['force new connection'] = true;\r\n        options.reconnect = false;\r\n        // Query params to each socket.io request\r\n        options.query = this.buildSocketIoUrlParams();\r\n        this.logger.info(\"connecting to \" + this.allocateResult.socketio + \"?\" + options.query);\r\n        // msg868 - clear all events and disconnect\r\n        this.stopSocketIo();\r\n        this.socket = (this.options.io || io).connect(this.allocateResult.socketio, options);\r\n        if (this.socket === undefined) {\r\n            throw new Error('Can\\'t create Socket.io object');\r\n        }\r\n        this.socket.on('connecting', function (transportTypeName) { _this.onSocketConnecting(transportTypeName); });\r\n        this.socket.on('connect', function () { _this.onSocketConnect(); });\r\n        this.socket.on('connect_failed', function (reason) { _this.onSocketConnectFailed(reason); });\r\n        this.socket.on('disconnect', function () { _this.onSocketDisconnect(); });\r\n        this.socket.on('reconnect', function () { _this.onSocketReconnect(); });\r\n        this.socket.on('reconnect_failed', function (reason) { _this.onSocketReconnectFailed(reason); });\r\n        this.socket.on('reconnecting', function () { _this.onSocketReconnecting(); });\r\n        this.socket.on('error', function (error) { _this.onSocketError(error); });\r\n        this.socket.on('message', function (request) { _this.onSocketMessage(request); });\r\n        this.socket.on('trouter.connected', function (eventArgs) { _this.onTrouterConnected(eventArgs); });\r\n        this.socket.on('trouter.reconnect', function () { _this.onTrouterReconnect(); });\r\n        this.socket.on('trouter.message_loss', function (eventArgs) { _this.onTrouterMessageLoss(eventArgs); });\r\n    };\r\n    TrouterConnection.prototype.stopSocketIo = function () {\r\n        if (this.socket) {\r\n            this.logger.info('clearing socket.io');\r\n            try {\r\n                for (var _i = 0, _a = [\r\n                    'connecting', 'connect', 'connect_failed', 'disconnect', 'reconnect', 'reconnect_failed',\r\n                    'reconnecting', 'error', 'message', 'trouter.connected', 'trouter.reconnect', 'trouter.message_loss'\r\n                ]; _i < _a.length; _i++) {\r\n                    var event_1 = _a[_i];\r\n                    this.socket.removeAllListeners(event_1);\r\n                }\r\n                this.socket.disconnect();\r\n                this.logger.debug('cleared socket');\r\n                this.socket = undefined;\r\n            }\r\n            catch (error) {\r\n                this.logger.error(\"exception in disconnecting previous socket. Error: \" + Common_1.toJson(error.stack));\r\n            }\r\n        }\r\n    };\r\n    TrouterConnection.prototype.dispatchConnected = function () {\r\n        this.logger.info('dispatching connected');\r\n        this.manager.onConnected(this);\r\n    };\r\n    TrouterConnection.prototype.dispatchRegistered = function () {\r\n        this.logger.info('dispatching connected');\r\n        this.manager.onRegistered(this);\r\n    };\r\n    TrouterConnection.prototype.dispatchDownstreamRequest = function (request) {\r\n        var _this = this;\r\n        this.logger.info('dispatching downstream request');\r\n        try {\r\n            var response = new TrouterResponse(request, new ConnectionTracker_1.ResponseData(request.id), function (req, responseData) {\r\n                _this.logger.info('sending response to downstream');\r\n                return _this.sendResponse(req, responseData);\r\n            });\r\n            this.manager.onDownstreamRequest(this, request, response);\r\n        }\r\n        catch (error) {\r\n            this.logger.error(\"exception in socket.on message. Error : \" + Common_1.toJson(error.stack));\r\n        }\r\n    };\r\n    TrouterConnection.prototype.dispatchReconnecting = function () {\r\n        this.logger.info('dispatching reconnecting');\r\n        this.manager.onReconnecting(this);\r\n    };\r\n    TrouterConnection.prototype.dispatchReconnectIsRequired = function () {\r\n        this.logger.info('dispatching reconnect is required by server');\r\n        this.manager.onReconnectIsRequired(this);\r\n    };\r\n    TrouterConnection.prototype.dispatchDisconnected = function () {\r\n        this.logger.info('dispatching disconnected');\r\n        this.manager.onDisconnected(this);\r\n    };\r\n    TrouterConnection.prototype.dispatchTrouterMessageLost = function (messageLossIndicators) {\r\n        this.logger.info('dispatching trouter lost message');\r\n        this.manager.onTrouterMessageLost(messageLossIndicators);\r\n    };\r\n    TrouterConnection.prototype.sendProcessedDroppedIndicators = function (messageLossIndicators) {\r\n        var _this = this;\r\n        try {\r\n            this.logger.info('emitting processed flow tags to the server');\r\n            var processedMessageLossEvent = new DownstreamEvent('trouter.processed_message_loss');\r\n            processedMessageLossEvent.args = { droppedIndicators: messageLossIndicators };\r\n            this.sendDownstreamEvent(processedMessageLossEvent, function () {\r\n                _this.logger.info('emitted processed flow tags to the server');\r\n            });\r\n        }\r\n        catch (error) {\r\n            var msg = Common_1.toJson(error.stack);\r\n            this.logger.error(\"unable to send processed message loss event. Error: \" + msg);\r\n            this.connectionTracker.trackError('trouter.processed_message_loss', msg, false);\r\n        }\r\n    };\r\n    TrouterConnection.prototype.resetAllocationConnectionParams = function () {\r\n        if (this.allocateResult) {\r\n            this.logger.info('Resetting allocation connection parameters');\r\n            this.allocateResult.connectparams = undefined;\r\n        }\r\n    };\r\n    TrouterConnection.prototype.sendAllocateRequest = function (token) {\r\n        var _this = this;\r\n        this.connectionAttempt++;\r\n        this.connectionTracker.trackNewConnection();\r\n        var url = this.appendCorrelationIds(this.options.trouterUrl, false);\r\n        if (this.allocateResult && this.allocateResult.connectparams) {\r\n            url += \"&\" + this.buildQuery(this.allocateResult.connectparams);\r\n            // Currently server doesn't return \"v\" in allocate result, but it\r\n            // can be changed, so implement it this way just in case\r\n            if (!this.allocateResult.connectparams.v) {\r\n                url += \"&v=\" + VERSION;\r\n            }\r\n        }\r\n        var allocateRequest = new Request(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: new Headers({\r\n                'X-Skypetoken': token,\r\n                'Content-Type': 'text/plain'\r\n            })\r\n        });\r\n        this.logger.info(\"sendAllocateRequest: POST \" + url);\r\n        this.connectionTracker.trackStart('allocation');\r\n        var responseStatusCode = -1;\r\n        this.fetchWithTimeout(allocateRequest, this.timeoutOptions.fetchTimeoutMs).then(function (response) {\r\n            responseStatusCode = response.status;\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText);\r\n            }\r\n            // tslint:disable-next-line:no-backbone-get-set-outside-model\r\n            var contentType = response.headers.get('content-type');\r\n            if (!contentType || (contentType !== 'application/json' && contentType.substring(0, 17) !== 'application/json;')) {\r\n                throw new Error(\"Content-type '\" + contentType + \"' is unexpected\");\r\n            }\r\n            _this.connectionTracker.trackEnd('allocation');\r\n            return response.json();\r\n        }).then(function (responseObj) {\r\n            _this.onAllocationResponse(responseObj);\r\n        }).catch(function (error) {\r\n            var msg = error + \", status code \" + responseStatusCode;\r\n            _this.logger.error(\"Allocation request failed. Error: \" + msg);\r\n            _this.connectionTracker.trackError('allocation', msg);\r\n            _this.fsm.onAllocationFailed(responseStatusCode === 401);\r\n        });\r\n    };\r\n    TrouterConnection.prototype.sendPingRequest = function () {\r\n        var _this = this;\r\n        if (this.socket && this.pingResponseTimerId === undefined) {\r\n            try {\r\n                this.logger.info('emitting ping event');\r\n                this.socket.emit('ping', function () { _this.onPingResponse(); });\r\n                this.pingResponseTimerId = setTimeout(function () {\r\n                    _this.logger.error('Ping response timeout is fired');\r\n                    _this.clearPingResponseTimer();\r\n                    _this.fsm.onPingResponseTimeout();\r\n                }, this.timeoutOptions.pongTimeoutMs);\r\n            }\r\n            catch (error) {\r\n                var msg = Common_1.toJson(error.stack);\r\n                this.logger.error(\"unable to send ping. Error: \" + msg);\r\n                this.connectionTracker.trackError('ping', msg, false);\r\n            }\r\n        }\r\n    };\r\n    TrouterConnection.prototype.setUserActivityState = function (state) {\r\n        var changed = (state !== this.userActivityState);\r\n        this.userActivityState = state;\r\n        this.fsm.onSetUserActivityState(state, changed);\r\n    };\r\n    TrouterConnection.prototype.sendUserActivityState = function (reason, connected) {\r\n        if (this.userActivityState === Interfaces_1.UserActivityState.Unknown) {\r\n            return;\r\n        }\r\n        if (this.transportTypeName === 'websocket' && connected) {\r\n            if (reason === InternalInterfaces_1.UserActivityEventReason.Connected) {\r\n                this.sendUserActivityStateMultiple(2);\r\n            }\r\n            else {\r\n                this.sendUserActivityStateMultiple(1);\r\n            }\r\n        }\r\n        else if (this.transportTypeName === 'xhr-polling') { // ignoring the connected flag\r\n            if (reason === InternalInterfaces_1.UserActivityEventReason.Modified) {\r\n                this.fsm.forceReconnect();\r\n            }\r\n        }\r\n    };\r\n    TrouterConnection.prototype.sendRegisterRequest = function () {\r\n        var _this = this;\r\n        if (!this.options.registration || !this.registrarClient) {\r\n            throw new Error('Internal error - options.registration is undefined');\r\n        }\r\n        if (!this.allocateResult) {\r\n            throw new Error('Allocate result is undefined in sendRegisterRequest()');\r\n        }\r\n        this.logger.info('sending register request');\r\n        var span = new Common_1.Timespan();\r\n        this.connectionTracker.trackStart('registration');\r\n        this.registrarClient.register({\r\n            appId: this.options.registration.pnhAppId,\r\n            aesKey: '',\r\n            languageId: 'en-US',\r\n            platform: this.options.registration.platform,\r\n            templateKey: this.options.registration.pnhTemplateKey,\r\n            platformUIVersion: this.options.registration.platformUIVersion,\r\n            productContext: this.options.registration.productContext\r\n        }, {\r\n            TROUTER: [{\r\n                    context: this.options.registration.context,\r\n                    path: this.allocateResult.surl,\r\n                    ttl: this.getRegistrationTtl()\r\n                }]\r\n        }).then(function () {\r\n            _this.logger.info('Register request successful');\r\n            _this.connectionTracker.trackEnd('registration');\r\n            _this.fsm.onRegistrationSucceed();\r\n            _this.connectionTracker.sendTelemetry(ConnectionTracker_1.ClientEventName.Registration, {\r\n                duration: span.duration\r\n            }, []);\r\n        }).catch(function (error) {\r\n            _this.logger.error(\"Register request failed. Error: \" + error);\r\n            _this.connectionTracker.trackError('registration', error.message);\r\n            _this.connectionTracker.sendTelemetry(ConnectionTracker_1.ClientEventName.Registration, {\r\n                duration: span.duration\r\n            }, []);\r\n        });\r\n    };\r\n    TrouterConnection.prototype.sendUnregisterRequest = function () {\r\n        var _this = this;\r\n        this.logger.info('sending unregister request');\r\n        var span = new Common_1.Timespan();\r\n        if (!this.options.registration || !this.registrarClient) {\r\n            throw new Error('Internal error - options.registration is undefined');\r\n        }\r\n        this.connectionTracker.trackStart('unregistration');\r\n        this.registrarClient.unregister().then(function () {\r\n            _this.logger.info('Unregister request successful');\r\n            _this.connectionTracker.trackEnd('unregistration');\r\n            _this.fsm.onUnregistrationSucceed();\r\n            _this.connectionTracker.sendTelemetry(ConnectionTracker_1.ClientEventName.Unregistration, {\r\n                duration: span.duration\r\n            }, []);\r\n        }).catch(function (error) {\r\n            _this.logger.error(\"Unregister request failed. Error: \" + error);\r\n            _this.connectionTracker.trackError('unregistration', error.message);\r\n            _this.fsm.onUnregistrationFailed(false);\r\n            _this.connectionTracker.sendTelemetry(ConnectionTracker_1.ClientEventName.Unregistration, {\r\n                duration: span.duration\r\n            }, []);\r\n        });\r\n    };\r\n    /** Wrapper to send request with specified timeout */\r\n    TrouterConnection.prototype.fetchWithTimeout = function (request, timeoutMs) {\r\n        return new es6_promise_1.Promise(function (resolve, reject) {\r\n            fetch(request).then(resolve).catch(reject);\r\n            if (timeoutMs !== 0) {\r\n                // tslint:disable-next-line:no-string-based-set-timeout - false positive\r\n                setTimeout(reject, timeoutMs, new Error(\"Fetch for '\" + request.url + \"' timed out\"));\r\n            }\r\n        });\r\n    };\r\n    TrouterConnection.prototype.resetTokenBackoff = function () {\r\n        this.tokenBackoff.reset();\r\n    };\r\n    TrouterConnection.prototype.resetRegisterBackoff = function () {\r\n        if (this.registrarClient) {\r\n            this.registrarClient.cancelPendingRequests();\r\n        }\r\n    };\r\n    TrouterConnection.prototype.clearTimers = function () {\r\n        this.logger.debug('Clearing all pending downstream events related timers');\r\n        for (var _i = 0, _a = Object.keys(this.pendingTimers); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            this.clearTimer(Number(key));\r\n        }\r\n    };\r\n    TrouterConnection.prototype.restartIncallModeTimer = function () {\r\n        var _this = this;\r\n        this.clearIncallModeTimerId();\r\n        this.logger.debug('Restarting incall mode timer');\r\n        this.incallModeTimerId = setTimeout(function () {\r\n            _this.logger.info('Call mode timer fired');\r\n            _this.fsm.onIncallModeTimer();\r\n        }, this.options.incallModeTimeoutMs);\r\n    };\r\n    TrouterConnection.prototype.enterIncallMode = function () {\r\n        this.logger.info('Entering incall mode');\r\n        this.timeoutOptions = this.options.incallTimeoutOptions;\r\n        this.healthBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs);\r\n        this.tokenBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs);\r\n        // Uncomment to enable change of timeout in XHR mode - do it once server start to support it\r\n        // if (this.socket) {\r\n        //     this.socket.socket.options.query = this.buildSocketIoUrlParams();\r\n        // }\r\n        this.inIncallMode = true;\r\n    };\r\n    TrouterConnection.prototype.exitIncallMode = function () {\r\n        this.logger.info('Exiting incall mode');\r\n        this.clearIncallModeTimerId();\r\n        this.timeoutOptions = this.options.timeoutOptions;\r\n        this.healthBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs);\r\n        this.tokenBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs);\r\n        // Uncomment to enable change of timeout in XHR mode - do it once server start to support it\r\n        // if (this.socket) {\r\n        //     this.socket.socket.options.query = this.buildSocketIoUrlParams();\r\n        // }\r\n        this.inIncallMode = false;\r\n    };\r\n    TrouterConnection.prototype.isIncallMode = function () {\r\n        return this.inIncallMode;\r\n    };\r\n    ////////// SocketIO callbacks //////////\r\n    TrouterConnection.prototype.onSocketConnecting = function (transportTypeName) {\r\n        this.logger.info(\"onSocketConnecting(\" + transportTypeName + \")\");\r\n        this.transportTypeName = transportTypeName;\r\n        this.connectionTracker.trackProgress('connecting', this.transportTypeName);\r\n        this.fsm.onConnecting();\r\n    };\r\n    TrouterConnection.prototype.onSocketConnect = function () {\r\n        this.logger.info('onSocketConnect');\r\n    };\r\n    TrouterConnection.prototype.onSocketConnectFailed = function (reason) {\r\n        this.logger.error('onSocketConnectFailed');\r\n        this.connectionTracker.trackError('connect_failed', reason, true, this.transportTypeName ? this.transportTypeName : this.UNKNOWN_TRANSPORT);\r\n        this.fsm.onConnectingFailed();\r\n    };\r\n    TrouterConnection.prototype.onSocketDisconnect = function () {\r\n        this.logger.error('onSocketDisconnect');\r\n        this.connectionTracker.trackDisconnected({ serverClosed: !this.fsm.isActive() });\r\n        this.connectionTracker.clearConnectedInfo();\r\n        this.fsm.onSocketError(undefined);\r\n        this.connectionExpireTimestampInSecs = undefined;\r\n    };\r\n    TrouterConnection.prototype.onSocketReconnect = function () {\r\n        // this callback should not be called, because reconnect on socket.io is disabled, but\r\n        // leave it here in case error in socket.io\r\n        this.logger.error('onSocketReconnect');\r\n        this.fsm.onTrouterConnected();\r\n    };\r\n    TrouterConnection.prototype.onSocketReconnectFailed = function (reason) {\r\n        // this callback should not be called, because reconnect on socket.io is disabled, but\r\n        // leave it here in case error in socket.io\r\n        this.logger.error(\"onSocketReconnectFailed with '\" + reason + \"'\");\r\n        this.fsm.onSocketError(typeof reason === 'string' ? reason : undefined);\r\n    };\r\n    TrouterConnection.prototype.onSocketReconnecting = function () {\r\n        // this callback should not be called, because reconnect on socket.io is disabled, but\r\n        // leave it here in case error in socket.io\r\n        this.logger.error('onSocketReconnecting');\r\n    };\r\n    TrouterConnection.prototype.onSocketError = function (errorObject) {\r\n        this.logger.error(\"onSocketError with '\" + Common_1.toJson(errorObject) + \"'\");\r\n        this.connectionTracker.trackError('connectSocket', errorObject);\r\n        this.fsm.onSocketError(typeof errorObject === 'string' ? errorObject : undefined);\r\n    };\r\n    TrouterConnection.prototype.onSocketMessage = function (requestJson) {\r\n        var _this = this;\r\n        this.logger.info('onSocketMessage');\r\n        var request;\r\n        try {\r\n            request = new TrouterRequest(requestJson);\r\n            var chainId = request.headers && request.headers['X-Microsoft-Skype-Chain-ID'];\r\n            var chainIdLogText = chainId ? \" Chain-Id \" + chainId : '';\r\n            this.logger.info(\"Received request N \" + request.id + chainIdLogText + \" CV \" + request.correlationVector + \" to '\" + request.url + \"'\");\r\n            request.startTS = Date.now();\r\n            if (request.url && this.urlPath && request.url.indexOf(this.urlPath) === 0) {\r\n                request.shortUrl = request.url.substring(this.urlPath.length);\r\n            }\r\n        }\r\n        catch (error) {\r\n            var msg = Common_1.toJson(error.stack);\r\n            this.logger.error(\"unable to parse request. Error: \" + msg);\r\n            this.connectionTracker.trackRequest(undefined, msg);\r\n            this.connectionTracker.sendResponseError(\"unable to parse request, error: \" + error);\r\n            return;\r\n        }\r\n        request.timeoutTimerId = setTimeout(function () {\r\n            if (request.replied) {\r\n                return;\r\n            }\r\n            _this.logger.error(\"Request \" + request.id + \" timed out\");\r\n            var responseData = new ConnectionTracker_1.ResponseData(request.id);\r\n            responseData.status = 504;\r\n            responseData.headers = { 'Trouter-Responder': 'ClientLib' };\r\n            _this.sendResponse(request, responseData);\r\n            request.timedout = true;\r\n        }, this.timeoutOptions.requestTimeoutMs);\r\n        try {\r\n            this.connectionTracker.trackRequest(request);\r\n            this.fsm.onDownstreamRequest(request);\r\n        }\r\n        catch (error) {\r\n            this.logger.error(\"exception in socket.on message. Error: \" + Common_1.toJson(error.stack));\r\n            this.connectionTracker.sendResponseError(error.message, request, undefined);\r\n        }\r\n    };\r\n    TrouterConnection.prototype.onTrouterConnected = function (eventArgs) {\r\n        if (!this.allocateResult) {\r\n            this.logger.error('Invalid internal state - received onTrouterConnected while allocateResult is not set');\r\n            return;\r\n        }\r\n        this.logger.info(\"onTrouterConnected: \" + this.allocateResult.url);\r\n        // Prevent next 'trouter.connected' responses from other trouter nodes\r\n        // hackish way, since socket.io doesn't have API for that\r\n        if (this.socket && this.socket.socket && this.socket.socket.options && this.socket.socket.options.query) {\r\n            this.socket.socket.options.query += '&connected=true';\r\n        }\r\n        // Strip off the first part of the URL, up to the path\r\n        this.urlPath = this.allocateResult.url.replace(/https?:\\/\\/([A-z0-9\\:\\$\\-\\_\\.\\+\\!\\*\\\"\\(\\)\\,]*)\\//, '/');\r\n        var isNewUrl = (this.connectedUrl !== this.allocateResult.url);\r\n        this.connectedUrl = this.allocateResult.url;\r\n        this.connectionExpireTimestampInSecs = Common_1.calculateExpireTsInSec(eventArgs.ttl);\r\n        this.connectionTracker.trackEnd('connectSocket');\r\n        this.connectionTracker.trackConnected(isNewUrl, this.transportTypeName ? this.transportTypeName : this.UNKNOWN_TRANSPORT);\r\n        this.fsm.onTrouterConnected();\r\n    };\r\n    TrouterConnection.prototype.onTrouterReconnect = function () {\r\n        this.logger.info('onTrouterReconnect');\r\n        this.fsm.onReconnectRequired();\r\n    };\r\n    TrouterConnection.prototype.onTrouterMessageLoss = function (eventArgs) {\r\n        this.logger.info('onTrouterMessageLoss');\r\n        // Send only array of tags for further processing\r\n        this.fsm.onTrouterMessageLost(eventArgs.droppedIndicators);\r\n    };\r\n    ////////// Other functions //////////\r\n    TrouterConnection.prototype.onAllocationResponse = function (allocateResult) {\r\n        this.logger.info(\"Received allocation response \" + JSON.stringify(allocateResult));\r\n        this.allocateResult = allocateResult;\r\n        // in V4 ttl is a string in IAllocateResult - converting it to number with \"+\"\r\n        var ttl = +allocateResult.ttl;\r\n        // Don't use allocateResult.connectparams.se here since system clock can be\r\n        // incorrect on client's machine, so using TTL is safer\r\n        this.connectionExpireTimestampInSecs = Common_1.calculateExpireTsInSec(ttl);\r\n        this.connectionId = this.allocateResult.id || '';\r\n        this.connectedClientId = this.allocateResult.ccid;\r\n        this.logger.info(\"connected client id set {connectedClientId:\" + this.connectedClientId + \"}\");\r\n        this.c2cUrlBase = allocateResult.curlb || '';\r\n        if (this.c2cUrlBase === '') {\r\n            // Try to just remove the port as a fallback if the service didn't provide anything\r\n            var pos = allocateResult.surl.indexOf('://');\r\n            if (pos >= 0) {\r\n                pos = allocateResult.surl.indexOf('/', pos + 3);\r\n                if (pos >= 5 && allocateResult.surl.substr(pos - 5, 5) === ':3443') {\r\n                    this.c2cUrlBase = allocateResult.surl.substr(0, pos - 5);\r\n                }\r\n            }\r\n        }\r\n        this.fsm.onAllocationSucceed();\r\n    };\r\n    TrouterConnection.prototype.onPingResponse = function () {\r\n        this.logger.info('onPingResponse');\r\n        this.connectionTracker.increasePingResponseCount();\r\n        this.clearPingResponseTimer();\r\n        this.fsm.onPingResponse();\r\n    };\r\n    TrouterConnection.prototype.clearPingResponseTimer = function () {\r\n        if (this.pingResponseTimerId !== undefined) {\r\n            clearTimeout(this.pingResponseTimerId);\r\n            this.pingResponseTimerId = undefined;\r\n        }\r\n    };\r\n    TrouterConnection.prototype.buildQuery = function (map) {\r\n        var components = [];\r\n        for (var _i = 0, _a = Object.keys(map); _i < _a.length; _i++) {\r\n            var i = _a[_i];\r\n            if (map.hasOwnProperty(i) && map[i] !== undefined) {\r\n                components.push(i + \"=\" + map[i]);\r\n            }\r\n        }\r\n        return components.join('&');\r\n    };\r\n    TrouterConnection.prototype.appendConnectedClientIds = function (url, isParamsOnly) {\r\n        var params = '';\r\n        if (url.indexOf('ccid=') < 0) {\r\n            params = \"ccid=\" + this.connectedClientId + \"&\";\r\n        }\r\n        if (this.domId) {\r\n            params += \"dom=\" + this.domId + \"&\";\r\n        }\r\n        if (params.length > 0) {\r\n            params = params.slice(0, -1);\r\n        }\r\n        var sep = (isParamsOnly || url.indexOf('?') !== -1) ? ('&') : ('?');\r\n        return this.appendCorrelationIds(url + sep + params, isParamsOnly);\r\n    };\r\n    TrouterConnection.prototype.appendCorrelationIds = function (url, isParamsOnly) {\r\n        var sep = (isParamsOnly || url.indexOf('?') !== -1) ? ('&') : ('?');\r\n        return (url.indexOf('cor_id') < 0)\r\n            ? \"\" + url + sep + \"cor_id=\" + this.options.clientCorrelationID\r\n                + (\"&con_num=\" + this.clientID + \"_\" + this.connectionAttempt)\r\n            : url;\r\n    };\r\n    TrouterConnection.prototype.getHealthUrl = function (allocateUrl) {\r\n        return allocateUrl.substring(0, allocateUrl.lastIndexOf('/a')) + \"/h\";\r\n    };\r\n    TrouterConnection.prototype.safeString = function (str) {\r\n        return (typeof (str) === 'string') ? str : '';\r\n    };\r\n    TrouterConnection.prototype.sendResponse = function (request, responseData) {\r\n        if (request.timedout) {\r\n            this.logger.error(\"Request \" + request.id + \" already timed out\");\r\n            return 1 /* Timeout */;\r\n        }\r\n        if (request.replied) {\r\n            this.logger.error(\"Response for request \" + request.id + \" already sent\");\r\n            return 2 /* Duplicate */;\r\n        }\r\n        clearTimeout(request.timeoutTimerId);\r\n        request.timeoutTimerId = 0;\r\n        request.replied = true;\r\n        responseData.headers = responseData.headers || {};\r\n        var cv = request.correlationVector;\r\n        this.logger.info(\"Sending response for request N \" + request.id + \" CV \" + cv + \" with status \" + responseData.status);\r\n        if (cv) {\r\n            responseData.headers[cvHeader] = cv;\r\n        }\r\n        // Echo back the incoming \"trouter-request\" header\r\n        if (request.headers && request.headers['trouter-request'] && !responseData.headers['trouter-request']) {\r\n            responseData.headers['trouter-request'] = request.headers['trouter-request'];\r\n        }\r\n        // Fill in \"trouter-client\" header\r\n        var latencyMS = Date.now() - request.startTS;\r\n        responseData.headers['trouter-client'] = Common_1.toJson({\r\n            cd: latencyMS\r\n        });\r\n        this.logger.debug(\"response: \" + Common_1.toJson(responseData));\r\n        if (this.socket) {\r\n            try {\r\n                this.socket.send(Common_1.toJson(responseData));\r\n                responseData.sentTS = Date.now();\r\n                request.incrementCorrelationVector();\r\n                this.connectionTracker.trackResponse(request, latencyMS, responseData);\r\n                if (this.transportTypeName === 'websocket') {\r\n                    // Send ping request immediately to emulate 'ack' from server, so\r\n                    // client can faster react on network issues\r\n                    this.sendPingRequest();\r\n                }\r\n                return 0 /* OK */;\r\n            }\r\n            catch (error) {\r\n                var errorMsg = \"unable to send data on response.end. Error: \" + Common_1.toJson(error.stack);\r\n                this.logger.error(errorMsg);\r\n                this.connectionTracker.sendResponseError(errorMsg, request, responseData);\r\n                return 4 /* Disconnected */;\r\n            }\r\n        }\r\n        else {\r\n            this.connectionTracker.sendResponseError('no socket', request, responseData);\r\n            return 4 /* Disconnected */;\r\n        }\r\n    };\r\n    /*\r\n        Sends the activity state event to Trouter.\r\n        Has implemented support for sending the current state twice (or multiple times)\r\n        after reconnect, first immediately, and theen the second after configured delay.\r\n\r\n        If after the first sent state event the client app changes the state,\r\n        the new state is sent in the second event after the delay.\r\n        Meanwhile the new state is also sent immediately upon\r\n        the change, but the planned second sending (after delay) is triggered anyway,\r\n        to fulfill it's purpose, which is to prevent server-side race condition.\r\n     */\r\n    TrouterConnection.prototype.sendUserActivityStateMultiple = function (remaining) {\r\n        var _this = this;\r\n        var activityEvent = new DownstreamEvent('user.activity');\r\n        activityEvent.args = this.createUserActivityObject(this.userActivityState);\r\n        this.logger.debug(\"Sending user activity '\" + Interfaces_1.UserActivityState[this.userActivityState] + \"', remaining \" + (remaining - 1));\r\n        this.sendDownstreamEvent(activityEvent, function () {\r\n            _this.onDownstreamEventResponse(activityEvent);\r\n            _this.clearTimer(activityEvent.timeoutTimerId);\r\n            if (remaining > 1) {\r\n                var timerId_1 = setTimeout(function () {\r\n                    _this.clearTimer(timerId_1);\r\n                    _this.sendUserActivityStateMultiple(remaining - 1);\r\n                }, _this.options.userActivitySecondResendDelayMs);\r\n                _this.registerTimer(timerId_1, 'user.activity/resend');\r\n            }\r\n        });\r\n        activityEvent.timeoutTimerId = setTimeout(function () {\r\n            _this.logger.error('Activity state response timeout is fired');\r\n            _this.fsm.onActivityStateResponseTimeout();\r\n            _this.clearTimer(activityEvent.timeoutTimerId);\r\n        }, this.timeoutOptions.userActivityResponseTimeoutMs);\r\n        this.registerTimer(activityEvent.timeoutTimerId, 'user.activity/response');\r\n    };\r\n    TrouterConnection.prototype.sendDownstreamEvent = function (event, responseCallback) {\r\n        this.logger.info(\"Sending downstream event \" + event.name);\r\n        if (this.socket) {\r\n            this.socket.emit(event.name, event.args, responseCallback);\r\n        }\r\n    };\r\n    TrouterConnection.prototype.onDownstreamEventResponse = function (event) {\r\n        this.logger.info(\"onDownstreamEventResponse(\" + event.name + \")\");\r\n    };\r\n    TrouterConnection.prototype.registerTimer = function (timerId, timerDescription) {\r\n        this.logger.debug(\"registering timer \" + timerId + \" -> \" + timerDescription);\r\n        this.pendingTimers[timerId] = timerDescription;\r\n    };\r\n    TrouterConnection.prototype.clearTimer = function (id) {\r\n        var timerDescription = this.pendingTimers[id];\r\n        this.logger.debug(\"clearing timer \" + id + \" -> \" + timerDescription);\r\n        delete this.pendingTimers[id];\r\n        clearTimeout(id);\r\n    };\r\n    /**\r\n     * Calculate registration interval. Result is based on configuration parameters\r\n     * and allocation ttl value from trouter server\r\n     */\r\n    TrouterConnection.prototype.getRegistrationTtl = function () {\r\n        var allocationTtl = Common_1.calculateTtlInSec(this.connectionExpireTimestampInSecs);\r\n        this.logger.debug(\"Current connectionID will expire in \" + allocationTtl + \" seconds\");\r\n        if (this.options.registration && this.options.registration.registrarTtlSec && allocationTtl > 0) {\r\n            return Math.min(this.options.registration.registrarTtlSec, allocationTtl);\r\n        }\r\n        else if (this.options.registration && this.options.registration.registrarTtlSec) {\r\n            return this.options.registration.registrarTtlSec;\r\n        }\r\n        else if (allocationTtl > 0) {\r\n            return allocationTtl;\r\n        }\r\n        return DEFAULT_REGISTRATION_TIMEOUT_SEC;\r\n    };\r\n    TrouterConnection.prototype.clearIncallModeTimerId = function () {\r\n        if (this.incallModeTimerId !== undefined) {\r\n            this.logger.debug('Clearing in-call mode timer');\r\n            clearTimeout(this.incallModeTimerId);\r\n            this.incallModeTimerId = undefined;\r\n        }\r\n    };\r\n    TrouterConnection.prototype.applyConnectionTrackerOptions = function (options) {\r\n        try {\r\n            var eventLoggerSent = (options.eventLogger && typeof options.eventLogger.logEvent === 'function');\r\n            if (!eventLoggerSent) {\r\n                this.logger.warn('Trouter client event logging disabled due to invalid configuration.');\r\n            }\r\n            else {\r\n                this.connectionTracker.mergeSettings(options.telemetrySettings);\r\n                this.connectionTracker.enable(options.eventLogger);\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.logger.warn(\"Trouter client event logging disabled. Error: \" + Common_1.toJson(error.stack));\r\n            this.connectionTracker.disable();\r\n        }\r\n    };\r\n    TrouterConnection.prototype.createUserActivityObject = function (state) {\r\n        var stateStr;\r\n        switch (state) {\r\n            case Interfaces_1.UserActivityState.Active:\r\n                stateStr = 'active';\r\n                break;\r\n            case Interfaces_1.UserActivityState.Inactive:\r\n                stateStr = 'inactive';\r\n                break;\r\n            case Interfaces_1.UserActivityState.Unknown:\r\n                stateStr = 'unknown';\r\n                break;\r\n            default:\r\n                stateStr = 'undefined';\r\n                break;\r\n        }\r\n        return { state: stateStr };\r\n    };\r\n    return TrouterConnection;\r\n}());\r\nexports.TrouterConnection = TrouterConnection;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Interfaces_1 = __webpack_require__(1);\r\nvar InternalInterfaces_1 = __webpack_require__(5);\r\nvar Logger_1 = __webpack_require__(0);\r\n/**\r\n * After this count of 'soft' (5XX, no response) connection errors, FSM will start a new allocation.\r\n * Doesn't apply for 'hard' errors like 4XX, in this case FSM will start a new allocation immediately.\r\n */\r\nvar MAXIMUM_CONNECTION_ERRORS_COUNT = 2;\r\nvar State;\r\n(function (State) {\r\n    State[State[\"Initial\"] = 0] = \"Initial\";\r\n    /** waiting for token from User */\r\n    State[State[\"RetrievingToken\"] = 1] = \"RetrievingToken\";\r\n    /** waiting for allocation response from service */\r\n    State[State[\"Allocating\"] = 2] = \"Allocating\";\r\n    /**\r\n     * waiting for Socket.IO handshake to be finished. After that Socket.IO will\r\n     * start to try transports and send 'connecting' event\r\n     */\r\n    State[State[\"Handshaking\"] = 3] = \"Handshaking\";\r\n    /**\r\n     * waiting for 'connected' event - socket.io is trying different transports.\r\n     * onSocketError event should be ignored, as it's expected event. So, only ConnectFailed or\r\n     * connection timeout meas failed connection\r\n     */\r\n    State[State[\"Connecting\"] = 4] = \"Connecting\";\r\n    /** ready to work */\r\n    State[State[\"Connected\"] = 5] = \"Connected\";\r\n    /** waiting for token from User to send 'unregister' request */\r\n    State[State[\"UnregisteringRetrievingToken\"] = 6] = \"UnregisteringRetrievingToken\";\r\n    /** waiting for succesful 'unregister' response */\r\n    State[State[\"Unregistering\"] = 7] = \"Unregistering\";\r\n})(State = exports.State || (exports.State = {}));\r\nvar ConnectedSubstate;\r\n(function (ConnectedSubstate) {\r\n    ConnectedSubstate[ConnectedSubstate[\"Initial\"] = 0] = \"Initial\";\r\n    /** waiting for token from User */\r\n    ConnectedSubstate[ConnectedSubstate[\"RetrievingToken\"] = 1] = \"RetrievingToken\";\r\n    /** waiting for succesful 'register' response */\r\n    ConnectedSubstate[ConnectedSubstate[\"Registering\"] = 2] = \"Registering\";\r\n    /** Registration succeed */\r\n    ConnectedSubstate[ConnectedSubstate[\"Registered\"] = 3] = \"Registered\";\r\n    /** Registration is skipped */\r\n    ConnectedSubstate[ConnectedSubstate[\"NotRegistered\"] = 4] = \"NotRegistered\";\r\n})(ConnectedSubstate || (ConnectedSubstate = {}));\r\n/**\r\n * State machine for trouter\r\n */\r\nvar TrouterFsm = /** @class */ (function () {\r\n    function TrouterFsm(logfunc, worker, incallModeEnabled) {\r\n        this.worker = worker;\r\n        this.incallModeEnabled = incallModeEnabled;\r\n        this.state = State.Initial;\r\n        this.connectionErrors = 0;\r\n        this.logger = new Logger_1.Logger('ConnectionFsm', logfunc);\r\n        this.connectedSubstate = ConnectedSubstate.Initial;\r\n        this.userActivityState = Interfaces_1.UserActivityState.Unknown;\r\n    }\r\n    /** Returns current state */\r\n    TrouterFsm.prototype.getState = function () {\r\n        return this.state;\r\n    };\r\n    TrouterFsm.prototype.isActive = function () {\r\n        return this.state === State.Allocating\r\n            || this.state === State.Connected\r\n            || this.state === State.Handshaking\r\n            || this.state === State.Connecting\r\n            || this.state === State.RetrievingToken;\r\n    };\r\n    //////////// Events ////////////\r\n    /**\r\n     * Start trouter\r\n     */\r\n    TrouterFsm.prototype.start = function () {\r\n        if (this.state === State.Initial) {\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.getToken(true, false);\r\n            return true;\r\n        }\r\n        else {\r\n            this.showIgnored('start');\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Stop trouter\r\n     * @param dontUnregister    if true, FSM will not unregister. It's needed in case of two simultaneous\r\n     *                          connections, to replace first connection with second\r\n     */\r\n    TrouterFsm.prototype.stop = function (dontUnregister) {\r\n        if (dontUnregister) {\r\n            this.connectedSubstate = ConnectedSubstate.Initial;\r\n        }\r\n        if (this.worker.isIncallMode()) {\r\n            this.worker.exitIncallMode();\r\n        }\r\n        this.worker.resetTokenBackoff();\r\n        this.worker.resetRegisterBackoff();\r\n        this.worker.stopConnectionTimer();\r\n        this.worker.stopPingTimer();\r\n        this.worker.clearTimers();\r\n        if (this.state === State.Connecting\r\n            || this.state === State.Handshaking\r\n            || this.state === State.Connected) {\r\n            this.worker.stopSocketIo();\r\n        }\r\n        // Stop can happen in any state - the only difference is if registration exists or not\r\n        if (this.isRegistered()) {\r\n            this.setState(State.UnregisteringRetrievingToken);\r\n            this.worker.stopRegisterTimer();\r\n            this.worker.getToken(true, false);\r\n        }\r\n        else {\r\n            this.setState(State.Initial);\r\n            this.worker.dispatchDisconnected();\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onTokenReceived = function (token) {\r\n        if (this.state === State.RetrievingToken) {\r\n            this.setState(State.Allocating);\r\n            this.worker.startConnectionTimer();\r\n            this.worker.sendAllocateRequest(token);\r\n        }\r\n        else if (this.state === State.Connected && this.connectedSubstate === ConnectedSubstate.RetrievingToken) {\r\n            this.connectedSubstate = ConnectedSubstate.Registering;\r\n            this.worker.sendRegisterRequest();\r\n        }\r\n        else if (this.state === State.UnregisteringRetrievingToken) {\r\n            this.setState(State.Unregistering);\r\n            this.worker.sendUnregisterRequest();\r\n        }\r\n        else {\r\n            this.showIgnored('onTokenReceived');\r\n        }\r\n    };\r\n    /**\r\n     * if disconnectDetected - need to send ping to check if connection is really dead,\r\n     * otherwise - network is available\r\n     */\r\n    TrouterFsm.prototype.checkConnection = function (disconnectDetected) {\r\n        if (disconnectDetected) {\r\n            this.onPingInterval();\r\n        }\r\n    };\r\n    /** Allocation request succeed with 200 */\r\n    TrouterFsm.prototype.onAllocationSucceed = function () {\r\n        if (this.state === State.Allocating) {\r\n            this.setState(State.Handshaking);\r\n            this.connectedSubstate = ConnectedSubstate.Initial;\r\n            this.worker.startSocketIo();\r\n            return true;\r\n        }\r\n        else {\r\n            this.showIgnored('onAllocationSucceed');\r\n            return false;\r\n        }\r\n    };\r\n    /** Allocation request failed */\r\n    TrouterFsm.prototype.onAllocationFailed = function (unauthorized) {\r\n        if (this.state === State.Allocating) {\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.stopConnectionTimer();\r\n            this.worker.getToken(!unauthorized, true);\r\n        }\r\n        else {\r\n            this.showIgnored('onAllocationFailed');\r\n        }\r\n    };\r\n    /** Connection didn't succeed in given timeout */\r\n    TrouterFsm.prototype.onConnectingTimeout = function () {\r\n        // implementation note: this also called from onConnectingFailed\r\n        if (this.state === State.Allocating\r\n            || this.state === State.Connecting\r\n            || this.state === State.Handshaking) {\r\n            this.setState(State.RetrievingToken);\r\n            this.resetAllocationIfNecessary(undefined);\r\n            this.worker.stopSocketIo();\r\n            this.worker.getToken(true, false);\r\n        }\r\n        else {\r\n            this.showIgnored('onConnectingTimeout');\r\n        }\r\n    };\r\n    /** socket.io handshake succeed and socket.io is trying next transport */\r\n    TrouterFsm.prototype.onConnecting = function () {\r\n        if (this.state === State.Handshaking) {\r\n            this.setState(State.Connecting);\r\n        }\r\n        else {\r\n            this.showIgnored('onConnecting');\r\n        }\r\n    };\r\n    /** Socket.io connection wasn't established */\r\n    TrouterFsm.prototype.onConnectingFailed = function () {\r\n        // This callback will be called when all transports failed to connect, i.e. socket.io can't proceed\r\n        if (this.state === State.Connecting) {\r\n            this.onConnectingTimeout();\r\n        }\r\n        else if (this.state === State.Handshaking) {\r\n            // It should never happen, because socket.io should try at least one transport\r\n            this.logger.error('Unexpected error in Socket.io - no valid transports');\r\n            this.onConnectingTimeout();\r\n        }\r\n        else {\r\n            this.showIgnored('onConnectingFailed');\r\n        }\r\n    };\r\n    /** Socket.io error (or disconnect) */\r\n    TrouterFsm.prototype.onSocketError = function (error) {\r\n        if (this.state === State.Handshaking || this.state === State.Connected) {\r\n            this.worker.stopSocketIo();\r\n            this.worker.stopPingTimer();\r\n            this.worker.clearTimers();\r\n            this.worker.stopConnectionTimer();\r\n            if (this.state !== State.Connected) {\r\n                this.worker.resetAllocationConnectionParams();\r\n            }\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.dispatchReconnecting();\r\n            this.worker.getToken(true, false);\r\n        }\r\n        else {\r\n            // Such error can happen in Connecting state, which means that\r\n            // websocket transport failed to establish connection\r\n            this.showIgnored('onSocketError');\r\n        }\r\n    };\r\n    /** Received 'trouter.connected' event from service */\r\n    TrouterFsm.prototype.onTrouterConnected = function () {\r\n        if (this.state === State.Connecting) {\r\n            this.setState(State.Connected);\r\n            this.worker.resetTokenBackoff();\r\n            this.worker.stopConnectionTimer();\r\n            this.worker.sendUserActivityState(InternalInterfaces_1.UserActivityEventReason.Connected, true);\r\n            this.worker.startPingTimer();\r\n            this.worker.dispatchConnected();\r\n            this.connectionErrors = 0;\r\n            if (this.worker.shouldSkipRegistration()) {\r\n                this.connectedSubstate = ConnectedSubstate.NotRegistered;\r\n                this.worker.dispatchRegistered();\r\n            }\r\n            else {\r\n                this.connectedSubstate = ConnectedSubstate.RetrievingToken;\r\n                this.worker.getToken(true, false);\r\n            }\r\n        }\r\n        else {\r\n            this.showIgnored('onTrouterConnected');\r\n        }\r\n    };\r\n    /**\r\n     * Received 'trouter.reconnect' event from service,\r\n     * need to establish a new connection\r\n     */\r\n    TrouterFsm.prototype.onReconnectRequired = function () {\r\n        this.worker.dispatchReconnectIsRequired();\r\n    };\r\n    /** Request from downstream is received */\r\n    TrouterFsm.prototype.onDownstreamRequest = function (request) {\r\n        if (this.state === State.Connected) {\r\n            this.switchToIncallModeIfEnabled();\r\n            this.worker.dispatchDownstreamRequest(request);\r\n        }\r\n        else {\r\n            this.showIgnored('onDownstreamRequest');\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onTrouterMessageLost = function (messageLossIndicators) {\r\n        if (this.state === State.Connected) {\r\n            this.worker.dispatchTrouterMessageLost(messageLossIndicators);\r\n        }\r\n        else {\r\n            this.showIgnored('onTrouterMessageLost');\r\n        }\r\n    };\r\n    /** Timer for ping request fired */\r\n    TrouterFsm.prototype.onPingInterval = function () {\r\n        if (this.state === State.Connected) {\r\n            this.worker.sendPingRequest();\r\n        }\r\n        else {\r\n            this.showIgnored('onPingInterval');\r\n        }\r\n    };\r\n    /** No pong response from service within timeout */\r\n    TrouterFsm.prototype.onPingResponseTimeout = function () {\r\n        this.onMissedResponse('onPingResponseTimeout');\r\n    };\r\n    /** Pong response */\r\n    TrouterFsm.prototype.onPingResponse = function () {\r\n        if (this.state === State.Connected) {\r\n            // do nothing\r\n        }\r\n        else {\r\n            this.showIgnored('onPingResponse');\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onRegistrationFailed = function (unauthorized) {\r\n        if (this.state === State.Connected\r\n            && this.connectedSubstate === ConnectedSubstate.Registering) {\r\n            this.connectedSubstate = ConnectedSubstate.RetrievingToken;\r\n            this.worker.getToken(!unauthorized, true);\r\n        }\r\n        else {\r\n            this.showIgnored('onRegistrationFailed');\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onRegistrationSucceed = function () {\r\n        if (this.state === State.Connected) {\r\n            if (this.connectedSubstate === ConnectedSubstate.Registering) {\r\n                this.connectedSubstate = ConnectedSubstate.Registered;\r\n                this.worker.dispatchRegistered();\r\n            }\r\n            if (this.worker.hasCustomRegisterTtl()) {\r\n                this.worker.startRegisterTimer();\r\n            }\r\n        }\r\n        else {\r\n            this.showIgnored('onRegistrationSucceed');\r\n        }\r\n    };\r\n    /** Registration TTL is about to expire */\r\n    TrouterFsm.prototype.onRegistrationTimeout = function () {\r\n        if (this.state === State.Connected\r\n            && this.connectedSubstate !== ConnectedSubstate.NotRegistered) {\r\n            this.connectedSubstate = ConnectedSubstate.RetrievingToken;\r\n            this.worker.getToken(true, false);\r\n        }\r\n        else {\r\n            this.showIgnored('onRegistrationTimeout');\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onUnregistrationFailed = function (unauthorized) {\r\n        if (this.state === State.Unregistering) {\r\n            this.setState(State.UnregisteringRetrievingToken);\r\n            this.worker.getToken(!unauthorized, !unauthorized);\r\n        }\r\n        else {\r\n            this.showIgnored('onUnregistrationFailed');\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onUnregistrationSucceed = function () {\r\n        if (this.state === State.Unregistering) {\r\n            this.setState(State.Initial);\r\n            this.worker.dispatchDisconnected();\r\n        }\r\n        else {\r\n            this.showIgnored('onUnregistrationSucceed');\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onIncallModeTimer = function () {\r\n        this.worker.exitIncallMode();\r\n        if (this.state === State.Connected) {\r\n            this.worker.stopPingTimer();\r\n            this.worker.startPingTimer();\r\n        }\r\n        else {\r\n            this.showIgnored('onIncallModeTimer');\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onSetUserActivityState = function (state, changed) {\r\n        if (changed) {\r\n            this.logger.info(\"Changing user activity state to '\" + Interfaces_1.UserActivityState[state] + \"'\");\r\n            this.worker.sendUserActivityState(InternalInterfaces_1.UserActivityEventReason.Modified, this.state === State.Connected);\r\n        }\r\n        else {\r\n            this.logger.debug(\"Not changing the same user activity state '\" + Interfaces_1.UserActivityState[state] + \"'\");\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onActivityStateResponseTimeout = function () {\r\n        this.onMissedResponse('onActivityStateResponseTimeout');\r\n    };\r\n    TrouterFsm.prototype.forceReconnect = function () {\r\n        this.setState(State.RetrievingToken);\r\n        // TBD what about registration-related stuff?\r\n        this.worker.resetTokenBackoff();\r\n        this.worker.stopConnectionTimer();\r\n        this.worker.stopPingTimer();\r\n        this.worker.clearTimers();\r\n        this.worker.stopSocketIo();\r\n        this.worker.dispatchReconnecting();\r\n        this.worker.getToken(true, false);\r\n    };\r\n    TrouterFsm.prototype.onMissedResponse = function (onResponseHandlerName) {\r\n        if (this.state === State.Connected) {\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.stopPingTimer();\r\n            this.worker.clearTimers();\r\n            this.worker.stopSocketIo();\r\n            this.worker.dispatchReconnecting();\r\n            this.worker.getToken(true, false);\r\n        }\r\n        else {\r\n            this.showIgnored(onResponseHandlerName);\r\n        }\r\n    };\r\n    TrouterFsm.prototype.showIgnored = function (event) {\r\n        this.logger.debug(\"Ignoring event '\" + event + \"' in state '\" + State[this.state] + \"'\");\r\n    };\r\n    TrouterFsm.prototype.setState = function (state) {\r\n        this.logger.info(\"Switching from state '\" + State[this.state] + \"' to state '\" + State[state] + \"'\");\r\n        if (this.state === state) {\r\n            this.logger.error(\"Attempt to switching into the current state '\" + State[state] + \"'\");\r\n            return;\r\n        }\r\n        this.state = state;\r\n    };\r\n    TrouterFsm.prototype.resetAllocationIfNecessary = function (error) {\r\n        this.connectionErrors++;\r\n        if (this.connectionErrors >= MAXIMUM_CONNECTION_ERRORS_COUNT // Too many errors for this allocation\r\n            || (error !== undefined && /^4\\d\\d /.test(error)) // Client error (like 401) - need to start with a new allocation\r\n        ) {\r\n            this.logger.error(\"Connection error count is \" + this.connectionErrors + \" - will reset allocation\");\r\n            this.connectionErrors = 0;\r\n        }\r\n        else {\r\n            this.logger.info(\"Connection error count is \" + this.connectionErrors + \" - will NOT reset allocation\");\r\n        }\r\n    };\r\n    TrouterFsm.prototype.isRegistered = function () {\r\n        return this.connectedSubstate === ConnectedSubstate.Registered\r\n            || this.connectedSubstate === ConnectedSubstate.Registering;\r\n    };\r\n    TrouterFsm.prototype.switchToIncallModeIfEnabled = function () {\r\n        if (this.incallModeEnabled) {\r\n            if (!this.worker.isIncallMode()) {\r\n                this.worker.enterIncallMode();\r\n                this.worker.stopPingTimer();\r\n                this.worker.startPingTimer();\r\n            }\r\n            this.worker.restartIncallModeTimer();\r\n        }\r\n    };\r\n    return TrouterFsm;\r\n}());\r\nexports.TrouterFsm = TrouterFsm;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Interfaces_1 = __webpack_require__(1);\r\nvar Logger_1 = __webpack_require__(0);\r\n/**\r\n * State machine for manager\r\n */\r\nvar TrouterManagerFsm = /** @class */ (function () {\r\n    function TrouterManagerFsm(logFunc, worker) {\r\n        this.worker = worker;\r\n        this.state = Interfaces_1.TrouterState.Unknown;\r\n        this.logger = new Logger_1.Logger('ManagerFsm', logFunc);\r\n    }\r\n    TrouterManagerFsm.prototype.start = function () {\r\n        if (this.state === Interfaces_1.TrouterState.Unknown) {\r\n            this.setState(Interfaces_1.TrouterState.Disconnected);\r\n            this.worker.startFirstConnection();\r\n        }\r\n        else {\r\n            this.showIgnored('start');\r\n        }\r\n    };\r\n    TrouterManagerFsm.prototype.stop = function () {\r\n        if (this.state !== Interfaces_1.TrouterState.Unknown) {\r\n            this.setState(Interfaces_1.TrouterState.Unknown);\r\n            this.worker.stopFirstConnection(false);\r\n            this.worker.stopSecondConnection(false);\r\n        }\r\n        else {\r\n            this.showIgnored('stop');\r\n        }\r\n    };\r\n    /** Returns current state */\r\n    TrouterManagerFsm.prototype.getState = function () {\r\n        return this.state;\r\n    };\r\n    TrouterManagerFsm.prototype.onConnected = function (first) {\r\n        if (this.state === Interfaces_1.TrouterState.Disconnected && first) {\r\n            if (this.worker.doesSecondConnectionExist()) {\r\n                this.setState(Interfaces_1.TrouterState.Switching);\r\n            }\r\n            else {\r\n                this.setState(Interfaces_1.TrouterState.Connected);\r\n                this.worker.dispatchConnected();\r\n            }\r\n        }\r\n        else {\r\n            this.showIgnored(\"onConnected(\" + first + \")\");\r\n        }\r\n    };\r\n    TrouterManagerFsm.prototype.onRegistered = function (first) {\r\n        if (this.state === Interfaces_1.TrouterState.Disconnected && !first) {\r\n            this.setState(Interfaces_1.TrouterState.Connected);\r\n            this.worker.switchConnections();\r\n            this.worker.stopSecondConnection(true);\r\n            this.worker.dispatchConnected();\r\n        }\r\n        else if (this.state === Interfaces_1.TrouterState.Switching && !first) {\r\n            this.setState(Interfaces_1.TrouterState.Connected);\r\n            this.worker.switchConnections();\r\n            this.worker.stopSecondConnectionDelayed();\r\n            this.worker.dispatchConnected();\r\n        }\r\n        else {\r\n            this.showIgnored(\"onRegistered(\" + first + \")\");\r\n        }\r\n    };\r\n    TrouterManagerFsm.prototype.onReconnecting = function (first) {\r\n        if (this.state === Interfaces_1.TrouterState.Connected && first) {\r\n            this.setState(Interfaces_1.TrouterState.Disconnected);\r\n            this.worker.dispatchReconnecting();\r\n        }\r\n        else if (this.state === Interfaces_1.TrouterState.Switching && first) {\r\n            this.setState(Interfaces_1.TrouterState.Disconnected);\r\n            this.worker.dispatchReconnecting();\r\n        }\r\n        else {\r\n            this.showIgnored(\"onReconnecting(\" + first + \")\");\r\n        }\r\n    };\r\n    TrouterManagerFsm.prototype.onReconnectionRequired = function (first) {\r\n        if (this.state === Interfaces_1.TrouterState.Connected && first) {\r\n            this.setState(Interfaces_1.TrouterState.Switching);\r\n            this.worker.startSecondConnection();\r\n        }\r\n        else if (this.state === Interfaces_1.TrouterState.Disconnected && first) {\r\n            this.worker.startSecondConnection();\r\n        }\r\n        else {\r\n            this.showIgnored(\"onReconnectionRequired(\" + first + \")\");\r\n        }\r\n    };\r\n    TrouterManagerFsm.prototype.onDisconnected = function (first) {\r\n        if (this.state === Interfaces_1.TrouterState.Unknown && first) {\r\n            this.worker.dispatchStopped();\r\n        }\r\n        else {\r\n            this.showIgnored(\"onDisconnected(\" + first + \")\");\r\n        }\r\n    };\r\n    TrouterManagerFsm.prototype.showIgnored = function (event) {\r\n        this.logger.info(\"Ignoring event '\" + event + \"' in state '\" + Interfaces_1.TrouterState[this.state] + \"'\");\r\n    };\r\n    TrouterManagerFsm.prototype.setState = function (state) {\r\n        this.logger.info(\"Switching from state '\" + Interfaces_1.TrouterState[this.state] + \"' to state '\" + Interfaces_1.TrouterState[state] + \"'\");\r\n        if (this.state === state) {\r\n            this.logger.error(\"Attempt to switching into the current state '\" + Interfaces_1.TrouterState[state] + \"'\");\r\n            return;\r\n        }\r\n        this.state = state;\r\n    };\r\n    return TrouterManagerFsm;\r\n}());\r\nexports.TrouterManagerFsm = TrouterManagerFsm;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:strict-boolean-expressions\r\nvar Constants_1 = __webpack_require__(2);\r\nvar Interfaces_1 = __webpack_require__(1);\r\nexports.TrouterState = Interfaces_1.TrouterState;\r\nexports.UserActivityState = Interfaces_1.UserActivityState;\r\nvar Logger_1 = __webpack_require__(0);\r\nvar MessageHandler_1 = __webpack_require__(6);\r\nvar SkypeTokenProviderWithCache_1 = __webpack_require__(7);\r\nvar TrouterManager_1 = __webpack_require__(8);\r\nvar TrouterUrlPromise_1 = __webpack_require__(9);\r\nfunction populateTelemetryOptions(startingCfg, ecsCfg) {\r\n    if (!ecsCfg) {\r\n        return startingCfg;\r\n    }\r\n    var res = __assign({}, startingCfg, {\r\n        enabled: ecsCfg.TelemetryEnabled\r\n    });\r\n    if (ecsCfg.ClientTelemetryEventEnabled !== undefined) {\r\n        res = __assign({}, res, ecsCfg.ClientTelemetryEventEnabled);\r\n    }\r\n    return res;\r\n}\r\nfunction populateTrouterOptions(cfg, ecsCfg) {\r\n    return {\r\n        clientInfo: {\r\n            ua: cfg.trouterSettings.productName,\r\n            v: cfg.trouterSettings.version\r\n        },\r\n        ioOptions: {\r\n            // uncomment for manual testing\r\n            // transports: ['xhr-polling'],\r\n            // 'connect timeout': XXX, 10000 by default in socket.io code\r\n            ackTimeoutMs: 5000\r\n        },\r\n        clientCorrelationID: cfg.trouterSettings.sessionId,\r\n        environment: cfg.trouterSettings.environment,\r\n        telemetrySettings: populateTelemetryOptions(cfg.telemetryConfig.settings, ecsCfg),\r\n        eventLogger: cfg.telemetryConfig.eventLogger,\r\n        endpointId: cfg.trouterSettings.registrationId,\r\n        trouterUrl: (ecsCfg && ecsCfg.TrouterConnectionUrl) || cfg.trouterSettings.trouterServiceUrl,\r\n        registration: cfg.trouterSettings.registrarServiceUrl\r\n            ? {\r\n                registrarUrl: cfg.trouterSettings.registrarServiceUrl,\r\n                registrationId: cfg.trouterSettings.registrationId || '',\r\n                pnhAppId: cfg.trouterSettings.pnhAppId || '',\r\n                platform: cfg.trouterSettings.platform || '',\r\n                pnhTemplateKey: cfg.trouterSettings.pnhTemplate || '',\r\n                platformUIVersion: cfg.trouterSettings.platformUIVersion || '',\r\n                productContext: cfg.trouterSettings.pnhProductContext || undefined,\r\n                context: cfg.trouterSettings.pnhContext || '',\r\n                registrarTtlSec: (cfg.trouterSettings.maxRegistrationTimeInMs || 0) / 1000\r\n            }\r\n            : undefined,\r\n        timeoutOptions: __assign({ connectionTimeoutMs: cfg.trouterSettings.trouterConnectTimeoutInMs || 30000, fetchTimeoutMs: 10000, pingTimeoutMs: 40000, pongTimeoutMs: 5000, maxBackoffMs: 30000, requestTimeoutMs: 5000, userActivityResponseTimeoutMs: 10000 }, cfg.trouterSettings.timeoutOptions),\r\n        incallTimeoutOptions: __assign({ connectionTimeoutMs: 10000, fetchTimeoutMs: 5000, pingTimeoutMs: 5000, pongTimeoutMs: 2000, maxBackoffMs: 10000, requestTimeoutMs: 5000, userActivityResponseTimeoutMs: 10000 }, cfg.trouterSettings.incallTimeoutOptions),\r\n        incallModeTimeoutMs: cfg.trouterSettings.incallModeTimeoutMs || 0,\r\n        lingeringConnectionDelayMs: 60000,\r\n        userActivitySecondResendDelayMs: cfg.trouterSettings.userActivitySecondResendDelayMs || 10000\r\n    };\r\n}\r\n/**\r\n * TrouterService implementation class\r\n */\r\nvar TrouterService = /** @class */ (function () {\r\n    function TrouterService(logProvider) {\r\n        this.logProvider = logProvider;\r\n        this.stateChangedListeners = [];\r\n        this.logger = new Logger_1.Logger('Trouter', logProvider);\r\n        this.trouterUrlPromise = new TrouterUrlPromise_1.TrouterUrlPromise(logProvider);\r\n        this.messageHandlers = new MessageHandler_1.MessageHandlerRegistry(logProvider);\r\n        this.listeners = {};\r\n        this.connectionInfo = null;\r\n        this.logger.info(\"Created TrouterService version \" + Constants_1.CLIENT_VERSION);\r\n    }\r\n    TrouterService.prototype.start = function (cfg) {\r\n        this.logger.info('Start');\r\n        if (!cfg.trouterSettings.disableInternalSkypeTokenCache) {\r\n            var provider = cfg.skypeTokenProvider;\r\n            cfg.skypeTokenProvider = SkypeTokenProviderWithCache_1.addCacheAsBackupTo(provider);\r\n        }\r\n        this.trouterCfg = cfg;\r\n        var options = populateTrouterOptions(cfg, this.ecsCfg);\r\n        if (this.trouterServer === undefined) {\r\n            this.trouterServer = new TrouterManager_1.TrouterManager(this.logProvider, options, cfg.skypeTokenProvider, this);\r\n        }\r\n        this.trouterServer.start();\r\n    };\r\n    TrouterService.prototype.stop = function () {\r\n        this.logger.info('close connection');\r\n        this.trouterUrlPromise.rejectUrl(new Error('TrouterService is stopped'));\r\n        if (this.trouterServer !== undefined) {\r\n            this.trouterServer.stop();\r\n        }\r\n    };\r\n    TrouterService.prototype.setEcsConfig = function (fullEcsData) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var ecsSection = 'TrouterJScriptClient';\r\n                        _this.ecsCfg = (fullEcsData[ecsSection]);\r\n                        _this.logger.info(\"Setting ECS configuration to \" + JSON.stringify(_this.ecsCfg));\r\n                        if (_this.trouterServer !== undefined && _this.trouterCfg !== undefined) {\r\n                            var options = populateTrouterOptions(_this.trouterCfg, _this.ecsCfg);\r\n                            _this.trouterServer.configure(options);\r\n                        }\r\n                        resolve();\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Notifies trouter that network is restored - trouter will try to restore connection immediately\r\n     */\r\n    TrouterService.prototype.checkConnection = function (disconnectDetected) {\r\n        if (this.trouterServer !== undefined) {\r\n            this.trouterServer.checkConnection(disconnectDetected || false);\r\n        }\r\n    };\r\n    TrouterService.prototype.resendRegistration = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.trouterServer) {\r\n                    throw new Error('resendRegistration called too early');\r\n                }\r\n                return [2 /*return*/, this.trouterServer.resendRegistration()];\r\n            });\r\n        });\r\n    };\r\n    // Listeners\r\n    TrouterService.prototype.registerListener = function (listener, path) {\r\n        if (path === '' || path[0] !== '/' || path.indexOf('?') >= 0 || path.indexOf('#') >= 0) {\r\n            this.logger.error(\"Listener path '\" + path + \"' is not valid\");\r\n            return false;\r\n        }\r\n        if (this.listeners[path]) {\r\n            this.logger.error(\"Another listener is already registered for path '\" + path + \"'\");\r\n            return false;\r\n        }\r\n        this.listeners[path] = listener;\r\n        this.logger.debug(\"Listener for path '\" + path + \"' registered\");\r\n        if (this.connectionInfo) {\r\n            listener.onTrouterConnected(this.connectionInfo.baseEndpointUrl + path, this.connectionInfo);\r\n        }\r\n        return true;\r\n    };\r\n    TrouterService.prototype.unregisterListener = function (listener) {\r\n        var paths = [];\r\n        for (var _i = 0, _a = Object.keys(this.listeners); _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            if (this.listeners[path] === listener) {\r\n                paths.push(path);\r\n            }\r\n        }\r\n        if (paths.length === 0) {\r\n            return false;\r\n        }\r\n        for (var _b = 0, paths_1 = paths; _b < paths_1.length; _b++) {\r\n            var path = paths_1[_b];\r\n            delete this.listeners[path];\r\n        }\r\n        this.logger.debug(\"Listener for path(s) '\" + paths.join('\\', \\'') + \"' unregistered\");\r\n        return true;\r\n    };\r\n    TrouterService.prototype.onTrouterConnected = function (endpointUrl, connectionInfo) {\r\n        this.logger.debug('Trouter is now connected');\r\n        for (var _i = 0, _a = Object.keys(this.listeners); _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            try {\r\n                this.listeners[path].onTrouterConnected(connectionInfo.baseEndpointUrl + path, connectionInfo);\r\n            }\r\n            catch (e) {\r\n                this.logger.error(\"Listener '\" + path + \"' threw an exception from onTrouterConnected(): \" + e);\r\n            }\r\n        }\r\n        this.connectionInfo = connectionInfo;\r\n        this.trouterUrlPromise.resolveUrl(endpointUrl);\r\n        this.notifyStateChanged(Interfaces_1.TrouterState.Connected, {\r\n            url: endpointUrl,\r\n            getRemainingTtlInSec: function () { return connectionInfo.connectionTtlSec; }\r\n        });\r\n    };\r\n    TrouterService.prototype.onTrouterDisconnected = function () {\r\n        this.logger.debug('Trouter is now disconnected');\r\n        this.connectionInfo = null;\r\n        for (var _i = 0, _a = Object.keys(this.listeners); _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var func = this.listeners[path].onTrouterDisconnected;\r\n            if (func) {\r\n                try {\r\n                    func();\r\n                }\r\n                catch (e) {\r\n                    this.logger.error(\"Listener '\" + path + \"' threw an exception from onTrouterDisconnected(): \" + e);\r\n                }\r\n            }\r\n        }\r\n        this.notifyStateChanged(Interfaces_1.TrouterState.Disconnected);\r\n    };\r\n    TrouterService.prototype.onTrouterRequest = function (request, response) {\r\n        var bestPath = '';\r\n        for (var _i = 0, _a = Object.keys(this.listeners); _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            if (request.path.substring(0, path.length) === path && path.length > bestPath.length) {\r\n                bestPath = path;\r\n            }\r\n        }\r\n        if (bestPath !== '') {\r\n            try {\r\n                this.listeners[bestPath].onTrouterRequest(request, response);\r\n            }\r\n            catch (e) {\r\n                this.logger.error(\"Listener '\" + bestPath + \"' threw an exception from onTrouterRequest(): \" + e);\r\n                response.status = 500;\r\n                response.headers = { 'Trouter-Responder': 'ClientLib' };\r\n                response.send();\r\n            }\r\n            return;\r\n        }\r\n        if (this.tryMessageHandlers(request, response)) {\r\n            return;\r\n        }\r\n        response.status = 404;\r\n        response.headers = { 'Trouter-Responder': 'ClientLib' };\r\n        response.send();\r\n    };\r\n    TrouterService.prototype.onTrouterMessageLoss = function (flowTags) {\r\n        this.logger.info(\"onTrouterMessageLoss called with value \" + flowTags);\r\n        var messageLossProcessed = true;\r\n        for (var _i = 0, _a = Object.keys(this.listeners); _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var func = this.listeners[path].onTrouterMessageLoss;\r\n            if (func) {\r\n                try {\r\n                    messageLossProcessed = func(flowTags) && messageLossProcessed;\r\n                    if (messageLossProcessed === undefined) {\r\n                        this.logger.error(\"Listener '\" + path + \"' did not response with boolean value onTrouterMessageLoss()\");\r\n                        messageLossProcessed = false;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    this.logger.error(\"Listener '\" + path + \"' threw an exception from onTrouterMessageLoss(): \" + e);\r\n                    messageLossProcessed = false;\r\n                }\r\n            }\r\n        }\r\n        return messageLossProcessed;\r\n    };\r\n    TrouterService.prototype.setUserActivityState = function (state) {\r\n        if (state !== Interfaces_1.UserActivityState.Active && state !== Interfaces_1.UserActivityState.Inactive) {\r\n            throw new Error(\"setUserActivityState called with unsupported value \" + state);\r\n        }\r\n        this.logger.info(\"setUserActivityState called with value \" + Interfaces_1.UserActivityState[state]);\r\n        if (this.trouterServer && this.state() !== Interfaces_1.TrouterState.Unknown) {\r\n            this.trouterServer.setUserActivityState(state);\r\n        }\r\n        else {\r\n            throw new Error('setUserActivityState called too early');\r\n        }\r\n    };\r\n    // Legacy API\r\n    TrouterService.prototype.state = function () {\r\n        if (this.trouterServer !== undefined) {\r\n            return this.trouterServer.getState();\r\n        }\r\n        return Interfaces_1.TrouterState.Unknown;\r\n    };\r\n    TrouterService.prototype.getServerState = function () {\r\n        if (this.trouterServer !== undefined) {\r\n            return this.trouterServer.getServerState();\r\n        }\r\n        return undefined;\r\n    };\r\n    // tslint:disable-next-line:promise-function-async\r\n    TrouterService.prototype.getTrouterUrlAsync = function () {\r\n        if (this.trouterServer !== undefined) {\r\n            return this.trouterUrlPromise.getPromise();\r\n        }\r\n        else {\r\n            return Promise.reject(new Error('TrouterService has not been started'));\r\n        }\r\n    };\r\n    TrouterService.prototype.onStateChanged = function (callback) {\r\n        this.logger.info('onStateChanged called');\r\n        if (callback === undefined) {\r\n            this.stateChangedListeners = this.stateChangedListeners.filter(function (listener) { return (listener.wrappedCallback === undefined); });\r\n        }\r\n        else {\r\n            this.offStateChanged(callback);\r\n            var wrapper = function (state, info) {\r\n                callback(state, info ? info.url : '');\r\n            };\r\n            wrapper.wrappedCallback = callback;\r\n            this.stateChangedListeners.push(wrapper);\r\n        }\r\n    };\r\n    TrouterService.prototype.offStateChanged = function (callback) {\r\n        this.logger.info('offStateChanged called');\r\n        var sizeBeforeRemoval = this.stateChangedListeners.length;\r\n        this.stateChangedListeners = this.stateChangedListeners.filter(function (listener) { return (listener.wrappedCallback !== callback); });\r\n        return (sizeBeforeRemoval > this.stateChangedListeners.length);\r\n    };\r\n    TrouterService.prototype.addCallback = function (callback) {\r\n        this.logger.info('addListener called');\r\n        var index = this.stateChangedListeners.indexOf(callback, 0);\r\n        if (index === -1 && callback !== undefined) {\r\n            this.stateChangedListeners.push(callback);\r\n        }\r\n    };\r\n    TrouterService.prototype.removeCallback = function (callback) {\r\n        this.logger.info('removeListener called');\r\n        var index = this.stateChangedListeners.indexOf(callback, 0);\r\n        if (index > -1) {\r\n            this.stateChangedListeners.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    TrouterService.prototype.registerMessageHandler = function (handler) {\r\n        this.logger.info('registerMessageHandler is called');\r\n        this.messageHandlers.register(handler);\r\n    };\r\n    TrouterService.prototype.clearMessageHandlers = function () {\r\n        this.logger.info('clearMessageHandlers is called');\r\n        this.messageHandlers.clear();\r\n    };\r\n    TrouterService.prototype.notifyStateChanged = function (state, info) {\r\n        var _this = this;\r\n        this.logger.info(\"notifyStateChanged called, will forward to \" + this.stateChangedListeners.length + \" listeners\");\r\n        this.stateChangedListeners.forEach(function (callback) {\r\n            try {\r\n                callback(state, info);\r\n            }\r\n            catch (error) {\r\n                _this.logger.error(\"Error in callback \" + error);\r\n            }\r\n        });\r\n    };\r\n    TrouterService.prototype.tryMessageHandlers = function (request, response) {\r\n        if (!this.messageHandlers.active()) {\r\n            return false;\r\n        }\r\n        var body;\r\n        var eventId = null;\r\n        try {\r\n            body = JSON.parse(request.body);\r\n            eventId = (body && (body.evt || body.eventId)) || null;\r\n        }\r\n        catch (e) { }\r\n        var message = {\r\n            eventId: eventId,\r\n            url: (this.connectionInfo ? this.connectionInfo.baseEndpointUrl : '') + request.path,\r\n            body: body,\r\n            rawBody: request.body,\r\n            headers: request.headers\r\n        };\r\n        var result = this.messageHandlers.handleMessage(message);\r\n        if (!result.isHandled) {\r\n            return false;\r\n        }\r\n        response.status = result.resultCode;\r\n        if (result.responseHeaders) {\r\n            response.headers = result.responseHeaders;\r\n        }\r\n        if (result.responseBody) {\r\n            response.body = result.responseBody;\r\n        }\r\n        response.send();\r\n        return true;\r\n    };\r\n    return TrouterService;\r\n}());\r\nexports.TrouterService = TrouterService;\r\nfunction createTrouterService(logger) {\r\n    return new TrouterService(logger);\r\n}\r\nexports.createTrouterService = createTrouterService;\r\nfunction getTrouterServiceVersion() {\r\n    return Constants_1.CLIENT_VERSION;\r\n}\r\nexports.getTrouterServiceVersion = getTrouterServiceVersion;\r\nfunction replaceTrouterUrlBase(existingUrl, newBase) {\r\n    var schemaSepPos = existingUrl.indexOf('://');\r\n    if (schemaSepPos >= 0) {\r\n        var pathSepPos = existingUrl.indexOf('/', schemaSepPos + 3);\r\n        if (pathSepPos >= 0) {\r\n            return newBase + existingUrl.substr(pathSepPos);\r\n        }\r\n    }\r\n    return '';\r\n}\r\nexports.replaceTrouterUrlBase = replaceTrouterUrlBase;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_20__;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// tstrouter.js","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\nimport { LogProvider } from './Interfaces';\r\n\r\n/**\r\n * Logging function\r\n */\r\nexport type LogFunc = (msg: string) => void;\r\n\r\n/**\r\n * Simple logger\r\n */\r\nexport class Logger {\r\n    public constructor(private name, private logger: LogProvider) {}\r\n\r\n    public debug(message: string) {\r\n        this.logger.debug(`[${this.name}] ${message}`);\r\n    }\r\n    public info(message: string) {\r\n        this.logger.info(`[${this.name}] ${message}`);\r\n    }\r\n    public warn(message: string) {\r\n        this.logger.warn(`[${this.name}] ${message}`);\r\n    }\r\n    public error(message: string) {\r\n        this.logger.error(`[${this.name}] ${message}`);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/Logger.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Type definitions for Trouter JavaScript Client 2020.37.01.1\r\n */\r\n\r\n// tslint:disable:interface-name\r\n\r\n\r\n/**\r\n * Trouter HTTP-like headers\r\n */\r\nexport type Headers = {\r\n    [name: string]: string;\r\n};\r\n\r\n/**\r\n * Trouter HTTP-like request (service -> Trouter -> app)\r\n *\r\n * Represents one incoming request received by Trouter Client. Its content is\r\n * mostly a verbatim copy of what was sent by the originating service to\r\n * Trouter Service.\r\n */\r\nexport interface Request {\r\n    readonly id: number;        /// Request/response ID, useful for\r\n                                /// logging/debugging/tracing purposes\r\n    readonly method: string;    /// HTTP method (GET, POST, ...)\r\n    readonly path: string;      /// HTTP path, including listener's prefix and\r\n                                /// any provided query parameters\r\n    readonly headers: Headers;  /// HTTP headers\r\n    readonly body: string;      /// HTTP body/content\r\n}\r\n\r\n/**\r\n * Possible return values of Response.send()\r\n */\r\nexport const enum SendResponseResult {\r\n    OK           = 0,  /// Response accepted, will be sent back to the service\r\n    Timeout      = 1,  /// Too late, 504 (Timeout) has been already sent back\r\n    Duplicate    = 2,  /// send() was called multiple times on one Response\r\n    Incomplete   = 3,  /// Mandatory parameters (status code) are not set\r\n    Disconnected = 4   /// Trouter connection dropped, cannot reply now\r\n}\r\n\r\n/**\r\n * Trouter HTTP-like response (app -> Trouter -> service)\r\n *\r\n * Represents one outgoing response to be sent by Trouter Client. Always set\r\n * the status code, add any extra headers or body, then call `send()`.\r\n */\r\nexport interface Response {\r\n    readonly id: number;  /// Request/response ID, useful for\r\n                          /// logging/debugging/tracing purposes\r\n    status: number;       /// HTTP status code (200, 404, ...), mandatory\r\n    headers: Headers;     /// HTTP headers, optional\r\n    body: string;         /// HTTP body/content, optional\r\n\r\n    /**\r\n     * Send the response\r\n     *\r\n     * Trouter will add just a few of its own headers and otherwise forward the\r\n     * response to the originating service that had sent the request.\r\n     *\r\n     * A successful return value `OK` means only that the response message has\r\n     * been accepted and prepared for sending back. The actual transmission will\r\n     * happen asynchronously later and might still fail for various reasons.\r\n     *\r\n     * @return SendResponseResult.OK if successful, other code if not\r\n     */\r\n    send(): SendResponseResult;\r\n}\r\n\r\n/**\r\n * Information about the current Trouter connection\r\n *\r\n * Received in `Listener.onTrouterConnected()` every time the connection\r\n * parameters change.\r\n */\r\nexport interface ConnectionInfo {\r\n    readonly baseEndpointUrl: string;   /// Base URL used for routing messages\r\n                                        /// from services to this client\r\n                                        /// instance, i.e. not specific to\r\n                                        /// a particular listener\r\n    readonly newEndpointUrl: boolean;   /// Tells if this `baseEndpointUrl` is\r\n                                        /// different from the previous one and\r\n                                        /// therefore if any dependent service\r\n                                        /// registrations need to be updated to\r\n                                        /// know where to send data\r\n    readonly c2cUrlBase: string;        /// Base URL prefix used for routing\r\n                                        /// messages from clients to this client\r\n                                        /// - replace the URL base (protocol +\r\n                                        /// hostname) of `baseEndpointUrl` (or\r\n                                        /// another per-listener endpoint URL)\r\n                                        /// with this value to obtain the full\r\n                                        /// client-to-client URL\r\n    readonly clientId: string;          /// ID of this Trouter client, should\r\n                                        /// stay the same between reconnects\r\n    readonly connectionId: string;      /// ID of the current Trouter\r\n                                        /// connection, can change between\r\n                                        /// reconnects\r\n    readonly connectionTtlSec: number;  /// Expected lifetime of the current\r\n                                        /// connection (ID) in seconds, as\r\n                                        /// determined by Trouter Service\r\n}\r\n\r\n/**\r\n * Trouter listener\r\n *\r\n * Interface implemented by application to receive Trouter callbacks\r\n */\r\nexport interface Listener {\r\n    /**\r\n     * Called when Trouter connection is (re-)established\r\n     *\r\n     * This is important mostly because of the `endpointUrl` as the URL where\r\n     * messages are sent to by the originating service(s). Only after receiving\r\n     * this callback and learning the Endpoint URL can the application register\r\n     * the established channel for receiving messages.\r\n     *\r\n     * The Endpoint URL is intended for service-to-service communication, only\r\n     * whitelisted authenticated services can access it and initiate Trouter\r\n     * requests. Use `c2cUrlBase` from `connectionInfo` to obtain a similar URL\r\n     * for client-to-client communication - see also `replaceTrouterUrlBase()`.\r\n     *\r\n     * @param endpointUrl    A URL used for routing messages from services to\r\n     *                       this listener\r\n     * @param connectionInfo Additional Trouter connection information\r\n     */\r\n    onTrouterConnected(endpointUrl: string, connectionInfo: ConnectionInfo): void;\r\n\r\n    /**\r\n     * Called when Trouter connection drops\r\n     *\r\n     * No incoming requests can be received for now, no outgoing responses can\r\n     * be sent either. Trouter client will reconnect as soon as possible.\r\n     *\r\n     * This state is most commonly caused by some temporary network issues\r\n     * (switching from Wi-Fi to a wired network, bad signal etc.) or things\r\n     * like a sleep/resume transition on the device.\r\n     *\r\n     * @note This method does not need to be implemented.\r\n     */\r\n    onTrouterDisconnected?(): void;\r\n\r\n    /**\r\n     * Called when Trouter receives a request intended for this listener\r\n     *\r\n     * Application can inspect the contents of the incoming message by looking\r\n     * at `request`, then fill in the outgoing `reponse` and send it back by\r\n     * invoking its method `send()`.\r\n     *\r\n     * This can be done both synchronously when this method is called, or at a\r\n     * later time asynchronously from any other context, if the application\r\n     * stores the `response` object aside.\r\n     *\r\n     * In any case, a response ought to be sent to every received request. If\r\n     * it is not, Trouter client will send a 504 (Timeout) message itself after\r\n     * a configured time, but that will needlessly show up as an error on the\r\n     * service side, even if you have processed the message successfully.\r\n     *\r\n     * For most simple applications, just sending a response with 200 (OK) right\r\n     * away should be good enough.\r\n     *\r\n     * @param request  Incoming request object (read-only)\r\n     * @param response Outgoing response object (to be filled in and sent)\r\n     */\r\n    onTrouterRequest(request: Request, response: Response): void;\r\n\r\n    /**\r\n     * Called when some messages have been dropped on Trouter\r\n     *\r\n     * This can be called at any time by Trouter server\r\n     *\r\n     * Some of the examples of the message loss:\r\n     * The message loss might occur when client queues got full and messages are rejected\r\n     * The message to be delivered are already expired.\r\n     *\r\n     * @param flowTags String array of flows representing the type of messages being lost\r\n     *\r\n     * returns true in case that the flow tags has been processed and the information can be dropped\r\n     */\r\n    onTrouterMessageLoss?(flowTags: string[]): boolean;\r\n}\r\n\r\n/**\r\n * Trouter client\r\n *\r\n * Use to register and unregister your listeners. Calls are forwarded to the\r\n * underlying implementation, whatever that is on the current platform.\r\n */\r\nexport interface Client {\r\n    /**\r\n     * Register a listener\r\n     *\r\n     * The specified listener will now be notified about any Trouter events. An\r\n     * initial `onTrouterConnected()` callback will be received automatically\r\n     * right away if Trouter is already connected, so that the listener can\r\n     * learn the Endpoint URL etc.\r\n     *\r\n     * There can be only one listener registered for each `path`, but the path\r\n     * can naturally comprise of multiple levels separated with a slash. The\r\n     * listener with the longest, most specific matching path prefix for an\r\n     * incoming message will be invoked to handle it.\r\n     *\r\n     * If a matching listener is found, the incoming message is not passed\r\n     * further to any registered legacy MessageHandler callbacks.\r\n     *\r\n     * This method is very light-weight and can be called at any time.\r\n     *\r\n     * @param listener Listener object to register\r\n     * @param path     HTTP-like relative path to register (e.g. '/foo')\r\n     * @return `true` if successfully registered,\r\n     *         `false` if there already is a registered listener for this exact\r\n     *         path or if the given path is invalid\r\n     */\r\n    registerListener(listener: Listener, path: string): boolean;\r\n\r\n    /**\r\n     * Unregister a listener\r\n     *\r\n     * The specified listener will not be notified about any Trouter events\r\n     * anymore. `onTrouterDisconnected()` will not be called automatically\r\n     * during unregistration.\r\n     *\r\n     * All registrations of this `Listener` object (i.e. possibly more than one,\r\n     * registered with different paths) will be unregistered.\r\n     *\r\n     * This method is very light-weight and can be called at any time.\r\n     *\r\n     * @param listener Listener object to unregister\r\n     * @return `true` if successfully unregistered,\r\n     *         `false` if not registered in the first place\r\n     */\r\n    unregisterListener(listener: Listener): boolean;\r\n}\r\n\r\n\r\n// tslint:disable:no-any\r\n\r\nexport type LogProvider = {\r\n    log(...message: any[]): void;\r\n    warn(...message: any[]): void;\r\n    error(...message: any[]): void;\r\n    debug(...message: any[]): void;\r\n    info(...message: any[]): void;\r\n};\r\n\r\n/** Headers for HTTP request */\r\nexport class HttpHeaders {\r\n    [name: string]: string;\r\n}\r\n\r\nexport type TrouterMessage = {\r\n    eventId: number | null;\r\n    url?: string;\r\n    headers?: HttpHeaders;\r\n    body?: TrouterRequestBody;\r\n    rawBody?: string;\r\n};\r\n\r\nexport type TrouterRequestBody = {\r\n    evt?: number;\r\n    eventId?: number;\r\n    gp?: string;\r\n    nsp?: string;\r\n};\r\n\r\n\r\nexport interface MessageHandler {\r\n    handleMessage(message: TrouterMessage): HandleMessageResult | undefined;\r\n}\r\n\r\nexport interface HandleMessageResult {\r\n    /**\r\n     * @deprecated, return 'undefined' from MessageHandler.handleMessage\r\n     * if you want to indicate the message was not handled\r\n     */\r\n    isHandled?: boolean;\r\n\r\n    resultCode: number;\r\n    responseBody?: string;\r\n    responseHeaders?: HttpHeaders;\r\n}\r\n\r\nexport enum TrouterState {\r\n    /** Initial state */\r\n    Unknown = 0,\r\n\r\n    /** ready to work */\r\n    Connected = 2,\r\n\r\n    /** waiting for 'connected' event */\r\n    Disconnected = 3,\r\n\r\n    /** waiting for 'register' from second connection */\r\n    Switching = 9\r\n}\r\n\r\n/** States that a user can reach. */\r\nexport enum UserActivityState {\r\n    /** Initial state */\r\n    Unknown = 0,\r\n\r\n    /** User is active according to the application. */\r\n    Active = 1,\r\n\r\n    /** User is not active according to the application. */\r\n    Inactive = 2\r\n}\r\n\r\nexport interface TelemetryEvent {\r\n    name: string;\r\n    properties: {\r\n        [name: string]: {\r\n            value: string | number | boolean | undefined;\r\n        }\r\n    };\r\n}\r\n\r\nexport interface ITelemetrySender {\r\n    logEvent(clientEvent: TelemetryEvent): void;\r\n}\r\n\r\n/**\r\n * Called once token is required.\r\n * Trouter can cache token - it's defined by config option in TrouterSettings\r\n */\r\nexport type SkypeTokenProvider = (forceRefresh: boolean) => Promise<string>;\r\n\r\n/**\r\n * Stores timeout values to simplify switch between in-call and normal modes\r\n */\r\nexport interface TimeoutOptions {\r\n    /** Timeout for connection to trouter service, i.e. for whole allocation + socket.io connection (all transports together) */\r\n    connectionTimeoutMs: number;\r\n\r\n    /** Timeout for fetch requests, i.e. for allocation, health, registration, unregistration */\r\n    fetchTimeoutMs: number;\r\n\r\n    /** Interval between ping requests */\r\n    pingTimeoutMs: number;\r\n\r\n    /** Timeout for waiting for pong response (websockets) */\r\n    pongTimeoutMs: number;\r\n\r\n    /** Maximal value for backoff timeout */\r\n    maxBackoffMs: number;\r\n\r\n    /** Timeout for handling of an incoming request before a 504 response is sent back automatically */\r\n    requestTimeoutMs: number;\r\n\r\n    /** For how long to wait for response to activity update event. */\r\n    userActivityResponseTimeoutMs?: number;\r\n}\r\n\r\nexport interface TrouterSettings {\r\n    /**\r\n     * GO allocation url of trouter for V4 - like https://go.trouter.teams.microsoft.com/v4/a\r\n     */\r\n    trouterServiceUrl: string;\r\n    version: string;\r\n    productName: string;\r\n    /**\r\n     * aka Client Correlation ID - for correlation between Trouter and other components. It makes sense to persist it if possible\r\n     */\r\n    sessionId: string;\r\n    /**\r\n     * Environment for telemetry, e.g. \"latest\", \"liveint\", \"dogfood\", \"prod\"\r\n     */\r\n    environment: string;\r\n\r\n    /**\r\n     * full URL of EDF registrar service (like https://prod.registrar.skype.com/v2/registrations), if left undefined then Trouter does not\r\n     * register its connection and other registration params can be left undefined as well\r\n     */\r\n    registrarServiceUrl?: string;\r\n    /** mandatory parameter if registration is required */\r\n    registrationId?: string;\r\n    /**\r\n     * @deprecated and will be removed in next versions. Use maxRegistrationTimeInMs instead\r\n     */\r\n    registrarRefreshTimeoutInMs?: number;\r\n    /** mandatory parameter if registration is required */\r\n    pnhAppId?: string;\r\n    /** mandatory parameter if registration is required */\r\n    pnhTemplate?: string;\r\n    /** optional product context to set with the registration */\r\n    pnhProductContext?: string;\r\n    /** optional context to set with the Trouter transport registration */\r\n    pnhContext?: string;\r\n    /** mandatory parameter if registration is required */\r\n    platform?: string;\r\n    /** mandatory parameter if registration is required */\r\n    platformUIVersion?: string;\r\n    /**\r\n     * @deprecated and will be removed in next versions. Use maxRegistrationTimeInMs instead\r\n     */\r\n    registrarTtlInSeconds?: number;\r\n    /** optional, if set - limits registration TTL in EDF. If not - value from Trouter server is used */\r\n    maxRegistrationTimeInMs?: number;\r\n\r\n    /** Timeouts for normal mode */\r\n    timeoutOptions?: TimeoutOptions;\r\n    /**\r\n     * For historical reasons it exists here and in 'timeoutOptions', but if 'timeoutOptions' is\r\n     * specified - this value will be ignored\r\n     */\r\n    trouterConnectTimeoutInMs?: number;\r\n\r\n    /** Timeout for being in 'in-call' mode, i.e. with aggressive ping/retry policy. If it's zero/undefined - in-call mode is disabled */\r\n    incallModeTimeoutMs?: number;\r\n    /** Timeouts for in-call mode, i.e. with more aggressive timeouts/reconnect policy */\r\n    incallTimeoutOptions?: TimeoutOptions;\r\n\r\n    /** Flag to disable internal token cache and always call provided SkypeTokenProvider */\r\n    disableInternalSkypeTokenCache?: boolean;\r\n\r\n    /** After how long to send the user activity second time after reconnect. */\r\n    userActivitySecondResendDelayMs?: number;\r\n}\r\n\r\nexport interface TrouterTelemetrySettings {\r\n    enabled: boolean;\r\n\r\n    trouter_js_client_connected?: boolean;\r\n    trouter_js_client_disconnected?: boolean;\r\n    trouter_js_client_error?: boolean;\r\n    trouter_js_client_progress?: boolean;\r\n    trouter_js_client_response?: boolean;\r\n    trouter_js_client_request?: boolean;\r\n    trouter_js_client_registration?: boolean;\r\n    trouter_js_client_unregistration?: boolean;\r\n    trouter_js_client_check_connection?: boolean;\r\n\r\n    /** Send trouter_js_client_progress once this number of steps is accumulated */\r\n    numberOfStepsToMaintain?: number;\r\n    /** Send trouter_js_client_progress with current steps after a given timeout */\r\n    sendProgressTimeoutSecs?: number;\r\n\r\n    /**\r\n     * true if health requests should be sent in telemetry events\r\n     */\r\n    logHealthCheckError?: boolean;\r\n    /**\r\n     * True if ping errors should be sent in telemetry events\r\n     */\r\n    logSendPingError?: boolean;\r\n    /**\r\n     * @deprecated and will be removed in next versions\r\n     */\r\n    maxBackoffInMs?: number;\r\n}\r\n\r\nexport interface TrouterTelemetryConfig {\r\n    eventLogger: ITelemetrySender;\r\n    settings: TrouterTelemetrySettings;\r\n}\r\n\r\nexport interface ITrouterServiceConfig {\r\n    trouterSettings: TrouterSettings;\r\n    skypeTokenProvider: SkypeTokenProvider;\r\n    telemetryConfig: TrouterTelemetryConfig;\r\n}\r\n\r\n/**\r\n * Information about trouter connection\r\n */\r\nexport interface IConnectionInfo {\r\n    /** Secure Trouter url at which client can be reached */\r\n    url: string;\r\n\r\n    /** Return connection TTL, i.e. number of seconds till expiration */\r\n    getRemainingTtlInSec(): number;\r\n}\r\nexport type StateChangedListener = (state: TrouterState, url: string) => void;\r\n\r\nexport type TrouterConnectionListener = (state: TrouterState, info?: IConnectionInfo) => void;\r\n\r\nexport interface ITrouterServiceBase extends Client {\r\n    start(options: ITrouterServiceConfig): void;\r\n    stop(): void;\r\n\r\n    setEcsConfig(fullEcsData: {}): Promise<void>;\r\n\r\n    /**\r\n     * Can be called in two cases:\r\n     * - either network is down (disconnectDetected === true) - trouter will verify that\r\n     *      connection is really down and will start to restoring it;\r\n     * - network is restored (disconnectDetected === false) - trouter will try to restore connection immediately;\r\n     */\r\n    checkConnection(disconnectDetected?: boolean): void;\r\n\r\n    /**\r\n     * Resends endpoint registration to Registrar if registration is being\r\n     * handled by the Trouter Client internally.\r\n     * Can throw an instance of Error if that's not possible.\r\n     */\r\n    resendRegistration(): Promise<void>;\r\n\r\n    /**\r\n     * Sets the state of the user activity that is then sent to trouter if it is\r\n     * different from the previous state (including Unknown) or upon reconnect or under\r\n     * other circumstances fully in the discretion of the client.\r\n     * Can throw an instance of Error if that's not possible.\r\n     * @param state The new state of user activity\r\n     */\r\n    setUserActivityState(state: UserActivityState): void;\r\n\r\n    // Legacy API, deprecated\r\n    registerMessageHandler(handler: MessageHandler): void;\r\n    clearMessageHandlers(): void;\r\n    state(): TrouterState;\r\n    getTrouterUrlAsync(): Promise<string>;\r\n    onStateChanged(callback: StateChangedListener | undefined): void;\r\n    offStateChanged(callback: StateChangedListener): boolean;\r\n    addCallback(callback: TrouterConnectionListener): void;\r\n    removeCallback(callback: TrouterConnectionListener): boolean;\r\n}\r\n\r\n/**\r\n * Creates instance of trouter implementation\r\n */\r\nexport declare function createTrouterService(logger: LogProvider): ITrouterServiceBase;\r\n\r\n/**\r\n * Creates instance of trouter implementation\r\n */\r\nexport declare function getTrouterServiceVersion(): string;\r\n\r\n/**\r\n * Helper function to replace URL base (protocol + hostname)\r\n *\r\n * Useful when converting Trouter Endpoint URL to its client-to-client variant\r\n * with `ConnectionInfo.c2cUrlBase`.\r\n */\r\nexport declare function replaceTrouterUrlBase(existingUrl: string, newBase: string): string;\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/Interfaces.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\nexport const constants = {\r\n    TROUTER_INIT: 'trouterinit',\r\n    TROUTER_READY_EVENT: 'trouterReadyEvent',\r\n    TROUTER_READY_TIMEOUT: 'trouterReadyTimeout',\r\n    TROUTER_TOKEN_REQUEST: 'trouterTokenRequest',\r\n    TROUTER_TOKEN_GET_SUCCEEDED: 'trouterTokenGetSucceeded',\r\n    TROUTER_TOKEN_GET_FAILED: 'trouterTokenGetFailed',\r\n    TROUTER_RECONNECTING: 'trouterReconnecting',\r\n    RENEWAL: 'renewal',\r\n    NEW_CONNECTION: 'newConnection',\r\n    ENDPOINT_REGISTRATION_FAILED: 'endpointRegistrationFailed'\r\n};\r\n\r\nexport const CLIENT_VERSION: string = '2020.37.01.1';\r\nexport const HANDLED_MESSAGE_ACK = 200;\r\nexport const UNHANDLED_MESSAGE_ACK = 404;\r\nexport const FAILED_MESSAGE_ACK = 500;\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/Constants.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n// tslint:disable:no-any\r\n// tslint:disable:export-name\r\n\r\nexport function toJson(obj: any): string {\r\n    try {\r\n        return JSON.stringify(obj);\r\n    } catch (error) {\r\n        return `Unable to serialize object of type ${typeof obj}`;\r\n    }\r\n}\r\n\r\nexport function calculateTtlInSec(expirationTsInSec: number | undefined): number {\r\n    const now = Math.round(new Date().getTime() / 1000);\r\n\r\n    return expirationTsInSec !== undefined && expirationTsInSec > now\r\n        ? expirationTsInSec - now\r\n        : 0;\r\n}\r\n\r\nexport function calculateExpireTsInSec(ttlInSec: number): number {\r\n    return Math.round(new Date().getTime() / 1000) + ttlInSec;\r\n}\r\n\r\n/**\r\n * Simplify calculation of time intervals\r\n */\r\nexport class Timespan {\r\n    private start: number;\r\n\r\n    constructor() {\r\n        this.start = Date.now();\r\n    }\r\n\r\n    /**\r\n     * Returns number of milliseconds from start\r\n     */\r\n    public get duration(): number {\r\n        return Date.now() - this.start;\r\n    }\r\n\r\n    /**\r\n     * Returns start time\r\n     */\r\n    public get startTime() {\r\n        return this.start;\r\n    }\r\n\r\n    /**\r\n     * Reset start of interval to current timestamp\r\n     */\r\n    public reset() {\r\n        this.start = Date.now();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/Common.ts","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 4\n// module chunks = 0","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Internal type definitions for Trouter JavaScript Client\r\n */\r\n\r\nimport { calculateTtlInSec } from './Common';\r\nimport {\r\n    HttpHeaders, IConnectionInfo, ITelemetrySender, SendResponseResult,\r\n    TimeoutOptions, TrouterTelemetrySettings\r\n} from './Interfaces';\r\n\r\n// tslint:disable:no-any\r\n// tslint:disable:interface-name\r\n\r\nexport interface ITrouterRequest {\r\n    startTS: number;\r\n    url: string;\r\n    shortUrl: string;\r\n    body: string;\r\n    headers: HttpHeaders;\r\n    id: number;\r\n    method: string;\r\n    correlationVector: string;\r\n}\r\n\r\nexport interface IMessageLossIndicator {\r\n    /** flow tag representing the type of lost messages */\r\n    tag: string;\r\n\r\n    /**\r\n     * etag of the particular flow tag, the etag is used to identify the\r\n     * flow tag on the server when sending trouter.processed_message_loss event\r\n     * to be able to determine if new message loss happened after this one or not\r\n     */\r\n    etag: string;\r\n}\r\n\r\n/**\r\n * Response to downstream service\r\n */\r\nexport interface ITrouterResponse {\r\n    writeHead(status: number, headers?: HttpHeaders);\r\n    write(chunk: string);\r\n    end(chunk?: string): SendResponseResult;\r\n}\r\n\r\n/**\r\n * Data to generate TC query param and for telemetry\r\n */\r\nexport interface IClientInfo {\r\n    /** User-Agent string, for telemetry tracking */\r\n    ua: string;\r\n    /** Application client version, for telemetry tracking */\r\n    v: string;\r\n    /** Trouter client version */\r\n    cv?: string;\r\n}\r\n\r\n/**\r\n * Socket.IO (aka \"transport\") options\r\n */\r\nexport interface ISocketIoOptions {\r\n    'force new connection'?: boolean;\r\n    'reconnect'?: boolean;\r\n    'query'?: string;\r\n    /** timeout for each transport */\r\n    'connect timeout'?: number;\r\n    transports?: string[];\r\n    /**\r\n     * Timeout for waiting for ACK from server for trouter response (i.e. POST HTTP request) in XHR mode\r\n     */\r\n    ackTimeoutMs: number;\r\n}\r\n\r\n/**\r\n * EDF registrar options\r\n */\r\nexport interface IRegistrarOptions {\r\n    registrarUrl: string;\r\n    registrationId: string;\r\n\r\n    pnhAppId: string;\r\n    platform: string;\r\n    pnhTemplateKey: string;\r\n    platformUIVersion: string;\r\n    productContext?: string;\r\n    context: string;\r\n\r\n    /** If set - limits registration TTL in EDF. If not - value from Trouter is used */\r\n    registrarTtlSec?: number;\r\n}\r\n\r\n/**\r\n * Options passed from outside\r\n */\r\nexport interface IConfiguration {\r\n    clientInfo: IClientInfo;\r\n\r\n    eventLogger: ITelemetrySender;\r\n    telemetrySettings: TrouterTelemetrySettings;  // Client telemetry configuration settings\r\n\r\n    clientCorrelationID: string;  // Client telemetry correlation ID, for correlation between Trouter and other components\r\n    environment: string;  // Environment for telemetry, e.g. \"latest\", \"liveint\", \"dogfood\", \"prod\"\r\n\r\n    ioOptions?: ISocketIoOptions;  // Socket.IO options\r\n    io?: any;  // Socket.IO override; for tests only\r\n}\r\n\r\n/**\r\n * Options passed from outside\r\n */\r\nexport interface ITrouterOptions extends IConfiguration {\r\n    endpointId?: string;\r\n    trouterUrl: string;\r\n    registration?: IRegistrarOptions;\r\n\r\n    /**\r\n     * timeouts for normal mode\r\n     */\r\n    timeoutOptions: TimeoutOptions;\r\n\r\n    /**\r\n     * timeouts for in-call mode, i.e. with more aggressive timeouts/reconnect policy\r\n     */\r\n    incallTimeoutOptions: TimeoutOptions;\r\n\r\n    /**\r\n     * Timeout for being in 'in-call' mode, i.e. with aggressive ping/retry policy. If it's zero - in-call mode is disabled\r\n     */\r\n    incallModeTimeoutMs: number;\r\n\r\n    /**\r\n     * Delay for keeping a previous connection open after connection switching.\r\n     */\r\n    lingeringConnectionDelayMs: number;\r\n\r\n    /**\r\n     * After how long to send the user activity second time after reconnect.\r\n     */\r\n    userActivitySecondResendDelayMs: number;\r\n}\r\n\r\n/**\r\n * Information about server connection\r\n */\r\nexport class ServerState implements IConnectionInfo {\r\n    public constructor(\r\n        /** Trouter client connection ID */\r\n        public connectionId: string,\r\n        /** Trouter client connected client ID */\r\n        public connectedClientId: string,\r\n        /** window.location.hostname */\r\n        public domId: string,\r\n        /** Unsecure Trouter url at which client can be reached */\r\n        public unsecureUrl: string,\r\n        /** Secure Trouter url at which client can be reached */\r\n        public url: string,\r\n        /** URL base to use for client-to-client requests */\r\n        public c2cUrlBase: string,\r\n        /** expiration timestamp for connection in seconds */\r\n        public expirationTsSec?: number\r\n    ) {\r\n    }\r\n\r\n    /** Return connection TTL, i.e. number of seconds till expiration */\r\n    public getRemainingTtlInSec(): number {\r\n        return calculateTtlInSec(this.expirationTsSec);\r\n    }\r\n}\r\n\r\n/**\r\n * Interface for trouter URL promise resolver\r\n */\r\nexport interface ITrouterUrlPromise {\r\n    resolveUrl(url: string): void;\r\n    resetUrl(): void;\r\n}\r\n\r\nexport enum UserActivityEventReason {\r\n    Unknown = 0,\r\n    Modified = 1,\r\n    Snapshot = 2,\r\n    Connected = 3\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/InternalInterfaces.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n // tslint:disable:export-name\r\n\r\nimport { HANDLED_MESSAGE_ACK, UNHANDLED_MESSAGE_ACK } from './Constants';\r\nimport { HandleMessageResult, LogProvider, MessageHandler, TrouterMessage } from './Interfaces';\r\n\r\n/**\r\n * Registry of message handlers.\r\n * Safely executes individual handlers and aggregates results\r\n */\r\nexport class MessageHandlerRegistry {\r\n    private messageHandlers: MessageHandler[] = [];\r\n\r\n    public constructor(private logger: LogProvider) {\r\n    }\r\n\r\n    public register(handler: MessageHandler) {\r\n        if (this.messageHandlers.some(item => item === handler)) {\r\n            throw new Error('Registering the same handler twice is not allowed');\r\n        }\r\n        this.messageHandlers.push(handler);\r\n    }\r\n\r\n    public clear() {\r\n        this.logger.debug('Clearing message handlers');\r\n        this.messageHandlers = [];\r\n    }\r\n\r\n    public active(): boolean {\r\n        return (this.messageHandlers.length > 0);\r\n    }\r\n\r\n    public handleMessage(message: TrouterMessage): HandleMessageResult {\r\n        const unhandledMessageResult = {\r\n            resultCode: UNHANDLED_MESSAGE_ACK,\r\n            isHandled: false\r\n        };\r\n\r\n        for (const messageHandler of this.messageHandlers) {\r\n            const result = this.safeExecuteHandle(messageHandler, message);\r\n            if (result !== undefined && (result.isHandled === undefined || result.isHandled)) {\r\n                if (result.resultCode === undefined) {\r\n                    result.resultCode = HANDLED_MESSAGE_ACK;\r\n                }\r\n\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return unhandledMessageResult;\r\n    }\r\n\r\n    private safeExecuteHandle(handler: MessageHandler, message: TrouterMessage): HandleMessageResult | undefined {\r\n        try {\r\n            return handler.handleMessage(message);\r\n        } catch (exception) {\r\n            this.logger.warn(`A trouter message handler is throwing exceptions. exception: ${exception}`);\r\n\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/MessageHandler.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nimport { SkypeTokenProvider } from './Interfaces';\r\n\r\n// tslint:disable-next-line:export-name\r\nexport function addCacheAsBackupTo(provider: SkypeTokenProvider): SkypeTokenProvider {\r\n    let cachedToken: string | undefined;\r\n\r\n    return async (forceRefresh: boolean): Promise<string> => {\r\n        if (forceRefresh) {\r\n            cachedToken = undefined;\r\n        }\r\n\r\n        return new Promise<string>((resolve, reject) => {\r\n            provider(forceRefresh).then((token: string) => {\r\n                cachedToken = token;\r\n                resolve(token);\r\n            }).catch((error) => {\r\n                if (cachedToken !== undefined && cachedToken.length > 0) {\r\n                    resolve(cachedToken);\r\n                }\r\n                reject(error);\r\n            });\r\n        });\r\n    };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/SkypeTokenProviderWithCache.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n// tslint:disable:strict-boolean-expressions\r\n\r\nimport { toJson } from './Common';\r\nimport {\r\n    ConnectionInfo, Listener, LogProvider, Request, Response, SendResponseResult, SkypeTokenProvider, TrouterState,\r\n    UserActivityState\r\n} from './Interfaces';\r\nimport { IMessageLossIndicator, ITrouterOptions, ITrouterRequest, ITrouterResponse, ServerState } from './InternalInterfaces';\r\nimport { Logger } from './Logger';\r\nimport { IManagerConsumer, TrouterConnection } from './TrouterConnection';\r\nimport { IManagerWorker, TrouterManagerFsm } from './TrouterManagerFsm';\r\n\r\n/**\r\n * Trouter implementation\r\n */\r\nexport class TrouterManager implements IManagerWorker, IManagerConsumer {\r\n    private logger: Logger;\r\n    private fsm: TrouterManagerFsm;\r\n    private firstConnection?: TrouterConnection;\r\n    private secondConnection?: TrouterConnection;\r\n    /** Value of first connection before stop() - to dispatch onDisconnected() of first connection */\r\n    private storedFirstConnection?: TrouterConnection;\r\n    private baseEndpointUrl: string;\r\n\r\n    /** Cache for processed message loss to catch duplicates and to not pass them to the listeners */\r\n    private processedMessageLoss: object;\r\n\r\n    public constructor(\r\n        private logFunc: LogProvider,\r\n        private options: ITrouterOptions,\r\n        private tokenProvider: SkypeTokenProvider,\r\n        private listener: Listener\r\n    ) {\r\n        this.logger = new Logger('Manager', logFunc);\r\n        this.logger.info(`Created TrouterManager with options ${toJson(this.options)}`);\r\n        this.fsm = new TrouterManagerFsm(logFunc, this);\r\n        this.baseEndpointUrl = '';\r\n        this.processedMessageLoss = {};\r\n    }\r\n\r\n    public start() {\r\n        this.fsm.start();\r\n    }\r\n\r\n    public stop() {\r\n        this.fsm.stop();\r\n    }\r\n\r\n    public configure(options: ITrouterOptions) {\r\n        this.options = options;\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.configure(options);\r\n        }\r\n\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.configure(options);\r\n        }\r\n        this.logger.info(`Reconfigured TrouterManager with options ${toJson(this.options)}`);\r\n    }\r\n\r\n    public checkConnection(disconnectDetected: boolean) {\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.checkConnection(disconnectDetected);\r\n        }\r\n\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.checkConnection(disconnectDetected);\r\n        }\r\n    }\r\n\r\n    public async resendRegistration(): Promise<void> {\r\n        if (this.secondConnection !== undefined) {\r\n            this.logger.info('Resending registration on the second/new connection');\r\n\r\n            return this.secondConnection.resendRegistration();\r\n        }\r\n\r\n        if (this.firstConnection !== undefined) {\r\n            this.logger.info('Resending registration on the first/current connection');\r\n\r\n            return this.firstConnection.resendRegistration();\r\n        }\r\n\r\n        this.logger.info('No connection to resend registration on, will be done upon (re)connect');\r\n    }\r\n\r\n    public getServerState(): ServerState | undefined {\r\n        if (this.firstConnection !== undefined) {\r\n            return this.firstConnection.getServerState();\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    /** Returns current state */\r\n    public getState(): TrouterState {\r\n        return this.fsm.getState();\r\n    }\r\n\r\n    //////////// IManagerWorker ////////////\r\n    public startFirstConnection() {\r\n        this.firstConnection = new TrouterConnection(this.logFunc, this.options, this, this.tokenProvider);\r\n        this.firstConnection.start();\r\n    }\r\n\r\n    public startSecondConnection() {\r\n        const userActivityState = this.firstConnection !== undefined\r\n            ? this.firstConnection.getUserActivityState()\r\n            : UserActivityState.Unknown;\r\n        this.secondConnection = new TrouterConnection(this.logFunc, this.options, this, this.tokenProvider, userActivityState);\r\n        this.secondConnection.start();\r\n    }\r\n\r\n    public stopFirstConnection(dontUnregister: boolean) {\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.stop(dontUnregister);\r\n            // Store first connection to be able to compare in onDisconnected() handler\r\n            this.storedFirstConnection = this.firstConnection;\r\n            this.firstConnection = undefined;\r\n        }\r\n    }\r\n\r\n    public stopSecondConnection(dontUnregister: boolean) {\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.stop(dontUnregister);\r\n            this.secondConnection = undefined;\r\n        }\r\n    }\r\n\r\n    public stopSecondConnectionDelayed() {\r\n        if (this.secondConnection !== undefined) {\r\n            const connection = this.secondConnection;\r\n            this.secondConnection = undefined;\r\n            this.logger.info(`Closing an inactive connection in ${Math.round(this.options.lingeringConnectionDelayMs / 1000)}s`);\r\n            setTimeout(() => {\r\n                connection.stop(true);\r\n            }, this.options.lingeringConnectionDelayMs);\r\n        }\r\n    }\r\n\r\n    public switchConnections() {\r\n        const tmp = this.firstConnection;\r\n        this.firstConnection = this.secondConnection;\r\n        this.secondConnection = tmp;\r\n    }\r\n\r\n    public doesSecondConnectionExist(): boolean {\r\n        return this.secondConnection !== undefined;\r\n    }\r\n\r\n    public dispatchConnected() {\r\n        if (this.firstConnection !== undefined) {\r\n            const ss = this.firstConnection.getServerState();\r\n            const baseEndpointUrl = (ss.url.slice(-1) === '/') ? ss.url.slice(0, -1) : ss.url;\r\n            const connectionInfo: ConnectionInfo = {\r\n                baseEndpointUrl: baseEndpointUrl,\r\n                newEndpointUrl: (baseEndpointUrl !== this.baseEndpointUrl),\r\n                c2cUrlBase: ss.c2cUrlBase,\r\n                clientId: ss.connectedClientId,\r\n                connectionId: ss.connectionId,\r\n                connectionTtlSec: ss.getRemainingTtlInSec()\r\n            };\r\n            this.baseEndpointUrl = baseEndpointUrl;\r\n            this.listener.onTrouterConnected(ss.url, connectionInfo);\r\n        }\r\n    }\r\n\r\n    public dispatchReconnecting() {\r\n        if (this.listener.onTrouterDisconnected) {\r\n            this.listener.onTrouterDisconnected();\r\n        }\r\n    }\r\n\r\n    public dispatchStopped() {\r\n        if (this.listener.onTrouterDisconnected) {\r\n            this.listener.onTrouterDisconnected();\r\n        }\r\n    }\r\n\r\n    //////////// IManagerConsumer ////////////\r\n    public onDownstreamRequest(connection: TrouterConnection, request: ITrouterRequest, response: ITrouterResponse) {\r\n        const req: Request = {\r\n            id: request.id,\r\n            method: request.method,\r\n            path: `/${request.shortUrl}`,\r\n            body: request.body,\r\n            headers: request.headers\r\n        };\r\n        const rsp: Response = {\r\n            id: request.id,\r\n            status: 0,\r\n            headers: {},\r\n            body: '',\r\n            send: () => {\r\n                if (rsp.status <= 100 || rsp.status >= 999) {\r\n\r\n                    return SendResponseResult.Incomplete;\r\n                }\r\n                response.writeHead(rsp.status, rsp.headers);\r\n\r\n                return response.end(rsp.body);\r\n            }\r\n        };\r\n        this.listener.onTrouterRequest(req, rsp);\r\n    }\r\n\r\n    public onConnected(connection: TrouterConnection) {\r\n        this.fsm.onConnected(connection === this.firstConnection);\r\n    }\r\n\r\n    public onRegistered(connection: TrouterConnection) {\r\n        this.fsm.onRegistered(connection === this.firstConnection);\r\n    }\r\n\r\n    public onReconnecting(connection: TrouterConnection) {\r\n        this.fsm.onReconnecting(connection === this.firstConnection);\r\n    }\r\n\r\n    public onReconnectIsRequired(connection: TrouterConnection) {\r\n        this.fsm.onReconnectionRequired(connection === this.firstConnection);\r\n    }\r\n\r\n    public onDisconnected(connection: TrouterConnection) {\r\n        this.fsm.onDisconnected(connection === this.storedFirstConnection);\r\n    }\r\n\r\n    public setUserActivityState(state: UserActivityState): void {\r\n        if (this.secondConnection !== undefined) {\r\n            this.logger.info(`Setting user activity state ${UserActivityState[state]} on the second/new connection`);\r\n            this.secondConnection.setUserActivityState(state);\r\n\r\n            return;\r\n        }\r\n\r\n        if (this.firstConnection !== undefined) {\r\n            this.logger.info(`Setting user activity state ${UserActivityState[state]} on the first/current connection`);\r\n            this.firstConnection.setUserActivityState(state);\r\n\r\n            return;\r\n        }\r\n\r\n        throw new Error('setUserActivityState called too early');\r\n    }\r\n\r\n    public onTrouterMessageLost(indicators: IMessageLossIndicator[]) {\r\n        if (this.listener.onTrouterMessageLoss) {\r\n            if (indicators && indicators.length) {\r\n                // Filter out already seen dropped indicators and inform server that they are processed\r\n                const duplicates = indicators.filter(di => this.processedMessageLoss[`${di.tag}-${di.etag}`] !== undefined);\r\n                if (duplicates.length) {\r\n                    this.logger.warn('onTrouterMessageLoss - removing duplicates and sending event to server');\r\n                    this.sendProcessedDroppedIndicators(duplicates);\r\n                    indicators = indicators.filter(di => this.processedMessageLoss[`${di.tag}-${di.etag}`] === undefined);\r\n\r\n                    if (!indicators.length) {\r\n                        this.logger.warn('onTrouterMessageLoss - All the data are duplicated');\r\n\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                // Send the data to the listeners\r\n                const messageLossProcessed = this.listener.onTrouterMessageLoss(indicators.map(di => di.tag));\r\n                if (!messageLossProcessed) {\r\n                    this.logger.warn('onTrouterMessageLoss - flow tags have not been processed by listeners');\r\n\r\n                    return;\r\n                }\r\n\r\n                // Update the cache\r\n                indicators.forEach(di => {\r\n                    this.processedMessageLoss[`${di.tag}-${di.etag}`] = '';\r\n                });\r\n                this.sendProcessedDroppedIndicators(indicators);\r\n            } else {\r\n                this.logger.warn('onTrouterMessageLoss - no flow tags have been provided');\r\n            }\r\n        }\r\n    }\r\n\r\n    private sendProcessedDroppedIndicators(messageLossIndicators: IMessageLossIndicator[]) {\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.sendProcessedDroppedIndicators(messageLossIndicators);\r\n\r\n            return;\r\n        }\r\n\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.sendProcessedDroppedIndicators(messageLossIndicators);\r\n\r\n            return;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/TrouterManager.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n import { LogProvider } from './Interfaces';\r\n\r\n /**\r\n  * Util that encapsulates lifecycle of active trouter URL and manages waiter for the URL via promise\r\n  */\r\n export class TrouterUrlPromise {\r\n    private url?: string;\r\n    private pendingPromise?: Promise<string>;\r\n    private pendingPromiseResolveRef?: Function;\r\n    private pendingPromiseRejectRef?: Function;\r\n\r\n    public constructor(private logger: LogProvider) {\r\n    }\r\n\r\n    // tslint:disable-next-line:promise-function-async\r\n    public getPromise(): Promise<string> {\r\n        if (this.url !== undefined) {\r\n            this.logger.debug(`[TrouterUrlPromise] returning previously resolved url: ${this.url}`);\r\n\r\n            return Promise.resolve(this.url);\r\n        }\r\n\r\n        if (this.pendingPromise === undefined) {\r\n            this.logger.debug('[TrouterUrlPromise] creating and returning promise');\r\n            // tslint:disable-next-line:promise-must-complete\r\n            this.pendingPromise = new Promise<string>((resolve, reject) => {\r\n                this.pendingPromiseResolveRef = resolve;\r\n                this.pendingPromiseRejectRef = reject;\r\n            });\r\n        } else {\r\n            this.logger.debug('[TrouterUrlPromise] returning existing promise');\r\n        }\r\n\r\n        return this.pendingPromise;\r\n    }\r\n\r\n    public resolveUrl(url: string) {\r\n        this.url = url;\r\n        this.logger.debug(`[TrouterUrlPromise] got url: ${this.url}`);\r\n\r\n        const resolveCallback = this.pendingPromiseResolveRef;\r\n        this.pendingPromise = undefined;\r\n        this.pendingPromiseResolveRef = undefined;\r\n        this.pendingPromiseRejectRef = undefined;\r\n\r\n        if (resolveCallback !== undefined) {\r\n            this.logger.debug('[TrouterUrlPromise] resolving promise');\r\n            resolveCallback(url);\r\n        }\r\n    }\r\n\r\n    public rejectUrl(error: Error) {\r\n        this.logger.debug('[TrouterUrlPromise] aborting');\r\n        const rejectCallback = this.pendingPromiseRejectRef;\r\n        this.url = undefined;\r\n        this.pendingPromise = undefined;\r\n        this.pendingPromiseResolveRef = undefined;\r\n        this.pendingPromiseRejectRef = undefined;\r\n\r\n        if (rejectCallback !== undefined) {\r\n            this.logger.debug('[TrouterUrlPromise] rejecting promise');\r\n            rejectCallback(error);\r\n        }\r\n    }\r\n\r\n    public resetUrl() {\r\n        this.logger.debug('[TrouterUrlPromise] resetting url');\r\n        this.url = undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/TrouterUrlPromise.ts","/** Socket.IO.js build:0.9.6, development. Copyright(c) 2011 LearnBoost <dev@learnboost.com> MIT Licensed */\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, global) {\r\n\r\n  /**\r\n   * IO namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  var io = exports;\r\n\r\n  /**\r\n   * Socket.IO version\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  io.version = '0.9.6';\r\n\r\n  /**\r\n   * Protocol implemented.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  io.protocol = 1;\r\n\r\n  /**\r\n   * Available transports, these will be populated with the available transports\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  io.transports = [];\r\n\r\n  /**\r\n   * Keep track of jsonp callbacks.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.j = [];\r\n\r\n  /**\r\n   * Keep track of our io.Sockets\r\n   *\r\n   * @api private\r\n   */\r\n  io.sockets = {};\r\n\r\n\r\n  /**\r\n   * Manages connections to hosts.\r\n   *\r\n   * @param {String} uri\r\n   * @Param {Boolean} force creation of new socket (defaults to false)\r\n   * @api public\r\n   */\r\n\r\n  io.connect = function (host, details) {\r\n    var uri = io.util.parseUri(host)\r\n      , uuri\r\n      , socket;\r\n\r\n    if (global && global.location) {\r\n      uri.protocol = uri.protocol || global.location.protocol.slice(0, -1);\r\n      uri.host = uri.host || (global.document\r\n        ? global.document.domain : global.location.hostname);\r\n      uri.port = uri.port || global.location.port;\r\n    }\r\n\r\n    uuri = io.util.uniqueUri(uri);\r\n\r\n    var options = {\r\n        host: uri.host\r\n      , secure: 'https' == uri.protocol\r\n      , port: uri.port || ('https' == uri.protocol ? 443 : 80)\r\n      , query: uri.query || ''\r\n    };\r\n\r\n    io.util.merge(options, details);\r\n\r\n    if (options['force new connection'] || !io.sockets[uuri]) {\r\n      socket = new io.Socket(options);\r\n    }\r\n\r\n    if (!options['force new connection'] && socket) {\r\n      io.sockets[uuri] = socket;\r\n    }\r\n\r\n    socket = socket || io.sockets[uuri];\r\n\r\n    // if path is different from '' or /\r\n    return socket.of(uri.path.length > 1 ? uri.path : '');\r\n  };\r\n\r\n})(\r\n    'object' === typeof module ? module.exports : (this.io = {})\r\n  , 'undefined' === typeof global ? window : global);\r\n\r\n// Workaround inside webpack\r\nvar io = module.exports;\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, global) {\r\n\r\n  /**\r\n   * Utilities namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  var util = exports.util = {};\r\n\r\n  /**\r\n   * Parses an URI\r\n   *\r\n   * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n   * @api public\r\n   */\r\n\r\n  var re = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\n  var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password',\r\n               'host', 'port', 'relative', 'path', 'directory', 'file', 'query',\r\n               'anchor'];\r\n\r\n  util.parseUri = function (str) {\r\n    var m = re.exec(str || '')\r\n      , uri = {}\r\n      , i = 14;\r\n\r\n    while (i--) {\r\n      uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    return uri;\r\n  };\r\n\r\n  /**\r\n   * Produces a unique url that identifies a Socket.IO connection.\r\n   *\r\n   * @param {Object} uri\r\n   * @api public\r\n   */\r\n\r\n  util.uniqueUri = function (uri) {\r\n    var protocol = uri.protocol\r\n      , host = uri.host\r\n      , port = uri.port;\r\n\r\n    if ('document' in global) {\r\n      host = host || document.domain;\r\n      port = port || (protocol == 'https'\r\n        && document.location.protocol !== 'https:' ? 443 : document.location.port);\r\n    } else {\r\n      host = host || 'localhost';\r\n\r\n      if (!port && protocol == 'https') {\r\n        port = 443;\r\n      }\r\n    }\r\n\r\n    return (protocol || 'http') + '://' + host + ':' + (port || 80);\r\n  };\r\n\r\n  /**\r\n   * Mergest 2 query strings in to once unique query string\r\n   *\r\n   * @param {String} base\r\n   * @param {String} addition\r\n   * @api public\r\n   */\r\n\r\n  util.query = function (base, addition) {\r\n    var query = util.chunkQuery(base || '')\r\n      , components = [];\r\n\r\n    util.merge(query, util.chunkQuery(addition || ''));\r\n    for (var part in query) {\r\n      if (query.hasOwnProperty(part)) {\r\n        components.push(part + '=' + query[part]);\r\n      }\r\n    }\r\n\r\n    return components.length ? '?' + components.join('&') : '';\r\n  };\r\n\r\n  /**\r\n   * Transforms a querystring in to an object\r\n   *\r\n   * @param {String} qs\r\n   * @api public\r\n   */\r\n\r\n  util.chunkQuery = function (qs) {\r\n    var query = {}\r\n      , params = qs.split('&')\r\n      , i = 0\r\n      , l = params.length\r\n      , kv;\r\n\r\n    for (; i < l; ++i) {\r\n      kv = params[i].split('=');\r\n      if (kv[0]) {\r\n        query[kv[0]] = kv[1];\r\n      }\r\n    }\r\n\r\n    return query;\r\n  };\r\n\r\n  /**\r\n   * Executes the given function when the page is loaded.\r\n   *\r\n   *     io.util.load(function () { console.log('page loaded'); });\r\n   *\r\n   * @param {Function} fn\r\n   * @api public\r\n   */\r\n\r\n  var pageLoaded = false;\r\n\r\n  util.load = function (fn) {\r\n    if ('document' in global && document.readyState === 'complete' || pageLoaded) {\r\n      return fn();\r\n    }\r\n\r\n    util.on(global, 'load', fn, false);\r\n  };\r\n\r\n  /**\r\n   * Adds an event.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  util.on = function (element, event, fn, capture) {\r\n    if (element.attachEvent) {\r\n      element.attachEvent('on' + event, fn);\r\n    } else if (element.addEventListener) {\r\n      element.addEventListener(event, fn, capture);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Generates the correct `XMLHttpRequest` for regular and cross domain requests.\r\n   *\r\n   * @param {Boolean} [xdomain] Create a request that can be used cross domain.\r\n   * @returns {XMLHttpRequest|false} If we can create a XMLHttpRequest.\r\n   * @api private\r\n   */\r\n\r\n  util.request = function (xdomain) {\r\n\r\n    if (xdomain && 'undefined' != typeof XDomainRequest) {\r\n      return new XDomainRequest();\r\n    }\r\n\r\n    if ('undefined' != typeof XMLHttpRequest && (!xdomain || util.ua.hasCORS)) {\r\n      return new XMLHttpRequest();\r\n    }\r\n\r\n    if (!xdomain) {\r\n      try {\r\n        return new window[(['Active'].concat('Object').join('X'))]('Microsoft.XMLHTTP');\r\n      } catch(e) { }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * XHR based transport constructor.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  /**\r\n   * Change the internal pageLoaded value.\r\n   */\r\n\r\n  if ('undefined' != typeof window) {\r\n    util.load(function () {\r\n      pageLoaded = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Defers a function to ensure a spinner is not displayed by the browser\r\n   *\r\n   * @param {Function} fn\r\n   * @api public\r\n   */\r\n\r\n  util.defer = function (fn) {\r\n    if (!util.ua.webkit || 'undefined' != typeof importScripts) {\r\n      return fn();\r\n    }\r\n\r\n    util.load(function () {\r\n      setTimeout(fn, 100);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Merges two objects.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.merge = function merge (target, additional, deep, lastseen) {\r\n    var seen = lastseen || []\r\n      , depth = typeof deep == 'undefined' ? 2 : deep\r\n      , prop;\r\n\r\n    for (prop in additional) {\r\n      if (additional.hasOwnProperty(prop) && util.indexOf(seen, prop) < 0) {\r\n        if (typeof target[prop] !== 'object' || !depth) {\r\n          target[prop] = additional[prop];\r\n          seen.push(additional[prop]);\r\n        } else {\r\n          util.merge(target[prop], additional[prop], depth - 1, seen);\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  };\r\n\r\n  /**\r\n   * Merges prototypes from objects\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.mixin = function (ctor, ctor2) {\r\n    util.merge(ctor.prototype, ctor2.prototype);\r\n  };\r\n\r\n  /**\r\n   * Shortcut for prototypical and static inheritance.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  util.inherit = function (ctor, ctor2) {\r\n    function f() {};\r\n    f.prototype = ctor2.prototype;\r\n    ctor.prototype = new f;\r\n  };\r\n\r\n  /**\r\n   * Checks if the given object is an Array.\r\n   *\r\n   *     io.util.isArray([]); // true\r\n   *     io.util.isArray({}); // false\r\n   *\r\n   * @param Object obj\r\n   * @api public\r\n   */\r\n\r\n  util.isArray = Array.isArray || function (obj) {\r\n    return Object.prototype.toString.call(obj) === '[object Array]';\r\n  };\r\n\r\n  /**\r\n   * Intersects values of two arrays into a third\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.intersect = function (arr, arr2) {\r\n    var ret = []\r\n      , longest = arr.length > arr2.length ? arr : arr2\r\n      , shortest = arr.length > arr2.length ? arr2 : arr;\r\n\r\n    for (var i = 0, l = shortest.length; i < l; i++) {\r\n      if (~util.indexOf(longest, shortest[i]))\r\n        ret.push(shortest[i]);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * Array indexOf compatibility.\r\n   *\r\n   * @see bit.ly/a5Dxa2\r\n   * @api public\r\n   */\r\n\r\n  util.indexOf = function (arr, o, i) {\r\n\r\n    for (var j = arr.length, i = i < 0 ? i + j < 0 ? 0 : i + j : i || 0;\r\n         i < j && arr[i] !== o; i++) {}\r\n\r\n    return j <= i ? -1 : i;\r\n  };\r\n\r\n  /**\r\n   * Converts enumerables to array.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.toArray = function (enu) {\r\n    var arr = [];\r\n\r\n    for (var i = 0, l = enu.length; i < l; i++)\r\n      arr.push(enu[i]);\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * UA / engines detection namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  util.ua = {};\r\n\r\n  /**\r\n   * Whether the UA supports CORS for XHR.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.ua.hasCORS = 'undefined' != typeof XMLHttpRequest && (function () {\r\n    try {\r\n      var a = new XMLHttpRequest();\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n\r\n    return a.withCredentials != undefined;\r\n  })();\r\n\r\n  /**\r\n   * Detect webkit.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.ua.webkit = 'undefined' != typeof navigator\r\n    && /webkit/i.test(navigator.userAgent);\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' === typeof global ? window : global);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.EventEmitter = EventEmitter;\r\n\r\n  /**\r\n   * Event emitter constructor.\r\n   *\r\n   * @api public.\r\n   */\r\n\r\n  function EventEmitter () {};\r\n\r\n  /**\r\n   * Adds a listener\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.on = function (name, fn) {\r\n    if (!this.$events) {\r\n      this.$events = {};\r\n    }\r\n\r\n    if (!this.$events[name]) {\r\n      this.$events[name] = fn;\r\n    } else if (io.util.isArray(this.$events[name])) {\r\n      this.$events[name].push(fn);\r\n    } else {\r\n      this.$events[name] = [this.$events[name], fn];\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n  /**\r\n   * Adds a volatile listener.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.once = function (name, fn) {\r\n    var self = this;\r\n\r\n    function on () {\r\n      self.removeListener(name, on);\r\n      fn.apply(this, arguments);\r\n    };\r\n\r\n    on.listener = fn;\r\n    this.on(name, on);\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Removes a listener.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.removeListener = function (name, fn) {\r\n    if (this.$events && this.$events[name]) {\r\n      var list = this.$events[name];\r\n\r\n      if (io.util.isArray(list)) {\r\n        var pos = -1;\r\n\r\n        for (var i = 0, l = list.length; i < l; i++) {\r\n          if (list[i] === fn || (list[i].listener && list[i].listener === fn)) {\r\n            pos = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (pos < 0) {\r\n          return this;\r\n        }\r\n\r\n        list.splice(pos, 1);\r\n\r\n        if (!list.length) {\r\n          delete this.$events[name];\r\n        }\r\n      } else if (list === fn || (list.listener && list.listener === fn)) {\r\n        delete this.$events[name];\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Removes all listeners for an event.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.removeAllListeners = function (name) {\r\n    // TODO: enable this when node 0.5 is stable\r\n    //if (name === undefined) {\r\n      //this.$events = {};\r\n      //return this;\r\n    //}\r\n\r\n    if (this.$events && this.$events[name]) {\r\n      this.$events[name] = null;\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Gets all listeners for a certain event.\r\n   *\r\n   * @api publci\r\n   */\r\n\r\n  EventEmitter.prototype.listeners = function (name) {\r\n    if (!this.$events) {\r\n      this.$events = {};\r\n    }\r\n\r\n    if (!this.$events[name]) {\r\n      this.$events[name] = [];\r\n    }\r\n\r\n    if (!io.util.isArray(this.$events[name])) {\r\n      this.$events[name] = [this.$events[name]];\r\n    }\r\n\r\n    return this.$events[name];\r\n  };\r\n\r\n  /**\r\n   * Emits an event.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.emit = function (name) {\r\n    if (!this.$events) {\r\n      return false;\r\n    }\r\n\r\n    var handler = this.$events[name];\r\n\r\n    if (!handler) {\r\n      return false;\r\n    }\r\n\r\n    var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n    if ('function' == typeof handler) {\r\n      handler.apply(this, args);\r\n    } else if (io.util.isArray(handler)) {\r\n      var listeners = handler.slice();\r\n\r\n      for (var i = 0, l = listeners.length; i < l; i++) {\r\n        listeners[i].apply(this, args);\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n/**\r\n * Based on JSON2 (http://www.JSON.org/js.html).\r\n */\r\n\r\n(function (exports, nativeJSON) {\r\n  \"use strict\";\r\n\r\n  // use native JSON if it's available\r\n  if (nativeJSON && nativeJSON.parse){\r\n    return exports.JSON = {\r\n      parse: nativeJSON.parse\r\n    , stringify: nativeJSON.stringify\r\n    }\r\n  }\r\n\r\n  var JSON = exports.JSON = {};\r\n\r\n  function f(n) {\r\n      // Format integers to have at least two digits.\r\n      return n < 10 ? '0' + n : n;\r\n  }\r\n\r\n  function date(d, key) {\r\n    return isFinite(d.valueOf()) ?\r\n        d.getUTCFullYear()     + '-' +\r\n        f(d.getUTCMonth() + 1) + '-' +\r\n        f(d.getUTCDate())      + 'T' +\r\n        f(d.getUTCHours())     + ':' +\r\n        f(d.getUTCMinutes())   + ':' +\r\n        f(d.getUTCSeconds())   + 'Z' : null;\r\n  };\r\n\r\n  var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\r\n      escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\r\n      gap,\r\n      indent,\r\n      meta = {    // table of character substitutions\r\n          '\\b': '\\\\b',\r\n          '\\t': '\\\\t',\r\n          '\\n': '\\\\n',\r\n          '\\f': '\\\\f',\r\n          '\\r': '\\\\r',\r\n          '\"' : '\\\\\"',\r\n          '\\\\': '\\\\\\\\'\r\n      },\r\n      rep;\r\n\r\n\r\n  function quote(string) {\r\n\r\n// If the string contains no control characters, no quote characters, and no\r\n// backslash characters, then we can safely slap some quotes around it.\r\n// Otherwise we must also replace the offending characters with safe escape\r\n// sequences.\r\n\r\n      escapable.lastIndex = 0;\r\n      return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\r\n          var c = meta[a];\r\n          return typeof c === 'string' ? c :\r\n              '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\r\n      }) + '\"' : '\"' + string + '\"';\r\n  }\r\n\r\n\r\n  function str(key, holder) {\r\n\r\n// Produce a string from holder[key].\r\n\r\n      var i,          // The loop counter.\r\n          k,          // The member key.\r\n          v,          // The member value.\r\n          length,\r\n          mind = gap,\r\n          partial,\r\n          value = holder[key];\r\n\r\n// If the value has a toJSON method, call it to obtain a replacement value.\r\n\r\n      if (value instanceof Date) {\r\n          value = date(key);\r\n      }\r\n\r\n// If we were called with a replacer function, then call the replacer to\r\n// obtain a replacement value.\r\n\r\n      if (typeof rep === 'function') {\r\n          value = rep.call(holder, key, value);\r\n      }\r\n\r\n// What happens next depends on the value's type.\r\n\r\n      switch (typeof value) {\r\n      case 'string':\r\n          return quote(value);\r\n\r\n      case 'number':\r\n\r\n// JSON numbers must be finite. Encode non-finite numbers as null.\r\n\r\n          return isFinite(value) ? String(value) : 'null';\r\n\r\n      case 'boolean':\r\n      case 'null':\r\n\r\n// If the value is a boolean or null, convert it to a string. Note:\r\n// typeof null does not produce 'null'. The case is included here in\r\n// the remote chance that this gets fixed someday.\r\n\r\n          return String(value);\r\n\r\n// If the type is 'object', we might be dealing with an object or an array or\r\n// null.\r\n\r\n      case 'object':\r\n\r\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\r\n// so watch out for that case.\r\n\r\n          if (!value) {\r\n              return 'null';\r\n          }\r\n\r\n// Make an array to hold the partial results of stringifying this object value.\r\n\r\n          gap += indent;\r\n          partial = [];\r\n\r\n// Is the value an array?\r\n\r\n          if (Object.prototype.toString.apply(value) === '[object Array]') {\r\n\r\n// The value is an array. Stringify every element. Use null as a placeholder\r\n// for non-JSON values.\r\n\r\n              length = value.length;\r\n              for (i = 0; i < length; i += 1) {\r\n                  partial[i] = str(i, value) || 'null';\r\n              }\r\n\r\n// Join all of the elements together, separated with commas, and wrap them in\r\n// brackets.\r\n\r\n              v = partial.length === 0 ? '[]' : gap ?\r\n                  '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\r\n                  '[' + partial.join(',') + ']';\r\n              gap = mind;\r\n              return v;\r\n          }\r\n\r\n// If the replacer is an array, use it to select the members to be stringified.\r\n\r\n          if (rep && typeof rep === 'object') {\r\n              length = rep.length;\r\n              for (i = 0; i < length; i += 1) {\r\n                  if (typeof rep[i] === 'string') {\r\n                      k = rep[i];\r\n                      v = str(k, value);\r\n                      if (v) {\r\n                          partial.push(quote(k) + (gap ? ': ' : ':') + v);\r\n                      }\r\n                  }\r\n              }\r\n          } else {\r\n\r\n// Otherwise, iterate through all of the keys in the object.\r\n\r\n              for (k in value) {\r\n                  if (Object.prototype.hasOwnProperty.call(value, k)) {\r\n                      v = str(k, value);\r\n                      if (v) {\r\n                          partial.push(quote(k) + (gap ? ': ' : ':') + v);\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n\r\n// Join all of the member texts together, separated with commas,\r\n// and wrap them in braces.\r\n\r\n          v = partial.length === 0 ? '{}' : gap ?\r\n              '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\r\n              '{' + partial.join(',') + '}';\r\n          gap = mind;\r\n          return v;\r\n      }\r\n  }\r\n\r\n// If the JSON object does not yet have a stringify method, give it one.\r\n\r\n  JSON.stringify = function (value, replacer, space) {\r\n\r\n// The stringify method takes a value and an optional replacer, and an optional\r\n// space parameter, and returns a JSON text. The replacer can be a function\r\n// that can replace values, or an array of strings that will select the keys.\r\n// A default replacer method can be provided. Use of the space parameter can\r\n// produce text that is more easily readable.\r\n\r\n      var i;\r\n      gap = '';\r\n      indent = '';\r\n\r\n// If the space parameter is a number, make an indent string containing that\r\n// many spaces.\r\n\r\n      if (typeof space === 'number') {\r\n          for (i = 0; i < space; i += 1) {\r\n              indent += ' ';\r\n          }\r\n\r\n// If the space parameter is a string, it will be used as the indent string.\r\n\r\n      } else if (typeof space === 'string') {\r\n          indent = space;\r\n      }\r\n\r\n// If there is a replacer, it must be a function or an array.\r\n// Otherwise, throw an error.\r\n\r\n      rep = replacer;\r\n      if (replacer && typeof replacer !== 'function' &&\r\n              (typeof replacer !== 'object' ||\r\n              typeof replacer.length !== 'number')) {\r\n          throw new Error('JSON.stringify');\r\n      }\r\n\r\n// Make a fake root object containing our value under the key of ''.\r\n// Return the result of stringifying the value.\r\n\r\n      return str('', {'': value});\r\n  };\r\n\r\n// If the JSON object does not yet have a parse method, give it one.\r\n\r\n  JSON.parse = function (text, reviver) {\r\n  // The parse method takes a text and an optional reviver function, and returns\r\n  // a JavaScript value if the text is a valid JSON text.\r\n\r\n      var j;\r\n\r\n      function walk(holder, key) {\r\n\r\n  // The walk method is used to recursively walk the resulting structure so\r\n  // that modifications can be made.\r\n\r\n          var k, v, value = holder[key];\r\n          if (value && typeof value === 'object') {\r\n              for (k in value) {\r\n                  if (Object.prototype.hasOwnProperty.call(value, k)) {\r\n                      v = walk(value, k);\r\n                      if (v !== undefined) {\r\n                          value[k] = v;\r\n                      } else {\r\n                          delete value[k];\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          return reviver.call(holder, key, value);\r\n      }\r\n\r\n\r\n  // Parsing happens in four stages. In the first stage, we replace certain\r\n  // Unicode characters with escape sequences. JavaScript handles many characters\r\n  // incorrectly, either silently deleting them, or treating them as line endings.\r\n\r\n      text = String(text);\r\n      cx.lastIndex = 0;\r\n      if (cx.test(text)) {\r\n          text = text.replace(cx, function (a) {\r\n              return '\\\\u' +\r\n                  ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\r\n          });\r\n      }\r\n\r\n  // In the second stage, we run the text against regular expressions that look\r\n  // for non-JSON patterns. We are especially concerned with '()' and 'new'\r\n  // because they can cause invocation, and '=' because it can cause mutation.\r\n  // But just to be safe, we want to reject all unexpected forms.\r\n\r\n  // We split the second stage into 4 regexp operations in order to work around\r\n  // crippling inefficiencies in IE's and Safari's regexp engines. First we\r\n  // replace the JSON backslash pairs with '@' (a non-JSON character). Second, we\r\n  // replace all simple value tokens with ']' characters. Third, we delete all\r\n  // open brackets that follow a colon or comma or that begin the text. Finally,\r\n  // we look to see that the remaining characters are only whitespace or ']' or\r\n  // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\r\n\r\n      if (/^[\\],:{}\\s]*$/\r\n              .test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')\r\n                  .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\r\n                  .replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\r\n\r\n  // In the third stage we use the eval function to compile the text into a\r\n  // JavaScript structure. The '{' operator is subject to a syntactic ambiguity\r\n  // in JavaScript: it can begin a block or an object literal. We wrap the text\r\n  // in parens to eliminate the ambiguity.\r\n\r\n          j = eval('(' + text + ')');\r\n\r\n  // In the optional fourth stage, we recursively walk the new structure, passing\r\n  // each name/value pair to a reviver function for possible transformation.\r\n\r\n          return typeof reviver === 'function' ?\r\n              walk({'': j}, '') : j;\r\n      }\r\n\r\n  // If the text is not JSON parseable, then a SyntaxError is thrown.\r\n\r\n      throw new SyntaxError('JSON.parse');\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , typeof JSON !== 'undefined' ? JSON : undefined\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Parser namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  var parser = exports.parser = {};\r\n\r\n  /**\r\n   * Packet types.\r\n   */\r\n\r\n  var packets = parser.packets = [\r\n      'disconnect'\r\n    , 'connect'\r\n    , 'heartbeat'\r\n    , 'message'\r\n    , 'json'\r\n    , 'event'\r\n    , 'ack'\r\n    , 'error'\r\n    , 'noop'\r\n  ];\r\n\r\n  /**\r\n   * Errors reasons.\r\n   */\r\n\r\n  var reasons = parser.reasons = [\r\n      'transport not supported'\r\n    , 'client not handshaken'\r\n    , 'unauthorized'\r\n  ];\r\n\r\n  /**\r\n   * Errors advice.\r\n   */\r\n\r\n  var advice = parser.advice = [\r\n      'reconnect'\r\n  ];\r\n\r\n  /**\r\n   * Shortcuts.\r\n   */\r\n\r\n  var JSON = io.JSON\r\n    , indexOf = io.util.indexOf;\r\n\r\n  /**\r\n   * Encodes a packet.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  parser.encodePacket = function (packet) {\r\n    var type = indexOf(packets, packet.type)\r\n      , id = packet.id || ''\r\n      , endpoint = packet.endpoint || ''\r\n      , ack = packet.ack\r\n      , data = null;\r\n\r\n    switch (packet.type) {\r\n      case 'error':\r\n        var reason = packet.reason ? indexOf(reasons, packet.reason) : ''\r\n          , adv = packet.advice ? indexOf(advice, packet.advice) : '';\r\n\r\n        if (reason !== '' || adv !== '')\r\n          data = reason + (adv !== '' ? ('+' + adv) : '');\r\n\r\n        break;\r\n\r\n      case 'message':\r\n        if (packet.data !== '')\r\n          data = packet.data;\r\n        break;\r\n\r\n      case 'event':\r\n        var ev = { name: packet.name };\r\n\r\n        if (packet.args && packet.args.length) {\r\n          ev.args = packet.args;\r\n        }\r\n\r\n        data = JSON.stringify(ev);\r\n        break;\r\n\r\n      case 'json':\r\n        data = JSON.stringify(packet.data);\r\n        break;\r\n\r\n      case 'connect':\r\n        if (packet.qs)\r\n          data = packet.qs;\r\n        break;\r\n\r\n      case 'ack':\r\n        data = packet.ackId\r\n          + (packet.args && packet.args.length\r\n              ? '+' + JSON.stringify(packet.args) : '');\r\n        break;\r\n    }\r\n\r\n    // construct packet with required fragments\r\n    var encoded = [\r\n        type\r\n      , id + (ack == 'data' ? '+' : '')\r\n      , endpoint\r\n    ];\r\n\r\n    // data fragment is optional\r\n    if (data !== null && data !== undefined)\r\n      encoded.push(data);\r\n\r\n    return encoded.join(':');\r\n  };\r\n\r\n  /**\r\n   * Encodes multiple messages (payload).\r\n   *\r\n   * @param {Array} messages\r\n   * @api private\r\n   */\r\n\r\n  parser.encodePayload = function (packets) {\r\n    var decoded = '';\r\n\r\n    if (packets.length == 1)\r\n      return packets[0];\r\n\r\n    for (var i = 0, l = packets.length; i < l; i++) {\r\n      var packet = packets[i];\r\n      decoded += '\\ufffd' + packet.length + '\\ufffd' + packets[i];\r\n    }\r\n\r\n    return decoded;\r\n  };\r\n\r\n  /**\r\n   * Decodes a packet\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  var regexp = /([^:]+):([0-9]+)?(\\+)?:([^:]+)?:?([\\s\\S]*)?/;\r\n\r\n  parser.decodePacket = function (data) {\r\n    var pieces = data.match(regexp);\r\n\r\n    if (!pieces) return {};\r\n\r\n    var id = pieces[2] || ''\r\n      , data = pieces[5] || ''\r\n      , packet = {\r\n            type: packets[pieces[1]]\r\n          , endpoint: pieces[4] || ''\r\n        };\r\n\r\n    // whether we need to acknowledge the packet\r\n    if (id) {\r\n      packet.id = id;\r\n      if (pieces[3])\r\n        packet.ack = 'data';\r\n      else\r\n        packet.ack = true;\r\n    }\r\n\r\n    // handle different packet types\r\n    switch (packet.type) {\r\n      case 'error':\r\n        var pieces = data.split('+');\r\n        packet.reason = reasons[pieces[0]] || '';\r\n        packet.advice = advice[pieces[1]] || '';\r\n        break;\r\n\r\n      case 'message':\r\n        packet.data = data || '';\r\n        break;\r\n\r\n      case 'event':\r\n        try {\r\n          var opts = JSON.parse(data);\r\n          packet.name = opts.name;\r\n          packet.args = opts.args;\r\n        } catch (e) { }\r\n\r\n        packet.args = packet.args || [];\r\n        break;\r\n\r\n      case 'json':\r\n        try {\r\n          packet.data = JSON.parse(data);\r\n        } catch (e) { }\r\n        break;\r\n\r\n      case 'connect':\r\n        packet.qs = data || '';\r\n        break;\r\n\r\n      case 'ack':\r\n        var pieces = data.match(/^([0-9]+)(\\+)?(.*)/);\r\n        if (pieces) {\r\n          packet.ackId = pieces[1];\r\n          packet.args = [];\r\n\r\n          if (pieces[3]) {\r\n            try {\r\n              packet.args = pieces[3] ? JSON.parse(pieces[3]) : [];\r\n            } catch (e) { }\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'disconnect':\r\n      case 'heartbeat':\r\n        break;\r\n    };\r\n\r\n    return packet;\r\n  };\r\n\r\n  /**\r\n   * Decodes data payload. Detects multiple messages\r\n   *\r\n   * @return {Array} messages\r\n   * @api public\r\n   */\r\n\r\n  parser.decodePayload = function (data) {\r\n    // IE doesn't like data[i] for unicode chars, charAt works fine\r\n    if (data.charAt(0) == '\\ufffd') {\r\n      var ret = [];\r\n\r\n      for (var i = 1, length = ''; i < data.length; i++) {\r\n        if (data.charAt(i) == '\\ufffd') {\r\n          ret.push(parser.decodePacket(data.substr(i + 1).substr(0, length)));\r\n          i += Number(length) + 1;\r\n          length = '';\r\n        } else {\r\n          length += data.charAt(i);\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    } else {\r\n      return [parser.decodePacket(data)];\r\n    }\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.Transport = Transport;\r\n\r\n  /**\r\n   * This is the transport template for all supported transport methods.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  function Transport (socket, sessid) {\r\n    this.socket = socket;\r\n    this.sessid = sessid;\r\n    this.connectErrorCallback = undefined;\r\n    this.isOpened = false;\r\n  };\r\n\r\n  /**\r\n   * Apply EventEmitter mixin.\r\n   */\r\n\r\n  io.util.mixin(Transport, io.EventEmitter);\r\n\r\n  /**\r\n   * Handles the response from the server. When a new response is received\r\n   * it will automatically update the timeout, decode the message and\r\n   * forwards the response to the onMessage function for further processing.\r\n   *\r\n   * @param {String} data Response from the server.\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onData = function (data) {\r\n    this.clearCloseTimeout();\r\n\r\n    // If the connection in currently open (or in a reopening state) reset the close\r\n    // timeout since we have just received data. This check is necessary so\r\n    // that we don't reset the timeout on an explicitly disconnected connection.\r\n    if (this.socket.connected || this.socket.connecting || this.socket.reconnecting) {\r\n      this.setCloseTimeout();\r\n    }\r\n\r\n    if (data !== '') {\r\n      // todo: we should only do decodePayload for xhr transports\r\n      var msgs = io.parser.decodePayload(data);\r\n\r\n      if (msgs && msgs.length) {\r\n        for (var i = 0, l = msgs.length; i < l; i++) {\r\n          this.onPacket(msgs[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Handles packets.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onPacket = function (packet) {\r\n    this.socket.setHeartbeatTimeout();\r\n\r\n    if (packet.type == 'heartbeat') {\r\n      return this.onHeartbeat();\r\n    }\r\n\r\n    if (packet.type == 'connect' && packet.endpoint == '') {\r\n      this.onConnect();\r\n    }\r\n\r\n    if (packet.type == 'error' && packet.advice == 'reconnect') {\r\n      this.isOpened = false;\r\n    }\r\n\r\n    this.socket.onPacket(packet);\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sets close timeout\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.setCloseTimeout = function () {\r\n    if (!this.closeTimeout) {\r\n      var self = this;\r\n\r\n      this.closeTimeout = setTimeout(function () {\r\n        self.onDisconnect();\r\n      }, this.socket.closeTimeout);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called when transport disconnects.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onDisconnect = function () {\r\n    if (this.close && this.isOpened) this.close();\r\n    this.clearTimeouts();\r\n    this.socket.onDisconnect();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Called when transport connects\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onConnect = function () {\r\n    this.socket.onConnect();\r\n    this.connectErrorCallback = undefined;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clears close timeout\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.clearCloseTimeout = function () {\r\n    if (this.closeTimeout) {\r\n      clearTimeout(this.closeTimeout);\r\n      this.closeTimeout = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Clear timeouts\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.clearTimeouts = function () {\r\n    this.clearCloseTimeout();\r\n\r\n    if (this.reopenTimeout) {\r\n      clearTimeout(this.reopenTimeout);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Sends a packet\r\n   *\r\n   * @param {Object} packet object.\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.packet = function (packet) {\r\n    this.send(io.parser.encodePacket(packet));\r\n  };\r\n\r\n  /**\r\n   * Send the received heartbeat message back to server. So the server\r\n   * knows we are still connected.\r\n   *\r\n   * @param {String} heartbeat Heartbeat response from the server.\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onHeartbeat = function (heartbeat) {\r\n    this.packet({ type: 'heartbeat' });\r\n  };\r\n\r\n  /**\r\n   * Called when the transport opens.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onOpen = function () {\r\n    this.isOpened = true;\r\n    this.clearCloseTimeout();\r\n    this.socket.onOpen();\r\n  };\r\n\r\n  /**\r\n   * Notifies the base when the connection with the Socket.IO server\r\n   * has been disconnected.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onClose = function () {\r\n    var self = this;\r\n\r\n    /* FIXME: reopen delay causing a infinit loop\r\n    this.reopenTimeout = setTimeout(function () {\r\n      self.open();\r\n    }, this.socket.options['reopen delay']);*/\r\n\r\n    this.isOpened = false;\r\n    this.socket.onClose();\r\n    this.onDisconnect();\r\n  };\r\n\r\n  /**\r\n   * Generates a connection url based on the Socket.IO URL Protocol.\r\n   * See <https://github.com/learnboost/socket.io-node/> for more details.\r\n   *\r\n   * @returns {String} Connection url\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.prepareUrl = function () {\r\n    var options = this.socket.options;\r\n\r\n    return this.scheme() + '://'\r\n      + options.host + ':' + options.port + '/'\r\n      + options.resource + '/' + io.protocol\r\n      + '/' + this.name + '/' + this.sessid;\r\n  };\r\n\r\n  /**\r\n   * Checks if the transport is ready to start a connection.\r\n   *\r\n   * @param {Socket} socket The socket instance that needs a transport\r\n   * @param {Function} fn The callback\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.ready = function (socket, fn) {\r\n    fn.call(this);\r\n  };\r\n\r\n  /**\r\n   * Clears the event handlers attached on to by specific transport implementations.\r\n   *\r\n   * @api private\r\n   */\r\n  Transport.prototype.clearEventHandlers = function () {\r\n      return this;\r\n  };\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.Socket = Socket;\r\n\r\n  /**\r\n   * Create a new `Socket.IO client` which can establish a persistent\r\n   * connection with a Socket.IO enabled server.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  function Socket (options) {\r\n    this.options = {\r\n        port: 80\r\n      , secure: false\r\n      , document: 'document' in global ? document : false\r\n      , resource: 'socket.io'\r\n      , transports: io.transports.slice()\r\n      , 'connect timeout': 10000\r\n      , 'try multiple transports': true\r\n      , 'reconnect': true\r\n      , 'reconnection delay': 500\r\n      , 'reconnection limit': Infinity\r\n      , 'reopen delay': 3000\r\n      , 'max reconnection attempts': 10\r\n      , 'sync disconnect on unload': true\r\n      , 'auto connect': true\r\n      , 'flash policy port': 10843\r\n    };\r\n\r\n    io.util.merge(this.options, options);\r\n\r\n    this.connected = false;\r\n    this.open = false;\r\n    this.connecting = false;\r\n    this.reconnecting = false;\r\n    this.namespaces = {};\r\n    this.buffer = [];\r\n    this.doBuffer = false;\r\n\r\n    if (this.options['sync disconnect on unload'] &&\r\n        (!this.isXDomain() || io.util.ua.hasCORS)) {\r\n      var self = this;\r\n\r\n      io.util.on(global, 'unload', function () {\r\n        self.disconnectSync();\r\n      }, false);\r\n    }\r\n\r\n    if (this.options['auto connect']) {\r\n      this.connect();\r\n    }\r\n};\r\n\r\n  /**\r\n   * Apply EventEmitter mixin.\r\n   */\r\n\r\n  io.util.mixin(Socket, io.EventEmitter);\r\n\r\n  /**\r\n   * Returns a namespace listener/emitter for this socket\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.of = function (name) {\r\n    if (!this.namespaces[name]) {\r\n      this.namespaces[name] = new io.SocketNamespace(this, name);\r\n\r\n      if (name !== '') {\r\n        this.namespaces[name].packet({ type: 'connect' });\r\n      }\r\n    }\r\n\r\n    return this.namespaces[name];\r\n  };\r\n\r\n  /**\r\n   * Emits the given event to the Socket and all namespaces\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.publish = function () {\r\n    this.emit.apply(this, arguments);\r\n\r\n    var nsp;\r\n\r\n    for (var i in this.namespaces) {\r\n      if (this.namespaces.hasOwnProperty(i)) {\r\n        nsp = this.of(i);\r\n        nsp.$emit.apply(nsp, arguments);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Performs the handshake\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  function empty () { };\r\n\r\n  Socket.prototype.handshake = function (fn) {\r\n    var self = this\r\n      , options = this.options;\r\n\r\n    function complete (data) {\r\n      if (data instanceof Error) {\r\n        self.onError(data.message);\r\n      } else {\r\n        fn.apply(null, data.split(':'));\r\n      }\r\n    };\r\n\r\n    var url = [\r\n          'http' + (options.secure ? 's' : '') + ':/'\r\n        , options.host + ':' + options.port\r\n        , options.resource\r\n        , io.protocol\r\n        , io.util.query(this.options.query, 't=' + +new Date)\r\n      ].join('/');\r\n\r\n    if (this.isXDomain() && !io.util.ua.hasCORS) {\r\n      var insertAt = document.getElementsByTagName('script')[0]\r\n        , script = document.createElement('script');\r\n\r\n      script.src = url + '&jsonp=' + io.j.length;\r\n      insertAt.parentNode.insertBefore(script, insertAt);\r\n\r\n      io.j.push(function (data) {\r\n        complete(data);\r\n        script.parentNode.removeChild(script);\r\n      });\r\n    } else {\r\n      var xhr = io.util.request();\r\n\r\n      xhr.open('GET', url, true);\r\n      xhr.withCredentials = true;\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n          xhr.onreadystatechange = empty;\r\n\r\n          if (xhr.status == 200) {\r\n            complete(xhr.responseText);\r\n          } else {\r\n            !self.reconnecting && self.onError(xhr.responseText);\r\n          }\r\n        }\r\n      };\r\n      xhr.send(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Find an available transport based on the options supplied in the constructor.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.getTransport = function (override) {\r\n    var transports = override || this.transports, match;\r\n\r\n    for (var i = 0, transport; transport = transports[i]; i++) {\r\n      if (io.Transport[transport]\r\n        && io.Transport[transport].check(this)\r\n        && (!this.isXDomain() || io.Transport[transport].xdomainCheck())) {\r\n        return new io.Transport[transport](this, this.sessionid);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Connects to the server.\r\n   *\r\n   * @param {Function} [fn] Callback.\r\n   * @returns {io.Socket}\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.connect = function (fn) {\r\n    if (this.connecting) {\r\n      return this;\r\n    }\r\n\r\n    var self = this;\r\n\r\n    this.handshake(function (sid, heartbeat, close, transports) {\r\n      // Params come from response's body - it's splitted by ':'\r\n      // example: 1178beba4026e2c7-48e62d038b18f416:85:85:websocket,xhr-polling,jsonp-polling\r\n      self.sessionid = sid;\r\n      // Add two seconds, so connection is closed by server, not client - otherwise\r\n      // there will be a onSocketDisconnect event which will start health check, etc\r\n      // This can happen if server returns close/heartbeat timeout equal to 40 which is server's timeout to\r\n      // close long poll connection, in such case client can close connection before server response with empty\r\n      // response and client goes to health check. Server can return such timeout if client send too small ping timeout\r\n      // during handshake\r\n      self.closeTimeout = close * 1000 + 2000;\r\n      self.heartbeatTimeout = heartbeat * 1000 + 2000;\r\n      self.transports = transports ? io.util.intersect(\r\n          transports.split(',')\r\n        , self.options.transports\r\n      ) : self.options.transports;\r\n\r\n      self.setHeartbeatTimeout();\r\n      self.remainingTransports = self.transports.slice(0);\r\n\r\n      function tryNextTransport() {\r\n        if (!self.connected) {\r\n          self.connecting = false;\r\n          clearTimeout(self.connectTimeoutTimer);\r\n\r\n          if (self.options['try multiple transports']) {\r\n            while (self.remainingTransports.length > 0\r\n                   && self.remainingTransports.splice(0,1)[0] != self.transport.name) {}\r\n\r\n            if (self.remainingTransports.length){\r\n              connect(self.remainingTransports);\r\n            } else {\r\n              self.publish('connect_failed');\r\n            }\r\n          } else {\r\n            self.publish('connect_failed');\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      function connect (transports){\r\n        if (self.transport) {\r\n            self.transport.clearTimeouts();\r\n            self.transport.clearEventHandlers();\r\n        }\r\n\r\n        self.transport = self.getTransport(transports);\r\n        if (!self.transport) return self.publish('connect_failed');\r\n\r\n        // once the transport is ready (i.e. page is fully loaded)\r\n        self.transport.ready(self, function () {\r\n          self.connecting = true;\r\n          self.publish('connecting', self.transport.name);\r\n          self.transport.open(tryNextTransport);\r\n\r\n          if (self.options['connect timeout']) {\r\n            self.connectTimeoutTimer = setTimeout(function () {\r\n              tryNextTransport();\r\n            }, self.options['connect timeout']);\r\n          }\r\n        });\r\n      }\r\n\r\n      connect(self.transports);\r\n\r\n      self.once('connect', function (){\r\n        clearTimeout(self.connectTimeoutTimer);\r\n\r\n        fn && typeof fn == 'function' && fn();\r\n      });\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Clears and sets a new heartbeat timeout using the value given by the\r\n   * server during the handshake.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.setHeartbeatTimeout = function () {\r\n    clearTimeout(this.heartbeatTimeoutTimer);\r\n\r\n    var self = this;\r\n    this.heartbeatTimeoutTimer = setTimeout(function () {\r\n      self.transport.onClose();\r\n    }, this.heartbeatTimeout);\r\n  };\r\n\r\n  /**\r\n   * Sends a message.\r\n   *\r\n   * @param {Object} data packet.\r\n   * @returns {io.Socket}\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.packet = function (data) {\r\n    if (this.connected && !this.doBuffer) {\r\n      this.transport.packet(data);\r\n    } else {\r\n      this.buffer.push(data);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sets buffer state\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.setBuffer = function (v) {\r\n    this.doBuffer = v;\r\n\r\n    if (!v && this.connected && this.buffer.length) {\r\n      this.transport.payload(this.buffer);\r\n      this.buffer = [];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Disconnect the established connect.\r\n   *\r\n   * @returns {io.Socket}\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.disconnect = function () {\r\n    if (this.connected || this.connecting) {\r\n      if (this.open) {\r\n        this.of('').packet({ type: 'disconnect' });\r\n      }\r\n\r\n      // handle disconnection immediately\r\n      this.onDisconnect('booted');\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Disconnects the socket with a sync XHR.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.disconnectSync = function () {\r\n    // ensure disconnection\r\n    var xhr = io.util.request()\r\n      , uri = this.resource + '/' + io.protocol + '/' + this.sessionid;\r\n\r\n    xhr.open('GET', uri, true);\r\n\r\n    // handle disconnection immediately\r\n    this.onDisconnect('booted');\r\n  };\r\n\r\n  /**\r\n   * Check if we need to use cross domain enabled transports. Cross domain would\r\n   * be a different port or different domain name.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.isXDomain = function () {\r\n\r\n    var port = global.location.port ||\r\n      ('https:' == global.location.protocol ? 443 : 80);\r\n\r\n    return this.options.host !== global.location.hostname\r\n      || this.options.port != port;\r\n  };\r\n\r\n  /**\r\n   * Called upon handshake.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onConnect = function () {\r\n    if (!this.connected) {\r\n      this.connected = true;\r\n      this.connecting = false;\r\n      if (!this.doBuffer) {\r\n        // make sure to flush the buffer\r\n        this.setBuffer(false);\r\n      }\r\n      this.emit('connect');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called when the transport opens\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onOpen = function () {\r\n    this.open = true;\r\n  };\r\n\r\n  /**\r\n   * Called when the transport closes.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onClose = function () {\r\n    this.open = false;\r\n    clearTimeout(this.heartbeatTimeoutTimer);\r\n  };\r\n\r\n  /**\r\n   * Called when the transport first opens a connection\r\n   *\r\n   * @param text\r\n   */\r\n\r\n  Socket.prototype.onPacket = function (packet) {\r\n    this.of(packet.endpoint).onPacket(packet);\r\n  };\r\n\r\n  /**\r\n   * Handles an error.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onError = function (err) {\r\n    if (err && err.advice) {\r\n      if (err.advice === 'reconnect' && (this.connected || this.connecting)) {\r\n        this.disconnect();\r\n        if (this.options.reconnect) {\r\n          this.reconnect();\r\n        }\r\n      }\r\n    }\r\n\r\n    this.publish('error', err && err.reason ? err.reason : err);\r\n  };\r\n\r\n  /**\r\n   * Called when the transport disconnects.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onDisconnect = function (reason) {\r\n    var wasConnected = this.connected\r\n      , wasConnecting = this.connecting;\r\n\r\n    this.connected = false;\r\n    this.connecting = false;\r\n    this.open = false;\r\n\r\n    if (wasConnected || wasConnecting) {\r\n      this.transport.close();\r\n      this.transport.clearTimeouts();\r\n      if (wasConnected) {\r\n        this.publish('disconnect', reason);\r\n\r\n        if ('booted' != reason && this.options.reconnect && !this.reconnecting) {\r\n          this.reconnect();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called upon reconnection.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.reconnect = function () {\r\n    this.reconnecting = true;\r\n    this.reconnectionAttempts = 0;\r\n    this.reconnectionDelay = this.options['reconnection delay'];\r\n\r\n    var self = this\r\n      , maxAttempts = this.options['max reconnection attempts']\r\n      , tryMultiple = this.options['try multiple transports']\r\n      , limit = this.options['reconnection limit'];\r\n\r\n    function reset () {\r\n      if (self.connected) {\r\n        for (var i in self.namespaces) {\r\n          if (self.namespaces.hasOwnProperty(i) && '' !== i) {\r\n              self.namespaces[i].packet({ type: 'connect' });\r\n          }\r\n        }\r\n        self.publish('reconnect', self.transport.name, self.reconnectionAttempts);\r\n      }\r\n\r\n      clearTimeout(self.reconnectionTimer);\r\n\r\n      self.removeListener('connect_failed', maybeReconnect);\r\n      self.removeListener('connect', maybeReconnect);\r\n\r\n      self.reconnecting = false;\r\n\r\n      delete self.reconnectionAttempts;\r\n      delete self.reconnectionDelay;\r\n      delete self.reconnectionTimer;\r\n      delete self.redoTransports;\r\n\r\n      self.options['try multiple transports'] = tryMultiple;\r\n    };\r\n\r\n    function maybeReconnect () {\r\n      if (!self.reconnecting) {\r\n        return;\r\n      }\r\n\r\n      if (self.connected) {\r\n        return reset();\r\n      };\r\n\r\n      if (self.connecting && self.reconnecting) {\r\n        return self.reconnectionTimer = setTimeout(maybeReconnect, 1000);\r\n      }\r\n\r\n      if (self.reconnectionAttempts++ >= maxAttempts) {\r\n        if (!self.redoTransports) {\r\n          self.on('connect_failed', maybeReconnect);\r\n          self.options['try multiple transports'] = true;\r\n          self.transport = self.getTransport();\r\n          self.redoTransports = true;\r\n          self.connect();\r\n        } else {\r\n          self.publish('reconnect_failed');\r\n          reset();\r\n        }\r\n      } else {\r\n        if (self.reconnectionDelay < limit) {\r\n          self.reconnectionDelay *= 2; // exponential back off\r\n        }\r\n\r\n        self.connect();\r\n        self.publish('reconnecting', self.reconnectionDelay, self.reconnectionAttempts);\r\n        self.reconnectionTimer = setTimeout(maybeReconnect, self.reconnectionDelay);\r\n      }\r\n    };\r\n\r\n    this.options['try multiple transports'] = false;\r\n    this.reconnectionTimer = setTimeout(maybeReconnect, this.reconnectionDelay);\r\n\r\n    this.on('connect', maybeReconnect);\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.SocketNamespace = SocketNamespace;\r\n\r\n  /**\r\n   * Socket namespace constructor.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  function SocketNamespace (socket, name) {\r\n    this.socket = socket;\r\n    this.name = name || '';\r\n    this.flags = {};\r\n    this.json = new Flag(this, 'json');\r\n    this.ackPackets = 0;\r\n    this.acks = {};\r\n  };\r\n\r\n  /**\r\n   * Apply EventEmitter mixin.\r\n   */\r\n\r\n  io.util.mixin(SocketNamespace, io.EventEmitter);\r\n\r\n  /**\r\n   * Copies emit since we override it\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.$emit = io.EventEmitter.prototype.emit;\r\n\r\n  /**\r\n   * Creates a new namespace, by proxying the request to the socket. This\r\n   * allows us to use the synax as we do on the server.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  SocketNamespace.prototype.of = function () {\r\n    return this.socket.of.apply(this.socket, arguments);\r\n  };\r\n\r\n  /**\r\n   * Sends a packet.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.packet = function (packet) {\r\n    packet.endpoint = this.name;\r\n    this.socket.packet(packet);\r\n    this.flags = {};\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sends a message\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  SocketNamespace.prototype.send = function (data, fn) {\r\n    var packet = {\r\n        type: this.flags.json ? 'json' : 'message'\r\n      , data: data\r\n    };\r\n\r\n    if ('function' == typeof fn) {\r\n      packet.id = ++this.ackPackets;\r\n      packet.ack = true;\r\n      this.acks[packet.id] = fn;\r\n    }\r\n\r\n    return this.packet(packet);\r\n  };\r\n\r\n  /**\r\n   * Emits an event\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  SocketNamespace.prototype.emit = function (name) {\r\n    var args = Array.prototype.slice.call(arguments, 1)\r\n      , lastArg = args[args.length - 1]\r\n      , packet = {\r\n            type: 'event'\r\n          , name: name\r\n        };\r\n\r\n    if ('function' == typeof lastArg) {\r\n      packet.id = ++this.ackPackets;\r\n      packet.ack = 'data';\r\n      this.acks[packet.id] = lastArg;\r\n      args = args.slice(0, args.length - 1);\r\n    }\r\n\r\n    packet.args = args;\r\n\r\n    return this.packet(packet);\r\n  };\r\n\r\n  /**\r\n   * Disconnects the namespace\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.disconnect = function () {\r\n    if (this.name === '') {\r\n      this.socket.disconnect();\r\n    } else {\r\n      this.packet({ type: 'disconnect' });\r\n      this.$emit('disconnect');\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Handles a packet\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.onPacket = function (packet) {\r\n    var self = this;\r\n\r\n    function ack () {\r\n      self.packet({\r\n          type: 'ack'\r\n        , args: io.util.toArray(arguments)\r\n        , ackId: packet.id\r\n      });\r\n    };\r\n\r\n    switch (packet.type) {\r\n      case 'connect':\r\n        this.$emit('connect');\r\n        break;\r\n\r\n      case 'disconnect':\r\n        if (this.name === '') {\r\n          this.socket.onDisconnect(packet.reason || 'booted');\r\n        } else {\r\n          this.$emit('disconnect', packet.reason);\r\n        }\r\n        break;\r\n\r\n      case 'message':\r\n      case 'json':\r\n        var params = ['message', packet.data];\r\n\r\n        if (packet.ack == 'data') {\r\n          params.push(ack);\r\n        } else if (packet.ack) {\r\n          this.packet({ type: 'ack', ackId: packet.id });\r\n        }\r\n\r\n        this.$emit.apply(this, params);\r\n        break;\r\n\r\n      case 'event':\r\n        var params = [packet.name].concat(packet.args);\r\n\r\n        if (packet.ack == 'data')\r\n          params.push(ack);\r\n\r\n        this.$emit.apply(this, params);\r\n        break;\r\n\r\n      case 'ack':\r\n        if (this.acks[packet.ackId]) {\r\n          this.acks[packet.ackId].apply(this, packet.args);\r\n          delete this.acks[packet.ackId];\r\n        }\r\n        break;\r\n\r\n      case 'error':\r\n        if (packet.advice){\r\n          this.socket.onError(packet);\r\n        } else {\r\n          if (packet.reason == 'unauthorized') {\r\n            this.$emit('connect_failed', packet.reason);\r\n          } else {\r\n            this.$emit('error', packet.reason);\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Flag interface.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  function Flag (nsp, name) {\r\n    this.namespace = nsp;\r\n    this.name = name;\r\n  };\r\n\r\n  /**\r\n   * Send a message\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Flag.prototype.send = function () {\r\n    this.namespace.flags[this.name] = true;\r\n    this.namespace.send.apply(this.namespace, arguments);\r\n  };\r\n\r\n  /**\r\n   * Emit an event\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Flag.prototype.emit = function () {\r\n    this.namespace.flags[this.name] = true;\r\n    this.namespace.emit.apply(this.namespace, arguments);\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.websocket = WS;\r\n\r\n  /**\r\n   * The WebSocket transport uses the HTML5 WebSocket API to establish an\r\n   * persistent connection with the Socket.IO server. This transport will also\r\n   * be inherited by the FlashSocket fallback as it provides a API compatible\r\n   * polyfill for the WebSockets.\r\n   *\r\n   * @constructor\r\n   * @extends {io.Transport}\r\n   * @api public\r\n   */\r\n\r\n  function WS (socket) {\r\n    io.Transport.apply(this, arguments);\r\n  };\r\n\r\n  /**\r\n   * Inherits from Transport.\r\n   */\r\n\r\n  io.util.inherit(WS, io.Transport);\r\n\r\n  /**\r\n   * Transport name\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.name = 'websocket';\r\n\r\n  function empty() { };\r\n\r\n  /**\r\n   * Initializes a new `WebSocket` connection with the Socket.IO server. We attach\r\n   * all the appropriate listeners to handle the responses from the server.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.open = function (connectErrorCallback) {\r\n    var query = io.util.query(this.socket.options.query)\r\n      , self = this\r\n      , Socket\r\n\r\n    this.connectErrorCallback = connectErrorCallback;\r\n\r\n    if (!Socket) {\r\n      Socket = global.MozWebSocket || global.WebSocket;\r\n    }\r\n\r\n    this.websocket = new Socket(this.prepareUrl() + query);\r\n\r\n    this.websocket.onopen = function () {\r\n      self.onOpen();\r\n      self.socket.setBuffer(false);\r\n    };\r\n    this.websocket.onmessage = function (ev) {\r\n      self.onData(ev.data);\r\n    };\r\n    this.websocket.onclose = function () {\r\n      self.onClose();\r\n      self.socket.setBuffer(true);\r\n    };\r\n    this.websocket.onerror = function (e) {\r\n      self.onError(e);\r\n    };\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Send a message to the Socket.IO server. The message will automatically be\r\n   * encoded in the correct message format.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.send = function (data) {\r\n    this.websocket.send(data);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Payload\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  WS.prototype.payload = function (arr) {\r\n    for (var i = 0, l = arr.length; i < l; i++) {\r\n      this.packet(arr[i]);\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Disconnect the established `WebSocket` connection.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.close = function () {\r\n    this.websocket.close();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Handle the errors that `WebSocket` might be giving when we\r\n   * are attempting to connect or send messages.\r\n   *\r\n   * @param {Error} e The error.\r\n   * @api private\r\n   */\r\n\r\n  WS.prototype.onError = function (e) {\r\n      if (this.connectErrorCallback !== undefined) {\r\n        this.connectErrorCallback();\r\n        this.connectErrorCallback = undefined;\r\n      }\r\n      this.socket.onError(e);\r\n  };\r\n\r\n  /**\r\n   * Returns the appropriate scheme for the URI generation.\r\n   *\r\n   * @api private\r\n   */\r\n  WS.prototype.scheme = function () {\r\n    return this.socket.options.secure ? 'wss' : 'ws';\r\n  };\r\n\r\n  /**\r\n   * Checks if the browser has support for native `WebSockets` and that\r\n   * it's not the polyfill created for the FlashSocket transport.\r\n   *\r\n   * @return {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  WS.check = function () {\r\n    return ('WebSocket' in global && !('__addTask' in WebSocket))\r\n          || 'MozWebSocket' in global;\r\n  };\r\n\r\n  /**\r\n   * Check if the `WebSocket` transport support cross domain communications.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  WS.xdomainCheck = function () {\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Clears the event listeners attached to the `WebSocket` transport object.\r\n   *\r\n   * @api private\r\n   */\r\n  WS.prototype.clearEventHandlers = function() {\r\n      if (this.websocket) {\r\n          this.websocket.onopen = this.websocket.onmessage = this.websocket.onclose = this.websocket.onerror = empty;\r\n      }\r\n      return this;\r\n  };\r\n\r\n  /**\r\n   * Add the transport to your public io.transports array.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.transports.push('websocket');\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  exports.XHR = XHR;\r\n\r\n  /**\r\n   * XHR constructor\r\n   *\r\n   * @costructor\r\n   * @api public\r\n   */\r\n\r\n  function XHR (socket) {\r\n    if (!socket) return;\r\n\r\n    io.Transport.apply(this, arguments);\r\n    this.sendBuffer = [];\r\n  };\r\n\r\n  /**\r\n   * Inherits from Transport.\r\n   */\r\n\r\n  io.util.inherit(XHR, io.Transport);\r\n\r\n  /**\r\n   * Establish a connection\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  XHR.prototype.open = function () {\r\n    this.socket.setBuffer(false);\r\n    this.onOpen();\r\n    this.get();\r\n\r\n    // we need to make sure the request succeeds since we have no indication\r\n    // whether the request opened or not until it succeeded.\r\n    this.setCloseTimeout();\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Check if we need to send data to the Socket.IO server, if we have data in our\r\n   * buffer we encode it and forward it to the `post` method.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHR.prototype.payload = function (payload) {\r\n    var msgs = [];\r\n\r\n    for (var i = 0, l = payload.length; i < l; i++) {\r\n      msgs.push(io.parser.encodePacket(payload[i]));\r\n    }\r\n\r\n    this.send(io.parser.encodePayload(msgs));\r\n  };\r\n\r\n  /**\r\n   * Send data to the Socket.IO server.\r\n   *\r\n   * @param data The message\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  XHR.prototype.send = function (data) {\r\n    this.post(data);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Posts a encoded message to the Socket.IO server.\r\n   *\r\n   * @param {String} data A encoded message.\r\n   * @api private\r\n   */\r\n\r\n  function empty () { };\r\n\r\n  XHR.prototype.post = function (data) {\r\n    var self = this;\r\n    this.socket.setBuffer(true);\r\n\r\n    this.sendXHR = this.request('POST');\r\n\r\n    function stateChange () {\r\n      if (this.readyState == 4) {\r\n        this.onreadystatechange = empty;\r\n        self.posting = false;\r\n\r\n        if (this.status == 200){\r\n          self.socket.setBuffer(false);\r\n          clearTimeout(self.sendXHR.ackTimeoutTimer);\r\n        } else {\r\n          self.onClose();\r\n        }\r\n      }\r\n    }\r\n\r\n    function onload () {\r\n      this.onload = empty;\r\n      self.socket.setBuffer(false);\r\n    };\r\n\r\n    if (global.XDomainRequest && this.sendXHR instanceof XDomainRequest) {\r\n      this.sendXHR.onload = this.sendXHR.onerror = onload;\r\n    } else {\r\n      this.sendXHR.onreadystatechange = stateChange;\r\n    }\r\n\r\n    this.sendXHR.send(data);\r\n    self.sendXHR.ackTimeoutTimer = setTimeout(function () {\r\n      self.onClose();\r\n    }, self.socket.options.ackTimeoutMs);\r\n  };\r\n\r\n  /**\r\n   * Disconnects the established `XHR` connection.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  XHR.prototype.close = function () {\r\n    this.onClose();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Generates a configured XHR request\r\n   *\r\n   * @param {String} url The url that needs to be requested.\r\n   * @param {String} method The method the request should use.\r\n   * @returns {XMLHttpRequest}\r\n   * @api private\r\n   */\r\n\r\n  XHR.prototype.request = function (method) {\r\n    var req = io.util.request(this.socket.isXDomain())\r\n      , query = io.util.query(this.socket.options.query, 't=' + +new Date);\r\n\r\n    req.open(method || 'GET', this.prepareUrl() + query, true);\r\n\r\n    if (method == 'POST') {\r\n      try {\r\n        if (req.setRequestHeader) {\r\n          req.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\r\n        } else {\r\n          // XDomainRequest\r\n          req.contentType = 'text/plain';\r\n        }\r\n      } catch (e) {}\r\n    }\r\n\r\n    return req;\r\n  };\r\n\r\n  /**\r\n   * Returns the scheme to use for the transport URLs.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHR.prototype.scheme = function () {\r\n    return this.socket.options.secure ? 'https' : 'http';\r\n  };\r\n\r\n  /**\r\n   * Check if the XHR transports are supported\r\n   *\r\n   * @param {Boolean} xdomain Check if we support cross domain requests.\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  XHR.check = function (socket, xdomain) {\r\n\r\n    try {\r\n      var request = io.util.request(xdomain),\r\n          usesXDomReq = (global.XDomainRequest && request instanceof XDomainRequest),\r\n          socketProtocol = (socket && socket.options && socket.options.secure ? 'https:' : 'http:'),\r\n          isXProtocol = (socketProtocol != global.location.protocol);\r\n      if (request && !(usesXDomReq && isXProtocol)) {\r\n        return true;\r\n      }\r\n    } catch(e) {}\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Check if the XHR transport supports cross domain requests.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  XHR.xdomainCheck = function () {\r\n    return XHR.check(null, true);\r\n  };\r\n\r\n  /**\r\n   * Clears the event listeners attached to the XHR transport object.\r\n   *\r\n   * @api private\r\n   */\r\n  XHR.prototype.clearEventHandlers = function () {\r\n      if (this.sendXHR) {\r\n          this.sendXHR.onreadystatechange = this.sendXHR.onload = empty;\r\n      }\r\n      return this;\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports['xhr-polling'] = XHRPolling;\r\n\r\n  /**\r\n   * The XHR-polling transport uses long polling XHR requests to create a\r\n   * \"persistent\" connection with the server.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  function XHRPolling () {\r\n    io.Transport.XHR.apply(this, arguments);\r\n  };\r\n\r\n  /**\r\n   * Inherits from XHR transport.\r\n   */\r\n\r\n  io.util.inherit(XHRPolling, io.Transport.XHR);\r\n\r\n  /**\r\n   * Merge the properties from XHR transport\r\n   */\r\n\r\n  io.util.merge(XHRPolling, io.Transport.XHR);\r\n\r\n  /**\r\n   * Transport name\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  XHRPolling.prototype.name = 'xhr-polling';\r\n\r\n  /**\r\n   * Establish a connection, for iPhone and Android this will be done once the page\r\n   * is loaded.\r\n   *\r\n   * @returns {Transport} Chaining.\r\n   * @api public\r\n   */\r\n\r\n  XHRPolling.prototype.open = function (connectErrorCallback) {\r\n    var self = this;\r\n\r\n    self.connectErrorCallback = connectErrorCallback;\r\n\r\n    io.Transport.XHR.prototype.open.call(self);\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Starts a XHR request to wait for incoming messages.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  function empty () {};\r\n\r\n  XHRPolling.prototype.get = function () {\r\n    if (!this.isOpened) return;\r\n\r\n    var self = this;\r\n\r\n    function stateChange () {\r\n      if (this.readyState == 4) {\r\n        this.onreadystatechange = empty;\r\n\r\n        if (this.status == 200) {\r\n          self.connectErrorCallback = undefined;\r\n          self.onData(this.responseText);\r\n          self.get();\r\n        } else {\r\n          self.onClose();\r\n\r\n          if (self.connectErrorCallback !== undefined) {\r\n            self.connectErrorCallback();\r\n            self.connectErrorCallback = undefined;\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    function onload () {\r\n      self.connectErrorCallback = undefined;\r\n      this.onload = empty;\r\n      this.onerror = empty;\r\n      self.onData(this.responseText);\r\n      self.get();\r\n    };\r\n\r\n    function onerror () {\r\n      self.onClose();\r\n\r\n      if (self.connectErrorCallback !== undefined) {\r\n        self.connectErrorCallback();\r\n        self.connectErrorCallback = undefined;\r\n      }\r\n    };\r\n\r\n    this.xhr = this.request();\r\n\r\n    if (global.XDomainRequest && this.xhr instanceof XDomainRequest) {\r\n      this.xhr.onload = onload;\r\n      this.xhr.onerror = onerror;\r\n    } else {\r\n      this.xhr.onreadystatechange = stateChange;\r\n    }\r\n\r\n    this.xhr.send(null);\r\n  };\r\n\r\n  /**\r\n   * Handle the unclean close behavior.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHRPolling.prototype.onClose = function () {\r\n    io.Transport.XHR.prototype.onClose.call(this);\r\n\r\n    if (this.xhr) {\r\n      this.xhr.onreadystatechange = this.xhr.onload = this.xhr.onerror = empty;\r\n      try {\r\n        this.xhr.abort();\r\n      } catch(e){}\r\n      this.xhr = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Webkit based browsers show a infinit spinner when you start a XHR request\r\n   * before the browsers onload event is called so we need to defer opening of\r\n   * the transport until the onload event is called. Wrapping the cb in our\r\n   * defer method solve this.\r\n   *\r\n   * @param {Socket} socket The socket instance that needs a transport\r\n   * @param {Function} fn The callback\r\n   * @api private\r\n   */\r\n\r\n  XHRPolling.prototype.ready = function (socket, fn) {\r\n    var self = this;\r\n\r\n    io.util.defer(function () {\r\n      fn.call(self);\r\n    });\r\n  };\r\n\r\n   /**\r\n   * Clears the event listeners attached to the XHR transport object.\r\n   *\r\n   * @api private\r\n   */\r\n  XHRPolling.prototype.clearEventHandlers = function () {\r\n      io.Transport.XHR.prototype.clearEventHandlers.call(this);\r\n\r\n      if (this.xhr) {\r\n          this.xhr.onreadystatechange = this.xhr.onload = this.xhr.onerror = empty;\r\n      }\r\n      return this;\r\n  }\r\n\r\n  /**\r\n   * Add the transport to your public io.transports array.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.transports.push('xhr-polling');\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n\r\nexports.io = io;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib_temp/socket.io.js\n// module id = 10\n// module chunks = 0","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.0.5\n */\n\n\n\n// WEBPACK FOOTER //\n// config/versionTemplate.txt","'use strict';\n\nexport { objectOrFunction };\nexport { isFunction };\nexport { isMaybeThenable };\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nfunction isMaybeThenable(x) {\n  return typeof x === 'object' && x !== null;\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\nexport { isArray };\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/utils.js","'use strict';\n\nexport { setScheduler };\nexport { setAsap };\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nexport { asap };\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/asap.js","'use strict';\n\nexport default then;\nimport { invokeCallback, subscribe, FULFILLED, REJECTED, noop, makePromise, PROMISE_ID } from './-internal';\n\nimport { asap } from './asap';\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/then.js","'use strict';\n\nexport default resolve;\nimport { noop, resolve as _resolve } from '../-internal';\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/promise/resolve.js","'use strict';\n\nimport { objectOrFunction, isFunction } from './utils';\n\nimport { asap } from './asap';\n\nimport originalThen from './then';\nimport originalResolve from './promise/resolve';\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nexport { PROMISE_ID };\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then) {\n  if (maybeThenable.constructor === promise.constructor && then === originalThen && maybeThenable.constructor.resolve === originalResolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then === GET_THEN_ERROR) {\n      reject(promise, GET_THEN_ERROR.error);\n    } else if (then === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then)) {\n      handleForeignThenable(promise, maybeThenable, then);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      resolve(promise, value);\n    } else if (failed) {\n      reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nexport { nextId, makePromise, getThen, noop, resolve, reject, fulfill, subscribe, publish, publishRejection, initializePromise, invokeCallback, FULFILLED, REJECTED, PENDING, handleMaybeThenable };\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/-internal.js","'use strict';\n\nimport { isArray, isMaybeThenable } from './utils';\n\nimport { noop, reject, fulfill, subscribe, FULFILLED, REJECTED, PENDING, getThen, handleMaybeThenable } from './-internal';\n\nimport then from './then';\nimport Promise from './promise';\nimport originalResolve from './promise/resolve';\nimport originalThen from './then';\nimport { makePromise, PROMISE_ID } from './-internal';\n\nexport default Enumerator;\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve = c.resolve;\n\n  if (resolve === originalResolve) {\n    var _then = getThen(entry);\n\n    if (_then === originalThen && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve) {\n        return resolve(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/enumerator.js","'use strict';\n\nexport default all;\nimport Enumerator from '../enumerator';\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/promise/all.js","\"use strict\";\n\nexport default race;\nimport { isArray } from \"../utils\";\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/promise/race.js","'use strict';\n\nexport default reject;\nimport { noop, reject as _reject } from '../-internal';\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/promise/reject.js","'use strict';\n\nexport default Promise;\n\nimport { isFunction } from './utils';\n\nimport { noop, nextId, PROMISE_ID, initializePromise } from './-internal';\n\nimport { asap, setAsap, setScheduler } from './asap';\n\nimport all from './promise/all';\nimport race from './promise/race';\nimport Resolve from './promise/resolve';\nimport Reject from './promise/reject';\nimport then from './then';\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = Resolve;\nPromise.reject = Reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/promise.js","/*global self*/\n'use strict';\n\nexport default polyfill;\nimport Promise from './promise';\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/polyfill.js","'use strict';\n\nimport Promise from './es6-promise/promise';\nimport polyfill from './es6-promise/polyfill';\n\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\nexport default Promise;\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 12\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 13\n// module chunks = 0","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n// tslint:disable:no-any\r\n// tslint:disable:no-unsafe-any\r\n// tslint:disable:max-classes-per-file\r\n// tslint:disable:variable-name\r\n\r\nimport { Timespan, toJson } from './Common';\r\nimport { CLIENT_VERSION } from './Constants';\r\nimport { HttpHeaders, ITelemetrySender, LogProvider, TrouterTelemetrySettings } from './Interfaces';\r\nimport { IClientInfo, ITrouterRequest, ServerState } from './InternalInterfaces';\r\nimport { Logger } from './Logger';\r\n\r\n/**\r\n * Data for trouter response\r\n */\r\nexport class ResponseData {\r\n    public status: number = 200;\r\n    public headers?: HttpHeaders = {};\r\n    public body: string = '';\r\n    public sentTS: number | undefined;\r\n\r\n    public constructor(public id: number) { }\r\n}\r\n\r\n// Possible telemetry events\r\nexport enum ClientEventName {\r\n    Connected = 'trouter_js_client_connected',\r\n    Disconnected = 'trouter_js_client_disconnected',\r\n    Error = 'trouter_js_client_error',\r\n    Progress = 'trouter_js_client_progress',\r\n    Response = 'trouter_js_client_response',\r\n    Request = 'trouter_js_client_request',\r\n    CheckConnection = 'trouter_js_client_check_connection',\r\n    Registration = 'trouter_js_client_registration',\r\n    Unregistration = 'trouter_js_client_unregistration'\r\n}\r\nexport type EnabledEvents = {[key in ClientEventName]: boolean};\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface IAllTelemetryEventsSettings extends EnabledEvents {\r\n}\r\n\r\n/**\r\n * Stores one step of connection process\r\n */\r\nexport class TrackerStep {\r\n    public constructor(\r\n        public stepName: string,\r\n        public operation: string,\r\n        public delta: number,\r\n        public ts: number,\r\n        public error?: string\r\n    ) { }\r\n}\r\n\r\n/**\r\n * Base class for something that can be used as a property bag\r\n */\r\nexport class Properties {\r\n    [index: string]: number | string | boolean | { [key: number]: boolean } | undefined;\r\n}\r\n\r\n/**\r\n * Information about connection\r\n */\r\nclass ConnectedInfo {\r\n    public numberOfPingReplies: number = 0;\r\n    public connectedTimestamp: number = 0;\r\n    public isNewUrl: boolean = false;\r\n    public transportType: string = '';\r\n    public connectionNumber: number = 0;\r\n}\r\n\r\n/**\r\n * Default values for IEventLogSettings\r\n */\r\nclass EventLogSettings implements TrouterTelemetrySettings, IAllTelemetryEventsSettings {\r\n    public enabled = false;\r\n    public numberOfStepsToMaintain = 40;\r\n    public logHealthCheckError = false;\r\n    public sendProgressTimeoutSecs = 55;\r\n    public logSendPingError = false;\r\n    public maxBackoffInMs = 120000;\r\n\r\n    public trouter_js_client_connected = false;\r\n    public trouter_js_client_disconnected = false;\r\n    public trouter_js_client_error = false;\r\n    public trouter_js_client_progress = false;\r\n    public trouter_js_client_response = false;\r\n    public trouter_js_client_request = false;\r\n    public trouter_js_client_registration = false;\r\n    public trouter_js_client_unregistration = false;\r\n\r\n    /** This event is ENABLED by default */\r\n    public trouter_js_client_check_connection = true;\r\n}\r\n\r\n/**\r\n * Telemetry sender\r\n */\r\nexport class ConnectionTracker {\r\n    private logger: Logger;\r\n    private steps: TrackerStep[];\r\n    private connectionAttempt: number;\r\n    private totalStepCount: number;\r\n    private beginTimestamp: Timespan;\r\n    private eventLogSettings: TrouterTelemetrySettings;\r\n    private connectedInfo: ConnectedInfo;\r\n    private progressTimeout?: number;\r\n    private eventLogger?: ITelemetrySender;\r\n\r\n    public constructor(\r\n        logfunc: LogProvider,\r\n        private clientId: number,\r\n        private clientInfo: IClientInfo,\r\n        private getServerState: () => ServerState,\r\n        private endpointId?: string,\r\n        public clientCorrelationID?: string,\r\n        private environment?: string\r\n    ) {\r\n        this.logger = new Logger('ConnectionTracker', logfunc);\r\n        this.clientCorrelationID = clientCorrelationID !== undefined ? clientCorrelationID : '';\r\n        this.steps = [];\r\n        this.connectionAttempt = 0;\r\n        this.totalStepCount = 0;\r\n        this.beginTimestamp = new Timespan();\r\n        this.eventLogSettings = new EventLogSettings();\r\n        this.connectedInfo = new ConnectedInfo();\r\n    }\r\n\r\n    public enable(telemetrySender: ITelemetrySender) {\r\n        this.eventLogSettings.enabled = true;\r\n        this.eventLogger = telemetrySender;\r\n    }\r\n\r\n    public disable() {\r\n        this.eventLogSettings.enabled = false;\r\n    }\r\n\r\n    public sendProgress(context: Properties): void {\r\n        // connect truncates steps array. this check ensures that a progress event is only sent out if the client is not connected\r\n        if (this.steps.length > 0) {\r\n            this.sendTelemetry(ClientEventName.Progress, context, this.steps);\r\n        }\r\n    }\r\n\r\n    public cancelProgressTimer(): void {\r\n        if (this.progressTimeout !== undefined) {\r\n            clearTimeout(this.progressTimeout);\r\n            this.progressTimeout = undefined;\r\n        }\r\n    }\r\n\r\n    public resetProgressSendTimer() {\r\n        this.cancelProgressTimer();\r\n\r\n        // send connection steps after a timeout\r\n        // this timeout may fire if auth callback never comes or the client is stuck in a loop to get connected\r\n        if (this.eventLogSettings.sendProgressTimeoutSecs !== undefined && this.eventLogSettings.sendProgressTimeoutSecs > 0) {\r\n            this.progressTimeout = setTimeout(() => {\r\n                this.sendProgress({\r\n                    reason: 'timeout',\r\n                    timeoutSecs: this.eventLogSettings.sendProgressTimeoutSecs\r\n                });\r\n            }, 1000 * this.eventLogSettings.sendProgressTimeoutSecs);\r\n        }\r\n    }\r\n\r\n    public setConnectedInfo(isNewUrl: boolean, transportType: string): void {\r\n        this.connectedInfo.numberOfPingReplies = 0;\r\n        this.connectedInfo.connectedTimestamp = Date.now();\r\n        this.connectedInfo.isNewUrl = isNewUrl;\r\n        this.connectedInfo.transportType = transportType;\r\n        ++this.connectedInfo.connectionNumber;\r\n    }\r\n\r\n    public clearConnectedInfo(): void {\r\n        this.connectedInfo.numberOfPingReplies = 0;\r\n        this.connectedInfo.connectedTimestamp = 0;\r\n        this.connectedInfo.isNewUrl = true;\r\n        this.connectedInfo.transportType = '';\r\n    }\r\n\r\n    // Copies from\r\n    // source {\r\n    //    propName: value\r\n    // }\r\n    // to\r\n    // dest {\r\n    //    propName: { value: actualValue }\r\n    // }\r\n    public copyProperties(dest: any, source: Properties): void {\r\n        // copy properties from source and add in a format expected by logger\r\n        for (const prop of Object.keys(source)) {\r\n            if (source.hasOwnProperty(prop) && source[prop] !== undefined) {\r\n                // replace hyphen by _\r\n                dest[prop.replace(/-/g, '_')] = { value: source[prop] };\r\n            }\r\n        }\r\n    }\r\n\r\n    public increasePingResponseCount() {\r\n        ++this.connectedInfo.numberOfPingReplies;\r\n    }\r\n\r\n    /**\r\n     * @param eventName Telemetry event name\r\n     * @param eventProperties Event property bag\r\n     * @param progress\r\n     */\r\n    public sendTelemetry(\r\n        eventName: ClientEventName,\r\n        eventProperties: Properties,\r\n        progress: any[]\r\n    ) {\r\n        try {\r\n            if (this.eventLogSettings.enabled === true\r\n                && this.eventLogSettings[eventName] === true\r\n                && this.eventLogger !== undefined\r\n            ) {\r\n                const serverState = this.getServerState();\r\n                const clientEvent = {\r\n                    name: eventName,\r\n                    properties: {\r\n                        connectionAttempt: { value: this.connectionAttempt },\r\n                        epid: { value: this.endpointId },\r\n                        clientCorrelationID: { value: this.clientCorrelationID },\r\n                        steps: { value: toJson(progress) },\r\n                        clientID: { value: this.clientId },\r\n                        eventVersion: { value: 3 }, // version of telemetry events,\r\n                        environment: { value: this.environment },\r\n                        cv: { value: CLIENT_VERSION },\r\n                        ua: { value: this.clientInfo.ua },\r\n\r\n                        // Copy ServerState\r\n                        connectionId: { value: serverState.connectionId },\r\n                        connectedClientId: { value: serverState.connectedClientId },\r\n                        domId: { value: serverState.domId },\r\n                        url: { value: serverState.unsecureUrl },\r\n                        surl: { value: serverState.url },\r\n                        ttlInSecs: { value: serverState.getRemainingTtlInSec() },\r\n\r\n                        // Copy this.connectedInfo\r\n                        numberOfPingReplies: { value: this.connectedInfo.numberOfPingReplies },\r\n                        connectedTimestamp: { value: this.connectedInfo.connectedTimestamp },\r\n                        isNewUrl: { value: this.connectedInfo.isNewUrl },\r\n                        transportType: { value: this.connectedInfo.transportType },\r\n                        connectionNumber: { value: this.connectedInfo.connectionNumber }\r\n                    }\r\n                };\r\n\r\n                this.copyProperties(clientEvent.properties, eventProperties);\r\n\r\n                this.eventLogger.logEvent(clientEvent);\r\n            }\r\n        } catch (exc) {\r\n            this.logger.warn(`error in sending event ${eventName}: ${toJson(exc)}`);\r\n        }\r\n    }\r\n\r\n    public createStep(stepName: string, operation: string, error?: string): TrackerStep {\r\n        return new TrackerStep(\r\n            stepName,\r\n            operation,\r\n            this.beginTimestamp.duration,\r\n            Date.now(),\r\n            error);\r\n    }\r\n\r\n    public addStep(tag: string, progressHint: string, error?: string): void {\r\n        if (this.eventLogSettings.enabled === false) {\r\n            return;\r\n        }\r\n\r\n        if (this.steps.length === 0) {\r\n            this.beginTimestamp.reset();\r\n        }\r\n        this.steps.push(this.createStep(tag, progressHint, error));\r\n        ++this.totalStepCount;\r\n        // do not maintain an ever growing list of steps. send a progress event with what is collected so far and clear steps\r\n        // there should be enough context in any event for the server to group events created for the sameonnection\r\n        if (this.eventLogSettings.numberOfStepsToMaintain !== undefined\r\n            && this.steps.length > this.eventLogSettings.numberOfStepsToMaintain\r\n        ) {\r\n            const progress = this.steps.slice(0);\r\n            this.steps.length = 0;\r\n            this.sendTelemetry(ClientEventName.Progress, { reason: 'flush' }, progress);\r\n        }\r\n    }\r\n\r\n    public trackStart(tag: string): void {\r\n        this.addStep(tag, 'start');\r\n    }\r\n\r\n    public trackEnd(tag: string): void {\r\n        this.addStep(tag, 'end');\r\n    }\r\n\r\n    public trackError(tag: string, error: string, addStep: boolean = true, subOperation?: string) {\r\n        if (tag === 'health' && this.eventLogSettings.logHealthCheckError !== true) {\r\n            return;\r\n        }\r\n        if (tag === 'ping' && this.eventLogSettings.logSendPingError === false) {\r\n            return;\r\n        }\r\n\r\n        if (subOperation === undefined) {\r\n            subOperation = 'error';\r\n        }\r\n\r\n        if (addStep === true) {\r\n            this.addStep(tag, subOperation, error);\r\n        }\r\n        this.sendTelemetry(ClientEventName.Error, {}, [this.createStep(tag, subOperation, error)]);\r\n    }\r\n\r\n    public trackProgress(tag: string, subOperation: string): void {\r\n        this.addStep(tag, subOperation);\r\n    }\r\n\r\n    public trackConnected(isNewUrl: boolean, transportType: string): void {\r\n        this.setConnectedInfo(isNewUrl, transportType);\r\n        const progress = this.steps.slice(0);\r\n        const totalSteps = this.totalStepCount;\r\n        const connectionDuration = this.beginTimestamp.duration;\r\n\r\n        // clear steps collected\r\n        this.steps.length = 0;\r\n        this.totalStepCount = 0;\r\n\r\n        this.sendTelemetry(ClientEventName.Connected, {\r\n            stepCount: progress.length,\r\n            totalStepCount: totalSteps,\r\n            connectionEstablishmentMs_Total: connectionDuration\r\n        }, progress);\r\n\r\n        this.cancelProgressTimer();\r\n    }\r\n\r\n    public trackDisconnected(context: Properties): void {\r\n        context.sessionLengthMS = Date.now() - this.connectedInfo.connectedTimestamp;\r\n        this.sendTelemetry(ClientEventName.Disconnected, context, []);\r\n        this.resetProgressSendTimer();\r\n    }\r\n\r\n    public trackNewConnection(): void {\r\n        ++this.connectionAttempt;\r\n    }\r\n\r\n    public trackRequest(request?: ITrouterRequest, errorMsg?: string): void {\r\n        const context: Properties = {};\r\n        if (errorMsg !== undefined) {\r\n            context.hasError = true;\r\n            context.error = errorMsg;\r\n        }\r\n        try {\r\n            if (request) {\r\n                context.requestID = request.id;\r\n                context.httpMethod = request.method;\r\n                context.url = request.url;\r\n                context.bodyLength = request.body.length;\r\n                context.shortUrl = request.shortUrl;\r\n                context.requestTimeStamp = request.startTS;\r\n                context.correlationVector = request.correlationVector;\r\n                const headers = request.headers;\r\n                for (const header of Object.keys(headers)) {\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        context[header] = headers[header];\r\n                    }\r\n                }\r\n            }\r\n        } catch (exc) {\r\n            context.hasError = true;\r\n            context.error = `${context.error} error creating request context ${toJson(exc)}`;\r\n        }\r\n\r\n        this.sendTelemetry(ClientEventName.Request, context, []);\r\n    }\r\n\r\n    public trackResponse(request?: ITrouterRequest, latencyMS?: number, responseData?: ResponseData, errorMsg?: string): void {\r\n        const context: Properties = {};\r\n        if (errorMsg !== undefined) {\r\n            context.hasError = true;\r\n            context.error = errorMsg;\r\n        }\r\n\r\n        try {\r\n            context.responseTimestamp = responseData !== undefined ? responseData.sentTS : Date.now();\r\n            if (request) {\r\n                context.requestID = request.id;\r\n                context.httpMethod = request.method;\r\n                context.shortUrl = request.shortUrl;\r\n                context.correlationVector = request.correlationVector;\r\n                const headers = request.headers;\r\n                for (const header of Object.keys(headers)) {\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        context[header] = headers[header];\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (responseData) {\r\n                context.latencyMS = latencyMS;\r\n                context.responseCode = responseData.status;\r\n                context.responseLength = responseData.body.length;\r\n            }\r\n        } catch (exc) {\r\n            context.hasError = true;\r\n            context.error = `${context.error} error creating response context ${toJson(exc)}`;\r\n        }\r\n\r\n        this.sendTelemetry(ClientEventName.Response, context, []);\r\n    }\r\n\r\n    public sendResponseError(errorMsg: string, request?: ITrouterRequest, responseData?: ResponseData): void {\r\n        this.trackResponse(request, undefined, responseData, errorMsg);\r\n    }\r\n\r\n    public close(): void {\r\n        this.sendProgress({\r\n            reason: 'closed'\r\n        });\r\n        this.steps.length = 0;\r\n        this.cancelProgressTimer();\r\n    }\r\n\r\n    public mergeSettings(settings?: TrouterTelemetrySettings) {\r\n        if (!settings) {\r\n            return;\r\n        }\r\n\r\n        this.eventLogSettings.numberOfStepsToMaintain = Math.min(40,\r\n            Math.max(10, (settings.numberOfStepsToMaintain !== undefined ? settings.numberOfStepsToMaintain : 0)));\r\n\r\n        // min of 55 secs and max allowed is 1 hr\r\n        const newProgressTimeout = Math.min(3600,\r\n            Math.max(55, settings.sendProgressTimeoutSecs !== undefined ? settings.sendProgressTimeoutSecs : 0));\r\n\r\n        this.eventLogSettings.logHealthCheckError = settings.logHealthCheckError;\r\n        this.eventLogSettings.logSendPingError = settings.logSendPingError;\r\n\r\n        // Copy enable/disable flags for all telemetry events\r\n        for (const iterator of Object.keys(ClientEventName).map(k => ClientEventName[k])) {\r\n            if (settings.hasOwnProperty(iterator) && settings[iterator] !== undefined) {\r\n                this.eventLogSettings[iterator] = settings[iterator];\r\n            }\r\n        }\r\n\r\n        if (this.eventLogSettings.sendProgressTimeoutSecs !== newProgressTimeout) {\r\n            this.eventLogSettings.sendProgressTimeoutSecs = newProgressTimeout;\r\n            this.resetProgressSendTimer();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/ConnectionTracker.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\nimport { Logger } from './Logger';\r\n\r\n/**\r\n * Executes callbacks with exponential backoff\r\n */\r\nexport class ExponentialBackoff {\r\n    private backoffId = 0;\r\n    private backoffCount = 0;\r\n    private timerHandle?: number;\r\n\r\n    public constructor(private logger: Logger, private maxBackoffInMs: number) {}\r\n\r\n    private static calculateNextBackoffMs(backoffCount: number, maxBackoffInMs: number): number {\r\n        // tslint:disable-next-line:insecure-random\r\n        const fudge = 1 + (Math.random() - 0.5) * 0.4; // +/- 20%\r\n        let backoff = 1000 * Math.pow(2, backoffCount) * fudge; // 1s initial\r\n        backoff = Math.round(backoff);\r\n\r\n        return Math.min(maxBackoffInMs, backoff);\r\n    }\r\n\r\n    public setMaxBackoffMs(ms: number) {\r\n        this.maxBackoffInMs = ms;\r\n    }\r\n\r\n    public backoff(taskName: string, handler: () => void): void {\r\n        if (this.timerHandle !== undefined) {\r\n            this.logger.debug('Clearing current back off');\r\n            clearTimeout(this.timerHandle);\r\n            this.timerHandle = undefined;\r\n        }\r\n\r\n        const backoffMs = ExponentialBackoff.calculateNextBackoffMs(this.backoffCount, this.maxBackoffInMs);\r\n        this.backoffId++;\r\n        this.backoffCount++;\r\n        this.logger.info(`Backing off ${taskName} for ${backoffMs} milliseconds with ID ${this.backoffId}`);\r\n        this.timerHandle = setTimeout(() => {\r\n            this.logger.info(`Back off for ${taskName} with ID ${this.backoffId} complete, invoking handler`);\r\n            this.timerHandle = undefined;\r\n            handler();\r\n        }, backoffMs);\r\n    }\r\n\r\n    public reset(): void {\r\n        if (this.timerHandle !== undefined) {\r\n            this.logger.debug('Resetting back off');\r\n            clearTimeout(this.timerHandle);\r\n            this.timerHandle = undefined;\r\n        }\r\n        this.backoffCount = 0;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/ExponentialBackoff.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n// tslint:disable:no-any\r\n// tslint:disable:no-unsafe-any\r\n// tslint:disable:strict-boolean-expressions\r\n// tslint:disable:max-classes-per-file\r\n// tslint:disable:promise-function-async\r\n\r\nimport { createRegistrarClient, IRegistrarClient, IRegistrarClientOptions } from '@skype/tsregistrar';\r\nimport { Promise } from 'es6-promise';\r\nimport { calculateExpireTsInSec, calculateTtlInSec, Timespan, toJson } from './Common';\r\nimport { ClientEventName, ConnectionTracker, ResponseData } from './ConnectionTracker';\r\nimport { CLIENT_VERSION } from './Constants';\r\nimport { ExponentialBackoff } from './ExponentialBackoff';\r\nimport {\r\n    HttpHeaders, LogProvider, SendResponseResult, SkypeTokenProvider, TimeoutOptions,\r\n    UserActivityState\r\n} from './Interfaces';\r\nimport {\r\n    IClientInfo, IMessageLossIndicator, ISocketIoOptions, ITrouterOptions, ITrouterRequest, ITrouterResponse,\r\n    ServerState, UserActivityEventReason\r\n} from './InternalInterfaces';\r\nimport { Logger } from './Logger';\r\nimport { IWorker, TrouterFsm } from './TrouterFsm';\r\n\r\n// This is the current API version\r\nconst VERSION: string = 'v4';\r\n\r\n// Default value for registration timeout\r\nconst DEFAULT_REGISTRATION_TIMEOUT_SEC = 3600;\r\n\r\n// tslint:disable:no-var-requires\r\n// tslint:disable:no-require-imports\r\n// tslint:disable-next-line:no-reserved-keywords\r\ndeclare function require(arg: string): any;\r\nconst io: any = require('./socket.io');\r\n\r\n/**\r\n * Stub for IClientInfo\r\n */\r\nclass ClientInfo implements IClientInfo {\r\n    public cv: string = CLIENT_VERSION;\r\n    public ua: string = '';\r\n    public hr: string = '';\r\n    public v: string = '';\r\n}\r\n\r\n/**\r\n * Stub for ISocketIoOptions\r\n */\r\nclass SocketIoOptions implements ISocketIoOptions {\r\n    public 'force new connection'?: boolean = true;\r\n    public 'reconnect'?: boolean = false;\r\n    public 'query'?: string = '';\r\n    public ackTimeoutMs = 5000;\r\n}\r\n\r\n/**\r\n * Interface to work with SocketIO library\r\n */\r\ninterface ISocketIo {\r\n    socketNumber: number;\r\n    socket: any;\r\n\r\n    emit(event: string, handler: any): void;\r\n    emit(event: string, args: object, handler: any): void;\r\n    on(event: string, handler: any): void;\r\n    disconnect(): void;\r\n    send(msg: string);\r\n    removeAllListeners(event: string);\r\n}\r\n\r\n/**\r\n * Params received during handshake\r\n */\r\ninterface ITrouterConnectedEventArgs {\r\n    // Time it took Trouter to perform the handshake request internally, in milliseconds. Number in quotes, e.g. \"123\"\r\n    dur: string;\r\n    // Connection valid TTL in seconds as returned by service.\r\n    ttl: number;\r\n}\r\n\r\n/**\r\n * Params received on message lost event\r\n */\r\ninterface ITrouterMessageLossEventArgs {\r\n    droppedIndicators: IMessageLossIndicator[];\r\n}\r\n\r\ntype TrouterRequestCallbackType = (val: string) => void;\r\n\r\nconst cvHeader: string = 'MS-CV';\r\n\r\n/**\r\n * Request from downstream service\r\n */\r\nclass TrouterRequest implements ITrouterRequest {\r\n    public startTS: number;\r\n    public url: string;\r\n    public shortUrl: string;\r\n    public body: string;\r\n    public headers: HttpHeaders;\r\n    public id: number;\r\n    public method: string;\r\n    public replied: boolean;\r\n    public timedout: boolean;\r\n    public timeoutTimerId: number;\r\n\r\n    private dataCallback: TrouterRequestCallbackType | undefined;\r\n    private cvCounter: number = 0;\r\n    private receivedCv: string;\r\n\r\n    public constructor(requestJson: string) {\r\n        const json = JSON.parse(requestJson);\r\n\r\n        this.startTS = json.hasOwnProperty('startTS') ? json.startTS : 0;\r\n        this.url = json.hasOwnProperty('url') ? json.url : '';\r\n        this.shortUrl = json.hasOwnProperty('shortUrl') ? json.shortUrl : '';\r\n        this.body = json.hasOwnProperty('body') ? json.body : '';\r\n        this.headers = json.hasOwnProperty('headers') ? json.headers : {};\r\n        this.id = (json.hasOwnProperty('id') && typeof json.id === 'number') ? json.id : -1;\r\n        this.method = json.hasOwnProperty('method') ? json.method : '';\r\n\r\n        this.replied = false;\r\n        this.timedout = false;\r\n        this.timeoutTimerId = 0;\r\n\r\n        this.receivedCv = this.headers[cvHeader];\r\n        this.updateCvHeader();\r\n    }\r\n\r\n    public get correlationVector(): string {\r\n        return this.receivedCv ? `${this.receivedCv}.${this.cvCounter}` : '';\r\n    }\r\n\r\n    public on(target: string, targetCallback: (val?: string) => void) {\r\n        if (target === 'data') {\r\n            this.dataCallback = targetCallback;\r\n        } else if (target === 'end') {\r\n            if (typeof this.dataCallback === 'function') {\r\n                this.dataCallback(this.body);\r\n            }\r\n            targetCallback();\r\n        }\r\n    }\r\n\r\n    public incrementCorrelationVector() {\r\n        ++this.cvCounter;\r\n        this.updateCvHeader();\r\n    }\r\n\r\n    private updateCvHeader(): void {\r\n        const cv: string = this.correlationVector;\r\n        if (cv) {\r\n            this.headers[cvHeader] = cv;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Response to downstream service\r\n */\r\nclass TrouterResponse implements ITrouterResponse {\r\n    public constructor(\r\n        private request: TrouterRequest,\r\n        private responseData: ResponseData,\r\n        private sendResponse: (request: TrouterRequest, responseData: ResponseData) => SendResponseResult) {\r\n    }\r\n\r\n    public writeHead(status: number, headers?: HttpHeaders) {\r\n        this.responseData.status = status;\r\n        this.responseData.headers = headers;\r\n    }\r\n\r\n    public write(chunk: string) {\r\n        this.responseData.body += chunk;\r\n    }\r\n\r\n    public end(chunk?: string): SendResponseResult {\r\n        if (chunk) {\r\n            this.responseData.body += chunk;\r\n        }\r\n\r\n        return this.sendResponse(this.request, this.responseData);\r\n    }\r\n}\r\n\r\n/**\r\n * An client-initiated event that is to be sent to trouter.\r\n */\r\nclass DownstreamEvent {\r\n    public name: string;\r\n    public args: object;\r\n    public timeoutTimerId: number;\r\n\r\n    public constructor(name: string) {\r\n        this.name = name;\r\n        this.args = {};\r\n        this.timeoutTimerId = 0;\r\n    }\r\n}\r\n\r\n/**\r\n * Interface to be implemented by Trouter consumer\r\n */\r\nexport interface IManagerConsumer {\r\n    /** Called on received request */\r\n    onDownstreamRequest(connection: TrouterConnection, request: ITrouterRequest, response: ITrouterResponse);\r\n    /** Called once connection is established */\r\n    onConnected(connection: TrouterConnection);\r\n    /** Called once registration in EDF is succeed */\r\n    onRegistered(connection: TrouterConnection);\r\n    /** Called once connection failed */\r\n    onReconnecting(connection: TrouterConnection);\r\n    /** Called when server asked to reconnect */\r\n    onReconnectIsRequired(connection: TrouterConnection);\r\n    /** Called once connection is unregistered and closed */\r\n    onDisconnected(connection: TrouterConnection);\r\n    /** Called when message loss indicator received */\r\n    onTrouterMessageLost(flowTags: IMessageLossIndicator[]);\r\n}\r\n\r\n/**\r\n * Allocation result from Trouter server\r\n */\r\nexport interface IAllocateResult {\r\n    url: string;\r\n    surl: string;\r\n    curlb: string;\r\n    connectparams: any;\r\n    socketio: string;\r\n    id: string;\r\n    ccid: string;\r\n    ttl: string;\r\n}\r\n\r\n/**\r\n * Trouter + registration flow implementation\r\n */\r\nexport class TrouterConnection implements IWorker {\r\n    private logger: Logger;\r\n    private healthBackoff: ExponentialBackoff;\r\n    private tokenBackoff: ExponentialBackoff;\r\n    private fsm: TrouterFsm;\r\n    private connectionTracker: ConnectionTracker;\r\n    private registrarClient?: IRegistrarClient;\r\n\r\n    private connectionId = '';\r\n\r\n    private inIncallMode = false;\r\n    private timeoutOptions: TimeoutOptions;\r\n    private connectionTimeoutId?: number;\r\n    private pingTimerId?: number;\r\n    private pingResponseTimerId?: number;\r\n    private registrationTimerId?: number;\r\n    private incallModeTimerId?: number;\r\n\r\n    private socket?: ISocketIo;\r\n    private allocateResult?: IAllocateResult;\r\n    /** expiration's timestamp of allocated connectionID */\r\n    private connectionExpireTimestampInSecs?: number;\r\n\r\n    /** Allocated URL where library was able to successfully connect */\r\n    private connectedUrl?: string;\r\n\r\n    /** Name of currently used transport */\r\n    private transportTypeName: string | undefined;\r\n\r\n    private clientID: number;\r\n    private connectionAttempt = 0;\r\n    private connectedClientId = '';\r\n    private domId: string | undefined;\r\n    private c2cUrlBase: string = '';\r\n\r\n    private clientInfo: IClientInfo;\r\n    /** Used to calculate short URL in requests */\r\n    private urlPath: string | undefined;\r\n    private userActivityState: UserActivityState;\r\n    private pendingTimers: { [id: number]: string; } = { };\r\n\r\n    private readonly UNKNOWN_TRANSPORT = 'unknown_transport';\r\n\r\n    constructor(\r\n        logProvider: LogProvider,\r\n        private options: ITrouterOptions,\r\n        private manager: IManagerConsumer,\r\n        private tokenProvider: SkypeTokenProvider,\r\n        initialUserActivityState?: UserActivityState\r\n    ) {\r\n        this.logger = new Logger('Connection', logProvider);\r\n        this.timeoutOptions = this.options.timeoutOptions;\r\n        this.healthBackoff = new ExponentialBackoff(this.logger, this.timeoutOptions.maxBackoffMs);\r\n        this.tokenBackoff = new ExponentialBackoff(this.logger, this.timeoutOptions.maxBackoffMs);\r\n        this.clientID = Date.now();\r\n\r\n        // tslint:disable-next-line:no-typeof-undefined - window exists only in browser\r\n        if ((typeof window !== 'undefined') && window.location) {\r\n            this.domId = window.location.hostname;\r\n        }\r\n\r\n        this.clientInfo = new ClientInfo();\r\n        this.clientInfo.cv = CLIENT_VERSION;\r\n        this.clientInfo.ua = '';\r\n\r\n        if (this.options && this.options.clientInfo) {\r\n            this.clientInfo.ua = this.safeString(this.options.clientInfo.ua);\r\n            this.clientInfo.v = this.safeString(this.options.clientInfo.v);\r\n        }\r\n\r\n        this.connectionTracker = new ConnectionTracker(\r\n            logProvider,\r\n            this.clientID,\r\n            this.clientInfo,\r\n            () => { return this.getServerState(); },\r\n            this.options.endpointId,\r\n            this.options.clientCorrelationID,\r\n            this.options.environment\r\n        );\r\n        this.applyConnectionTrackerOptions(options);\r\n\r\n        const useIncallMode = this.options.incallModeTimeoutMs > 0;\r\n        this.fsm = new TrouterFsm(logProvider, this, useIncallMode);\r\n\r\n        if (options.registration) {\r\n            const registrarOptions: IRegistrarClientOptions = {\r\n                registrarUrl: options.registration.registrarUrl,\r\n                registrationId: options.registration.registrationId,\r\n                requestTimeoutMs: options.timeoutOptions.fetchTimeoutMs,\r\n                initialRetryDelayMs: 1000,\r\n                maxRetryDelayMs: options.timeoutOptions.maxBackoffMs\r\n            };\r\n            this.registrarClient = createRegistrarClient(logProvider, this.tokenProvider, registrarOptions);\r\n        }\r\n\r\n        this.userActivityState = initialUserActivityState || UserActivityState.Unknown;\r\n    }\r\n\r\n    public start() {\r\n        this.logger.info('Starting');\r\n        this.fsm.start();\r\n    }\r\n\r\n    public stop(dontUnregister: boolean) {\r\n        this.logger.info('Stopping');\r\n        this.connectionTracker.close();\r\n        this.fsm.stop(dontUnregister);\r\n    }\r\n\r\n    public configure(options: ITrouterOptions) {\r\n        // Currently only baseUrl and telemetrySettings options are supported for reconfiguration\r\n        const urlChanged = this.options.trouterUrl !== options.trouterUrl;\r\n        this.options = options;\r\n\r\n        this.applyConnectionTrackerOptions(options);\r\n\r\n        if (urlChanged) {\r\n            this.onTrouterReconnect();\r\n        }\r\n    }\r\n\r\n    public checkConnection(disconnectDetected: boolean) {\r\n        this.logger.info(`checkConnection called with ${disconnectDetected}`);\r\n\r\n        this.fsm.checkConnection(disconnectDetected);\r\n\r\n        // Don't send on disconnectDetected === false, because Teams client calls it on timer\r\n        if (disconnectDetected) {\r\n            this.connectionTracker.sendTelemetry(ClientEventName.CheckConnection, {\r\n                disconnectDetected: disconnectDetected\r\n            }, []);\r\n        }\r\n    }\r\n\r\n    /** Returns info about connection */\r\n    public getServerState(): ServerState {\r\n        return new ServerState(\r\n            this.connectionId,\r\n            this.connectedClientId,\r\n            this.domId ? this.domId : '',\r\n            this.allocateResult ? this.allocateResult.url : '',\r\n            this.allocateResult ? this.allocateResult.surl : '',\r\n            this.c2cUrlBase,\r\n            this.connectionExpireTimestampInSecs);\r\n    }\r\n\r\n    public getUserActivityState(): UserActivityState {\r\n        return this.userActivityState;\r\n    }\r\n\r\n    //////// Implement IWorker ////////\r\n\r\n    public getToken(useCache: boolean, backoff: boolean) {\r\n        this.logger.info(`Getting token ${backoff ? 'with backoff' : 'without backoff'}`);\r\n\r\n        const requestFunction = () => {\r\n            this.connectionTracker.trackStart('token');\r\n\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.tokenProvider(!useCache).then((token) => {\r\n                this.logger.debug('token is received');\r\n                this.connectionTracker.trackEnd('token');\r\n                this.fsm.onTokenReceived(token);\r\n            }).catch((error: Error) => {\r\n                const msg = toJson(error.stack);\r\n                this.logger.error(`Getting token failed, will retry after timeout. Error: ${msg}`);\r\n                this.connectionTracker.trackError('token', msg);\r\n                this.getToken(useCache, true);\r\n            });\r\n        };\r\n\r\n        if (backoff) {\r\n            this.tokenBackoff.backoff('getting token', requestFunction);\r\n        } else {\r\n            this.tokenBackoff.reset();\r\n            requestFunction();\r\n        }\r\n    }\r\n\r\n    public startConnectionTimer() {\r\n        this.stopConnectionTimer();\r\n        this.logger.debug(`Starting connection timeout for ${this.timeoutOptions.connectionTimeoutMs} ms`);\r\n        this.connectionTimeoutId = setTimeout(() => {\r\n            this.logger.info('Connection timeout is fired');\r\n            this.fsm.onConnectingTimeout();\r\n        }, this.timeoutOptions.connectionTimeoutMs);\r\n    }\r\n\r\n    public stopConnectionTimer() {\r\n        if (this.connectionTimeoutId) {\r\n            this.logger.debug('Stopping connection timeout');\r\n            clearTimeout(this.connectionTimeoutId);\r\n            this.connectionTimeoutId = undefined;\r\n        }\r\n    }\r\n\r\n    public startPingTimer() {\r\n        if (this.transportTypeName === 'websocket') {\r\n            this.logger.debug(`Starting ping timeout for ${this.timeoutOptions.pingTimeoutMs} ms`);\r\n            this.pingTimerId = setInterval(() => {\r\n                this.logger.info('Ping interval fired');\r\n                this.fsm.onPingInterval();\r\n            }, this.timeoutOptions.pingTimeoutMs);\r\n        } else {\r\n            this.logger.debug(`Not starting ping for transport ${this.transportTypeName}`);\r\n        }\r\n    }\r\n\r\n    public stopPingTimer() {\r\n        if (this.pingTimerId) {\r\n            this.logger.debug('Stopping ping timeout');\r\n            this.clearPingResponseTimer();\r\n            clearInterval(this.pingTimerId);\r\n            this.pingTimerId = undefined;\r\n        }\r\n    }\r\n\r\n    public shouldSkipRegistration() {\r\n        return this.options.registration === undefined;\r\n    }\r\n\r\n    public hasCustomRegisterTtl() {\r\n        return this.options.registration && this.options.registration.registrarTtlSec;\r\n    }\r\n\r\n    public startRegisterTimer() {\r\n        if (this.registrationTimerId !== undefined) {\r\n            this.logger.error('Another registration timer is set - don\\'t create another one');\r\n\r\n            return;\r\n        }\r\n\r\n        // 30 seconds for registration update\r\n        const ttl = this.getRegistrationTtl() - 30;\r\n        this.logger.debug(`Starting registration timeout for ${ttl} sec`);\r\n        this.registrationTimerId = setTimeout(() => {\r\n            this.logger.info('Registration timeout is fired');\r\n            this.registrationTimerId = undefined;\r\n            this.fsm.onRegistrationTimeout();\r\n        }, ttl * 1000);\r\n    }\r\n\r\n    public stopRegisterTimer() {\r\n        if (this.registrationTimerId) {\r\n            this.logger.debug('Stopping registration timeout');\r\n            clearTimeout(this.registrationTimerId);\r\n            this.registrationTimerId = undefined;\r\n        }\r\n    }\r\n\r\n    public resendRegistration(): Promise<void> {\r\n        if (!this.registrarClient) {\r\n            throw new Error('Trouter Client not configured to handle registrations');\r\n        }\r\n\r\n        return this.registrarClient.resendRegistration();\r\n    }\r\n\r\n    public buildSocketIoUrlParams(): string {\r\n        if (!this.allocateResult) {\r\n            throw new Error('Allocate result is undefined in buildSocketIoUrlParams()');\r\n        }\r\n\r\n        const urlParams: any = {};\r\n\r\n        // Copy connection parameters (i.e. signature) from allocation response\r\n        if (this.allocateResult.connectparams) {\r\n            const signatureData = this.allocateResult.connectparams;\r\n            for (const i of Object.keys(signatureData)) {\r\n                if (signatureData.hasOwnProperty(i) && signatureData[i] !== undefined) {\r\n                    urlParams[i] = signatureData[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        // And add some more fields\r\n        urlParams.v = VERSION;\r\n        urlParams.tc = encodeURI(toJson(this.clientInfo));\r\n        urlParams.timeout = this.timeoutOptions.pingTimeoutMs / 1000;\r\n        urlParams.auth = 'true';\r\n\r\n        if (this.options.endpointId) {\r\n            urlParams.epid = this.options.endpointId;\r\n        }\r\n\r\n        if (this.userActivityState !== UserActivityState.Unknown) {\r\n            urlParams.userActivity = encodeURI(toJson(this.createUserActivityObject(this.userActivityState)));\r\n        }\r\n\r\n        return this.appendConnectedClientIds(this.buildQuery(urlParams), true);\r\n    }\r\n\r\n    public startSocketIo() {\r\n        this.logger.info('Starting socket io');\r\n        this.connectionTracker.trackStart('connectSocket');\r\n        //this.connectionAttempt++;\r\n        if (!this.allocateResult) {\r\n            throw new Error('Allocate result is undefined in startSocketIo()');\r\n        }\r\n\r\n        const options: ISocketIoOptions = this.options.ioOptions || new SocketIoOptions();\r\n\r\n        // Regardless of any passed in socket.io options, force the following settings.\r\n        options['force new connection'] = true;\r\n        options.reconnect = false;\r\n\r\n        // Query params to each socket.io request\r\n        options.query = this.buildSocketIoUrlParams();\r\n        this.logger.info(`connecting to ${this.allocateResult.socketio}?${options.query}`);\r\n\r\n        // msg868 - clear all events and disconnect\r\n        this.stopSocketIo();\r\n\r\n        this.socket = (this.options.io || io).connect(this.allocateResult.socketio, options);\r\n        if (this.socket === undefined) {\r\n            throw new Error('Can\\'t create Socket.io object');\r\n        }\r\n\r\n        this.socket.on('connecting', (transportTypeName: string) => { this.onSocketConnecting(transportTypeName); });\r\n        this.socket.on('connect', () => { this.onSocketConnect(); });\r\n        this.socket.on('connect_failed', (reason: string) => { this.onSocketConnectFailed(reason); });\r\n        this.socket.on('disconnect', () => { this.onSocketDisconnect(); });\r\n        this.socket.on('reconnect', () => { this.onSocketReconnect(); });\r\n        this.socket.on('reconnect_failed', (reason: any) => { this.onSocketReconnectFailed(reason); });\r\n        this.socket.on('reconnecting', () => { this.onSocketReconnecting(); });\r\n        this.socket.on('error', (error: any) => { this.onSocketError(error); });\r\n        this.socket.on('message', (request: string) => { this.onSocketMessage(request); });\r\n        this.socket.on('trouter.connected',\r\n            (eventArgs: ITrouterConnectedEventArgs) => { this.onTrouterConnected(eventArgs); });\r\n        this.socket.on('trouter.reconnect', () => { this.onTrouterReconnect(); });\r\n        this.socket.on('trouter.message_loss',\r\n            (eventArgs: ITrouterMessageLossEventArgs) => { this.onTrouterMessageLoss(eventArgs); });\r\n    }\r\n\r\n    public stopSocketIo() {\r\n        if (this.socket) {\r\n            this.logger.info('clearing socket.io');\r\n            try {\r\n                for (const event of [\r\n                    'connecting', 'connect', 'connect_failed', 'disconnect', 'reconnect', 'reconnect_failed',\r\n                    'reconnecting', 'error', 'message', 'trouter.connected', 'trouter.reconnect', 'trouter.message_loss'\r\n                ]) {\r\n                    this.socket.removeAllListeners(event);\r\n                }\r\n\r\n                this.socket.disconnect();\r\n                this.logger.debug('cleared socket');\r\n                this.socket = undefined;\r\n            } catch (error) {\r\n                this.logger.error(`exception in disconnecting previous socket. Error: ${toJson(error.stack)}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    public dispatchConnected() {\r\n        this.logger.info('dispatching connected');\r\n        this.manager.onConnected(this);\r\n    }\r\n\r\n    public dispatchRegistered() {\r\n        this.logger.info('dispatching connected');\r\n        this.manager.onRegistered(this);\r\n    }\r\n\r\n    public dispatchDownstreamRequest(request: ITrouterRequest) {\r\n        this.logger.info('dispatching downstream request');\r\n\r\n        try {\r\n            const response = new TrouterResponse(<TrouterRequest>request, new ResponseData(request.id),\r\n                (req: TrouterRequest, responseData: ResponseData) => {\r\n                    this.logger.info('sending response to downstream');\r\n\r\n                    return this.sendResponse(req, responseData);\r\n                });\r\n            this.manager.onDownstreamRequest(this, request, response);\r\n        } catch (error) {\r\n            this.logger.error(`exception in socket.on message. Error : ${toJson(error.stack)}`);\r\n        }\r\n    }\r\n\r\n    public dispatchReconnecting() {\r\n        this.logger.info('dispatching reconnecting');\r\n        this.manager.onReconnecting(this);\r\n    }\r\n\r\n    public dispatchReconnectIsRequired() {\r\n        this.logger.info('dispatching reconnect is required by server');\r\n        this.manager.onReconnectIsRequired(this);\r\n    }\r\n\r\n    public dispatchDisconnected() {\r\n        this.logger.info('dispatching disconnected');\r\n        this.manager.onDisconnected(this);\r\n    }\r\n\r\n    public dispatchTrouterMessageLost(messageLossIndicators: IMessageLossIndicator[]) {\r\n        this.logger.info('dispatching trouter lost message');\r\n        this.manager.onTrouterMessageLost(messageLossIndicators);\r\n    }\r\n\r\n    public sendProcessedDroppedIndicators(messageLossIndicators: IMessageLossIndicator[]) {\r\n        try {\r\n            this.logger.info('emitting processed flow tags to the server');\r\n            const processedMessageLossEvent = new DownstreamEvent('trouter.processed_message_loss');\r\n            processedMessageLossEvent.args = {droppedIndicators: messageLossIndicators};\r\n            this.sendDownstreamEvent(processedMessageLossEvent, () => {\r\n                this.logger.info('emitted processed flow tags to the server');\r\n            });\r\n        } catch (error) {\r\n            const msg = toJson(error.stack);\r\n            this.logger.error(`unable to send processed message loss event. Error: ${msg}`);\r\n            this.connectionTracker.trackError('trouter.processed_message_loss', msg, false);\r\n        }\r\n    }\r\n\r\n    public resetAllocationConnectionParams() {\r\n        if (this.allocateResult) {\r\n            this.logger.info('Resetting allocation connection parameters');\r\n            this.allocateResult.connectparams = undefined;\r\n        }\r\n    }\r\n\r\n    public sendAllocateRequest(token: string) {\r\n        this.connectionAttempt++;\r\n        this.connectionTracker.trackNewConnection();\r\n\r\n        let url = this.appendCorrelationIds(this.options.trouterUrl, false);\r\n        if (this.allocateResult && this.allocateResult.connectparams) {\r\n            url += `&${this.buildQuery(this.allocateResult.connectparams)}`;\r\n            // Currently server doesn't return \"v\" in allocate result, but it\r\n            // can be changed, so implement it this way just in case\r\n            if (!this.allocateResult.connectparams.v) {\r\n                url += `&v=${VERSION}`;\r\n            }\r\n        }\r\n\r\n        const allocateRequest = new Request(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: new Headers({\r\n                'X-Skypetoken': token,\r\n                'Content-Type': 'text/plain'\r\n            })\r\n        });\r\n\r\n        this.logger.info(`sendAllocateRequest: POST ${url}`);\r\n        this.connectionTracker.trackStart('allocation');\r\n        let responseStatusCode = -1;\r\n        this.fetchWithTimeout(allocateRequest, this.timeoutOptions.fetchTimeoutMs).then((response: Response) => {\r\n            responseStatusCode = response.status;\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText);\r\n            }\r\n\r\n            // tslint:disable-next-line:no-backbone-get-set-outside-model\r\n            const contentType = response.headers.get('content-type');\r\n            if (!contentType || (contentType !== 'application/json' && contentType.substring(0, 17) !== 'application/json;')) {\r\n                throw new Error(`Content-type '${contentType}' is unexpected`);\r\n            }\r\n            this.connectionTracker.trackEnd('allocation');\r\n\r\n            return response.json();\r\n        }).then((responseObj) => {\r\n            this.onAllocationResponse(responseObj);\r\n        }).catch((error: Error) => {\r\n            const msg = `${error}, status code ${responseStatusCode}`;\r\n            this.logger.error(`Allocation request failed. Error: ${msg}`);\r\n            this.connectionTracker.trackError('allocation', msg);\r\n            this.fsm.onAllocationFailed(responseStatusCode === 401);\r\n        });\r\n    }\r\n\r\n    public sendPingRequest() {\r\n        if (this.socket && this.pingResponseTimerId === undefined) {\r\n            try {\r\n                this.logger.info('emitting ping event');\r\n                this.socket.emit('ping', () => { this.onPingResponse(); });\r\n                this.pingResponseTimerId = setTimeout(() => {\r\n                    this.logger.error('Ping response timeout is fired');\r\n                    this.clearPingResponseTimer();\r\n                    this.fsm.onPingResponseTimeout();\r\n                }, this.timeoutOptions.pongTimeoutMs);\r\n            } catch (error) {\r\n                const msg = toJson(error.stack);\r\n                this.logger.error(`unable to send ping. Error: ${msg}`);\r\n                this.connectionTracker.trackError('ping', msg, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    public setUserActivityState(state: UserActivityState) {\r\n        const changed: boolean = (state !== this.userActivityState);\r\n        this.userActivityState = state;\r\n        this.fsm.onSetUserActivityState(state, changed);\r\n    }\r\n\r\n    public sendUserActivityState(reason: UserActivityEventReason, connected: boolean) {\r\n        if (this.userActivityState === UserActivityState.Unknown) {\r\n            return;\r\n        }\r\n\r\n        if (this.transportTypeName === 'websocket' && connected) {\r\n            if (reason === UserActivityEventReason.Connected) {\r\n                this.sendUserActivityStateMultiple(2);\r\n            } else {\r\n                this.sendUserActivityStateMultiple(1);\r\n            }\r\n        } else if (this.transportTypeName === 'xhr-polling') { // ignoring the connected flag\r\n            if (reason === UserActivityEventReason.Modified) {\r\n                this.fsm.forceReconnect();\r\n            }\r\n        }\r\n    }\r\n\r\n    public sendRegisterRequest() {\r\n        if (!this.options.registration || !this.registrarClient) {\r\n            throw new Error('Internal error - options.registration is undefined');\r\n        }\r\n        if (!this.allocateResult) {\r\n            throw new Error('Allocate result is undefined in sendRegisterRequest()');\r\n        }\r\n\r\n        this.logger.info('sending register request');\r\n        const span = new Timespan();\r\n        this.connectionTracker.trackStart('registration');\r\n\r\n        this.registrarClient.register({\r\n                appId: this.options.registration.pnhAppId,\r\n                aesKey: '',\r\n                languageId: 'en-US',\r\n                platform: this.options.registration.platform,\r\n                templateKey: this.options.registration.pnhTemplateKey,\r\n                platformUIVersion: this.options.registration.platformUIVersion,\r\n                productContext: this.options.registration.productContext\r\n            }, {\r\n                TROUTER: [{\r\n                    context: this.options.registration.context,\r\n                    path: this.allocateResult.surl,\r\n                    ttl: this.getRegistrationTtl()\r\n                }]\r\n            }).then(() => {\r\n                this.logger.info('Register request successful');\r\n                this.connectionTracker.trackEnd('registration');\r\n                this.fsm.onRegistrationSucceed();\r\n                this.connectionTracker.sendTelemetry(ClientEventName.Registration, {\r\n                    duration: span.duration\r\n                }, []);\r\n            }).catch((error: Error) => {\r\n                this.logger.error(`Register request failed. Error: ${error}`);\r\n                this.connectionTracker.trackError('registration', error.message);\r\n\r\n                this.connectionTracker.sendTelemetry(ClientEventName.Registration, {\r\n                    duration: span.duration\r\n                }, []);\r\n            });\r\n    }\r\n\r\n    public sendUnregisterRequest() {\r\n        this.logger.info('sending unregister request');\r\n        const span = new Timespan();\r\n        if (!this.options.registration || !this.registrarClient) {\r\n            throw new Error('Internal error - options.registration is undefined');\r\n        }\r\n\r\n        this.connectionTracker.trackStart('unregistration');\r\n        this.registrarClient.unregister().then(() => {\r\n            this.logger.info('Unregister request successful');\r\n            this.connectionTracker.trackEnd('unregistration');\r\n            this.fsm.onUnregistrationSucceed();\r\n            this.connectionTracker.sendTelemetry(ClientEventName.Unregistration, {\r\n                duration: span.duration\r\n            }, []);\r\n        }).catch((error: Error) => {\r\n            this.logger.error(`Unregister request failed. Error: ${error}`);\r\n            this.connectionTracker.trackError('unregistration', error.message);\r\n            this.fsm.onUnregistrationFailed(false);\r\n\r\n            this.connectionTracker.sendTelemetry(ClientEventName.Unregistration, {\r\n                duration: span.duration\r\n            }, []);\r\n        });\r\n    }\r\n\r\n    /** Wrapper to send request with specified timeout */\r\n    public fetchWithTimeout(request: Request, timeoutMs: number): Promise<Response> {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(request).then(resolve).catch(reject);\r\n\r\n            if (timeoutMs !== 0) {\r\n                // tslint:disable-next-line:no-string-based-set-timeout - false positive\r\n                setTimeout(reject, timeoutMs, new Error(`Fetch for '${request.url}' timed out`));\r\n            }\r\n        });\r\n    }\r\n\r\n    public resetTokenBackoff() {\r\n        this.tokenBackoff.reset();\r\n    }\r\n\r\n    public resetRegisterBackoff() {\r\n        if (this.registrarClient) {\r\n            this.registrarClient.cancelPendingRequests();\r\n        }\r\n    }\r\n\r\n    public clearTimers() {\r\n        this.logger.debug('Clearing all pending downstream events related timers');\r\n        for (const key of Object.keys(this.pendingTimers)) {\r\n            this.clearTimer(Number(key));\r\n        }\r\n    }\r\n\r\n    public restartIncallModeTimer() {\r\n        this.clearIncallModeTimerId();\r\n        this.logger.debug('Restarting incall mode timer');\r\n        this.incallModeTimerId = setTimeout(() => {\r\n            this.logger.info('Call mode timer fired');\r\n            this.fsm.onIncallModeTimer();\r\n        }, this.options.incallModeTimeoutMs);\r\n    }\r\n\r\n    public enterIncallMode() {\r\n        this.logger.info('Entering incall mode');\r\n        this.timeoutOptions = this.options.incallTimeoutOptions;\r\n        this.healthBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs);\r\n        this.tokenBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs);\r\n        // Uncomment to enable change of timeout in XHR mode - do it once server start to support it\r\n        // if (this.socket) {\r\n        //     this.socket.socket.options.query = this.buildSocketIoUrlParams();\r\n        // }\r\n        this.inIncallMode = true;\r\n    }\r\n\r\n    public exitIncallMode() {\r\n        this.logger.info('Exiting incall mode');\r\n        this.clearIncallModeTimerId();\r\n        this.timeoutOptions = this.options.timeoutOptions;\r\n        this.healthBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs);\r\n        this.tokenBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs);\r\n        // Uncomment to enable change of timeout in XHR mode - do it once server start to support it\r\n        // if (this.socket) {\r\n        //     this.socket.socket.options.query = this.buildSocketIoUrlParams();\r\n        // }\r\n        this.inIncallMode = false;\r\n    }\r\n\r\n    public isIncallMode() {\r\n        return this.inIncallMode;\r\n    }\r\n\r\n    ////////// SocketIO callbacks //////////\r\n    private onSocketConnecting(transportTypeName: string) {\r\n        this.logger.info(`onSocketConnecting(${transportTypeName})`);\r\n        this.transportTypeName = transportTypeName;\r\n        this.connectionTracker.trackProgress('connecting', this.transportTypeName);\r\n        this.fsm.onConnecting();\r\n    }\r\n    private onSocketConnect() {\r\n        this.logger.info('onSocketConnect');\r\n    }\r\n    private onSocketConnectFailed(reason: string): void {\r\n        this.logger.error('onSocketConnectFailed');\r\n        this.connectionTracker.trackError(\r\n            'connect_failed', reason, true, this.transportTypeName ? this.transportTypeName : this.UNKNOWN_TRANSPORT);\r\n        this.fsm.onConnectingFailed();\r\n    }\r\n    private onSocketDisconnect(): void {\r\n        this.logger.error('onSocketDisconnect');\r\n        this.connectionTracker.trackDisconnected({ serverClosed: !this.fsm.isActive() });\r\n        this.connectionTracker.clearConnectedInfo();\r\n        this.fsm.onSocketError(undefined);\r\n        this.connectionExpireTimestampInSecs = undefined;\r\n    }\r\n    private onSocketReconnect(): void {\r\n        // this callback should not be called, because reconnect on socket.io is disabled, but\r\n        // leave it here in case error in socket.io\r\n        this.logger.error('onSocketReconnect');\r\n        this.fsm.onTrouterConnected();\r\n    }\r\n    private onSocketReconnectFailed(reason: any): void {\r\n        // this callback should not be called, because reconnect on socket.io is disabled, but\r\n        // leave it here in case error in socket.io\r\n        this.logger.error(`onSocketReconnectFailed with '${reason}'`);\r\n        this.fsm.onSocketError(typeof reason === 'string' ? reason : undefined);\r\n    }\r\n    private onSocketReconnecting(): void {\r\n        // this callback should not be called, because reconnect on socket.io is disabled, but\r\n        // leave it here in case error in socket.io\r\n        this.logger.error('onSocketReconnecting');\r\n    }\r\n    private onSocketError(errorObject: any): void {\r\n        this.logger.error(`onSocketError with '${toJson(errorObject)}'`);\r\n        this.connectionTracker.trackError('connectSocket', errorObject);\r\n        this.fsm.onSocketError(typeof errorObject === 'string' ? errorObject : undefined);\r\n    }\r\n    private onSocketMessage(requestJson: string): void {\r\n        this.logger.info('onSocketMessage');\r\n\r\n        let request: TrouterRequest;\r\n        try {\r\n            request = new TrouterRequest(requestJson);\r\n            const chainId = request.headers && request.headers['X-Microsoft-Skype-Chain-ID'];\r\n            const chainIdLogText = chainId ? ` Chain-Id ${chainId}` : '';\r\n            this.logger.info(`Received request N ${request.id}${chainIdLogText} CV ${request.correlationVector} to '${request.url}'`);\r\n            request.startTS = Date.now();\r\n\r\n            if (request.url && this.urlPath && request.url.indexOf(this.urlPath) === 0) {\r\n                request.shortUrl = request.url.substring(this.urlPath.length);\r\n            }\r\n        } catch (error) {\r\n            const msg = toJson(error.stack);\r\n            this.logger.error(`unable to parse request. Error: ${msg}`);\r\n            this.connectionTracker.trackRequest(undefined, msg);\r\n            this.connectionTracker.sendResponseError(`unable to parse request, error: ${error}`);\r\n\r\n            return;\r\n        }\r\n\r\n        request.timeoutTimerId = setTimeout(() => {\r\n            if (request.replied) {\r\n                return;\r\n            }\r\n            this.logger.error(`Request ${request.id} timed out`);\r\n            const responseData = new ResponseData(request.id);\r\n            responseData.status = 504;\r\n            responseData.headers = { 'Trouter-Responder': 'ClientLib' };\r\n            this.sendResponse(request, responseData);\r\n            request.timedout = true;\r\n        }, this.timeoutOptions.requestTimeoutMs);\r\n\r\n        try {\r\n            this.connectionTracker.trackRequest(request);\r\n            this.fsm.onDownstreamRequest(request);\r\n        } catch (error) {\r\n            this.logger.error(`exception in socket.on message. Error: ${toJson(error.stack)}`);\r\n            this.connectionTracker.sendResponseError(error.message, request, undefined);\r\n        }\r\n    }\r\n    private onTrouterConnected(eventArgs: ITrouterConnectedEventArgs): void {\r\n        if (!this.allocateResult) {\r\n            this.logger.error('Invalid internal state - received onTrouterConnected while allocateResult is not set');\r\n\r\n            return;\r\n        }\r\n        this.logger.info(`onTrouterConnected: ${this.allocateResult.url}`);\r\n\r\n        // Prevent next 'trouter.connected' responses from other trouter nodes\r\n        // hackish way, since socket.io doesn't have API for that\r\n        if (this.socket && this.socket.socket && this.socket.socket.options && this.socket.socket.options.query) {\r\n            this.socket.socket.options.query += '&connected=true';\r\n        }\r\n\r\n        // Strip off the first part of the URL, up to the path\r\n        this.urlPath = this.allocateResult.url.replace(/https?:\\/\\/([A-z0-9\\:\\$\\-\\_\\.\\+\\!\\*\\\"\\(\\)\\,]*)\\//, '/');\r\n\r\n        const isNewUrl = (this.connectedUrl !== this.allocateResult.url);\r\n        this.connectedUrl = this.allocateResult.url;\r\n        this.connectionExpireTimestampInSecs = calculateExpireTsInSec(eventArgs.ttl);\r\n\r\n        this.connectionTracker.trackEnd('connectSocket');\r\n        this.connectionTracker.trackConnected(isNewUrl, this.transportTypeName ? this.transportTypeName : this.UNKNOWN_TRANSPORT);\r\n\r\n        this.fsm.onTrouterConnected();\r\n    }\r\n    private onTrouterReconnect(): void {\r\n        this.logger.info('onTrouterReconnect');\r\n        this.fsm.onReconnectRequired();\r\n    }\r\n    private onTrouterMessageLoss(eventArgs: ITrouterMessageLossEventArgs): void {\r\n        this.logger.info('onTrouterMessageLoss');\r\n\r\n        // Send only array of tags for further processing\r\n        this.fsm.onTrouterMessageLost(eventArgs.droppedIndicators);\r\n    }\r\n\r\n    ////////// Other functions //////////\r\n    private onAllocationResponse(allocateResult: IAllocateResult) {\r\n        this.logger.info(`Received allocation response ${JSON.stringify(allocateResult)}`);\r\n        this.allocateResult = allocateResult;\r\n        // in V4 ttl is a string in IAllocateResult - converting it to number with \"+\"\r\n        const ttl: number = +allocateResult.ttl;\r\n        // Don't use allocateResult.connectparams.se here since system clock can be\r\n        // incorrect on client's machine, so using TTL is safer\r\n        this.connectionExpireTimestampInSecs = calculateExpireTsInSec(ttl);\r\n        this.connectionId = this.allocateResult.id || '';\r\n\r\n        this.connectedClientId = this.allocateResult.ccid;\r\n        this.logger.info(`connected client id set {connectedClientId:${this.connectedClientId}}`);\r\n\r\n        this.c2cUrlBase = allocateResult.curlb || '';\r\n        if (this.c2cUrlBase === '') {\r\n            // Try to just remove the port as a fallback if the service didn't provide anything\r\n            let pos = allocateResult.surl.indexOf('://');\r\n            if (pos >= 0) {\r\n                pos = allocateResult.surl.indexOf('/', pos + 3);\r\n                if (pos >= 5 && allocateResult.surl.substr(pos - 5, 5) === ':3443') {\r\n                    this.c2cUrlBase = allocateResult.surl.substr(0, pos - 5);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.fsm.onAllocationSucceed();\r\n    }\r\n\r\n    private onPingResponse() {\r\n        this.logger.info('onPingResponse');\r\n        this.connectionTracker.increasePingResponseCount();\r\n        this.clearPingResponseTimer();\r\n        this.fsm.onPingResponse();\r\n    }\r\n\r\n    private clearPingResponseTimer() {\r\n        if (this.pingResponseTimerId !== undefined) {\r\n            clearTimeout(this.pingResponseTimerId);\r\n            this.pingResponseTimerId = undefined;\r\n        }\r\n    }\r\n\r\n    private buildQuery(map: any): string {\r\n        const components: any[] = [];\r\n        for (const i of Object.keys(map)) {\r\n            if (map.hasOwnProperty(i) && map[i] !== undefined) {\r\n                components.push(`${i}=${map[i]}`);\r\n            }\r\n        }\r\n\r\n        return components.join('&');\r\n    }\r\n\r\n    private appendConnectedClientIds(url: string, isParamsOnly: boolean) {\r\n        let params = '';\r\n        if (url.indexOf('ccid=') < 0) {\r\n            params = `ccid=${this.connectedClientId}&`;\r\n        }\r\n        if (this.domId) {\r\n            params += `dom=${this.domId}&`;\r\n        }\r\n        if (params.length > 0) {\r\n            params = params.slice(0, -1);\r\n        }\r\n        const sep = (isParamsOnly || url.indexOf('?') !== -1) ? ('&') : ('?');\r\n\r\n        return this.appendCorrelationIds(url + sep + params, isParamsOnly);\r\n    }\r\n\r\n    private appendCorrelationIds(url: string, isParamsOnly: boolean): string {\r\n        const sep = (isParamsOnly || url.indexOf('?') !== -1) ? ('&') : ('?');\r\n\r\n        return (url.indexOf('cor_id') < 0)\r\n            ? `${url}${sep}cor_id=${this.options.clientCorrelationID}`\r\n            + `&con_num=${this.clientID}_${this.connectionAttempt}`\r\n            : url;\r\n    }\r\n\r\n    private getHealthUrl(allocateUrl: string): string {\r\n        return `${allocateUrl.substring(0, allocateUrl.lastIndexOf('/a'))}/h`;\r\n    }\r\n\r\n    private safeString(str: any): string {\r\n        return (typeof (str) === 'string') ? str : '';\r\n    }\r\n\r\n    private sendResponse(request: TrouterRequest, responseData: ResponseData): SendResponseResult {\r\n        if (request.timedout) {\r\n            this.logger.error(`Request ${request.id} already timed out`);\r\n\r\n            return SendResponseResult.Timeout;\r\n        }\r\n        if (request.replied) {\r\n            this.logger.error(`Response for request ${request.id} already sent`);\r\n\r\n            return SendResponseResult.Duplicate;\r\n        }\r\n        clearTimeout(request.timeoutTimerId);\r\n        request.timeoutTimerId = 0;\r\n        request.replied = true;\r\n\r\n        responseData.headers = responseData.headers || {};\r\n\r\n        const cv = request.correlationVector;\r\n        this.logger.info(`Sending response for request N ${request.id} CV ${cv} with status ${responseData.status}`);\r\n        if (cv) {\r\n            responseData.headers[cvHeader] = cv;\r\n        }\r\n\r\n        // Echo back the incoming \"trouter-request\" header\r\n        if (request.headers && request.headers['trouter-request'] && !responseData.headers['trouter-request']) {\r\n            responseData.headers['trouter-request'] = request.headers['trouter-request'];\r\n        }\r\n        // Fill in \"trouter-client\" header\r\n        const latencyMS = Date.now() - request.startTS;\r\n        responseData.headers['trouter-client'] = toJson({\r\n            cd: latencyMS\r\n        });\r\n\r\n        this.logger.debug(`response: ${toJson(responseData)}`);\r\n\r\n        if (this.socket) {\r\n            try {\r\n                this.socket.send(toJson(responseData));\r\n                responseData.sentTS = Date.now();\r\n                request.incrementCorrelationVector();\r\n                this.connectionTracker.trackResponse(request, latencyMS, responseData);\r\n                if (this.transportTypeName === 'websocket') {\r\n                    // Send ping request immediately to emulate 'ack' from server, so\r\n                    // client can faster react on network issues\r\n                    this.sendPingRequest();\r\n                }\r\n\r\n                return SendResponseResult.OK;\r\n            } catch (error) {\r\n                const errorMsg = `unable to send data on response.end. Error: ${toJson(error.stack)}`;\r\n                this.logger.error(errorMsg);\r\n                this.connectionTracker.sendResponseError(errorMsg, request, responseData);\r\n\r\n                return SendResponseResult.Disconnected;\r\n            }\r\n        } else {\r\n            this.connectionTracker.sendResponseError('no socket', request, responseData);\r\n\r\n            return SendResponseResult.Disconnected;\r\n        }\r\n    }\r\n\r\n    /*\r\n        Sends the activity state event to Trouter.\r\n        Has implemented support for sending the current state twice (or multiple times)\r\n        after reconnect, first immediately, and theen the second after configured delay.\r\n\r\n        If after the first sent state event the client app changes the state,\r\n        the new state is sent in the second event after the delay.\r\n        Meanwhile the new state is also sent immediately upon\r\n        the change, but the planned second sending (after delay) is triggered anyway,\r\n        to fulfill it's purpose, which is to prevent server-side race condition.\r\n     */\r\n    private sendUserActivityStateMultiple(remaining: number): void {\r\n        const activityEvent = new DownstreamEvent('user.activity');\r\n        activityEvent.args = this.createUserActivityObject(this.userActivityState);\r\n\r\n        this.logger.debug(`Sending user activity '${UserActivityState[this.userActivityState]}', remaining ${remaining - 1}`);\r\n        this.sendDownstreamEvent(activityEvent, () => {\r\n            this.onDownstreamEventResponse(activityEvent);\r\n            this.clearTimer(activityEvent.timeoutTimerId);\r\n            if (remaining > 1) {\r\n                const timerId = setTimeout(() => {\r\n                    this.clearTimer(timerId);\r\n                    this.sendUserActivityStateMultiple(remaining - 1);\r\n                }, this.options.userActivitySecondResendDelayMs);\r\n                this.registerTimer(timerId, 'user.activity/resend');\r\n            }\r\n        });\r\n\r\n        activityEvent.timeoutTimerId = setTimeout(() => {\r\n            this.logger.error('Activity state response timeout is fired');\r\n            this.fsm.onActivityStateResponseTimeout();\r\n            this.clearTimer(activityEvent.timeoutTimerId);\r\n        }, this.timeoutOptions.userActivityResponseTimeoutMs);\r\n        this.registerTimer(activityEvent.timeoutTimerId, 'user.activity/response');\r\n    }\r\n\r\n    private sendDownstreamEvent(event: DownstreamEvent, responseCallback: () => void) {\r\n        this.logger.info(`Sending downstream event ${event.name}`);\r\n\r\n        if (this.socket) {\r\n            this.socket.emit(event.name, event.args, responseCallback);\r\n        }\r\n    }\r\n\r\n    private onDownstreamEventResponse(event: DownstreamEvent): void {\r\n        this.logger.info(`onDownstreamEventResponse(${event.name})`);\r\n    }\r\n\r\n    private registerTimer(timerId: number, timerDescription: string): void {\r\n        this.logger.debug(`registering timer ${timerId} -> ${timerDescription}`);\r\n        this.pendingTimers[timerId] = timerDescription;\r\n    }\r\n\r\n    private clearTimer(id: number): void {\r\n        const timerDescription: string = this.pendingTimers[id];\r\n        this.logger.debug(`clearing timer ${id} -> ${timerDescription}`);\r\n        delete this.pendingTimers[id];\r\n        clearTimeout(id);\r\n    }\r\n\r\n    /**\r\n     * Calculate registration interval. Result is based on configuration parameters\r\n     * and allocation ttl value from trouter server\r\n     */\r\n    private getRegistrationTtl(): number {\r\n        const allocationTtl = calculateTtlInSec(this.connectionExpireTimestampInSecs);\r\n        this.logger.debug(`Current connectionID will expire in ${allocationTtl} seconds`);\r\n\r\n        if (this.options.registration && this.options.registration.registrarTtlSec && allocationTtl > 0) {\r\n            return Math.min(this.options.registration.registrarTtlSec, allocationTtl);\r\n        } else if (this.options.registration && this.options.registration.registrarTtlSec) {\r\n            return this.options.registration.registrarTtlSec;\r\n        } else if (allocationTtl > 0) {\r\n            return allocationTtl;\r\n        }\r\n\r\n        return DEFAULT_REGISTRATION_TIMEOUT_SEC;\r\n    }\r\n\r\n    private clearIncallModeTimerId() {\r\n        if (this.incallModeTimerId !== undefined) {\r\n            this.logger.debug('Clearing in-call mode timer');\r\n            clearTimeout(this.incallModeTimerId);\r\n            this.incallModeTimerId = undefined;\r\n        }\r\n    }\r\n\r\n    private applyConnectionTrackerOptions(options: ITrouterOptions) {\r\n        try {\r\n            const eventLoggerSent = (options.eventLogger && typeof options.eventLogger.logEvent === 'function');\r\n            if (!eventLoggerSent) {\r\n                this.logger.warn('Trouter client event logging disabled due to invalid configuration.');\r\n            } else {\r\n                this.connectionTracker.mergeSettings(options.telemetrySettings);\r\n                this.connectionTracker.enable(options.eventLogger);\r\n            }\r\n        } catch (error) {\r\n            this.logger.warn(`Trouter client event logging disabled. Error: ${toJson(error.stack)}`);\r\n            this.connectionTracker.disable();\r\n        }\r\n    }\r\n\r\n    private createUserActivityObject(state: UserActivityState): object {\r\n        let stateStr: string;\r\n        switch (state) {\r\n            case UserActivityState.Active:   stateStr = 'active'; break;\r\n            case UserActivityState.Inactive: stateStr = 'inactive'; break;\r\n            case UserActivityState.Unknown:  stateStr = 'unknown'; break;\r\n            default:                         stateStr = 'undefined'; break;\r\n        }\r\n\r\n        return { state: stateStr };\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/TrouterConnection.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\nimport { LogProvider, UserActivityState } from './Interfaces';\r\nimport { IMessageLossIndicator, ITrouterRequest, UserActivityEventReason } from './InternalInterfaces';\r\nimport { Logger } from './Logger';\r\n\r\n/**\r\n * After this count of 'soft' (5XX, no response) connection errors, FSM will start a new allocation.\r\n * Doesn't apply for 'hard' errors like 4XX, in this case FSM will start a new allocation immediately.\r\n */\r\nconst MAXIMUM_CONNECTION_ERRORS_COUNT = 2;\r\n\r\nexport interface IWorker {\r\n    getToken(useCache: boolean, backoff: boolean);\r\n\r\n    startConnectionTimer();\r\n    stopConnectionTimer();\r\n    startPingTimer();\r\n    stopPingTimer();\r\n\r\n    /** Returns true if config mandates to not register connection URL with EDF Registrar */\r\n    shouldSkipRegistration();\r\n    /** Returns true if user specified a custom TTL for registration */\r\n    hasCustomRegisterTtl();\r\n    startRegisterTimer();\r\n    stopRegisterTimer();\r\n\r\n    startSocketIo();\r\n    stopSocketIo();\r\n    isIncallMode();\r\n    restartIncallModeTimer();\r\n    enterIncallMode();\r\n    exitIncallMode();\r\n\r\n    dispatchConnected();\r\n    dispatchRegistered();\r\n    dispatchDownstreamRequest(request: ITrouterRequest);\r\n    /** Start reconnecting due to socket error */\r\n    dispatchReconnecting();\r\n    /** Reconnection is requested by server (current connection is still valid) */\r\n    dispatchReconnectIsRequired();\r\n    dispatchDisconnected();\r\n    dispatchTrouterMessageLost(flowTags: IMessageLossIndicator[]);\r\n\r\n    resetAllocationConnectionParams();\r\n    sendAllocateRequest(token: string);\r\n    sendPingRequest();\r\n\r\n    sendUserActivityState(reason: UserActivityEventReason, connected: boolean);\r\n\r\n    sendRegisterRequest();\r\n    sendUnregisterRequest();\r\n\r\n    /** Reset planned token request (if any) and backoff interval */\r\n    resetTokenBackoff();\r\n    /** Reset planned registration requests (if any) */\r\n    resetRegisterBackoff();\r\n    /** Cancel all pending downstream events related timers. */\r\n    clearTimers();\r\n}\r\n\r\nexport enum State {\r\n    Initial,\r\n    /** waiting for token from User */\r\n    RetrievingToken,\r\n    /** waiting for allocation response from service */\r\n    Allocating,\r\n    /**\r\n     * waiting for Socket.IO handshake to be finished. After that Socket.IO will\r\n     * start to try transports and send 'connecting' event\r\n     */\r\n    Handshaking,\r\n    /**\r\n     * waiting for 'connected' event - socket.io is trying different transports.\r\n     * onSocketError event should be ignored, as it's expected event. So, only ConnectFailed or\r\n     * connection timeout meas failed connection\r\n     */\r\n    Connecting,\r\n    /** ready to work */\r\n    Connected,\r\n    /** waiting for token from User to send 'unregister' request */\r\n    UnregisteringRetrievingToken,\r\n    /** waiting for succesful 'unregister' response */\r\n    Unregistering\r\n}\r\n\r\nenum ConnectedSubstate {\r\n    Initial,\r\n    /** waiting for token from User */\r\n    RetrievingToken,\r\n    /** waiting for succesful 'register' response */\r\n    Registering,\r\n    /** Registration succeed */\r\n    Registered,\r\n    /** Registration is skipped */\r\n    NotRegistered\r\n}\r\n\r\n/**\r\n * State machine for trouter\r\n */\r\nexport class TrouterFsm {\r\n    private logger: Logger;\r\n    private state: State = State.Initial;\r\n    private connectedSubstate: ConnectedSubstate;\r\n    private connectionErrors = 0;\r\n    private userActivityState: UserActivityState;\r\n\r\n    constructor(logfunc: LogProvider, private worker: IWorker, private incallModeEnabled: boolean) {\r\n        this.logger = new Logger('ConnectionFsm', logfunc);\r\n        this.connectedSubstate = ConnectedSubstate.Initial;\r\n        this.userActivityState = UserActivityState.Unknown;\r\n    }\r\n\r\n    /** Returns current state */\r\n    public getState(): State {\r\n        return this.state;\r\n    }\r\n\r\n    public isActive(): boolean {\r\n        return this.state === State.Allocating\r\n            || this.state === State.Connected\r\n            || this.state === State.Handshaking\r\n            || this.state === State.Connecting\r\n            || this.state === State.RetrievingToken;\r\n    }\r\n\r\n    //////////// Events ////////////\r\n    /**\r\n     * Start trouter\r\n     */\r\n    public start(): boolean {\r\n        if (this.state === State.Initial) {\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.getToken(true, false);\r\n\r\n            return true;\r\n        } else {\r\n            this.showIgnored('start');\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stop trouter\r\n     * @param dontUnregister    if true, FSM will not unregister. It's needed in case of two simultaneous\r\n     *                          connections, to replace first connection with second\r\n     */\r\n    public stop(dontUnregister: boolean) {\r\n        if (dontUnregister) {\r\n            this.connectedSubstate = ConnectedSubstate.Initial;\r\n        }\r\n\r\n        if (this.worker.isIncallMode()) {\r\n            this.worker.exitIncallMode();\r\n        }\r\n\r\n        this.worker.resetTokenBackoff();\r\n        this.worker.resetRegisterBackoff();\r\n        this.worker.stopConnectionTimer();\r\n        this.worker.stopPingTimer();\r\n        this.worker.clearTimers();\r\n\r\n        if (this.state === State.Connecting\r\n            || this.state === State.Handshaking\r\n            || this.state === State.Connected\r\n        ) {\r\n            this.worker.stopSocketIo();\r\n        }\r\n\r\n        // Stop can happen in any state - the only difference is if registration exists or not\r\n        if (this.isRegistered()) {\r\n            this.setState(State.UnregisteringRetrievingToken);\r\n            this.worker.stopRegisterTimer();\r\n            this.worker.getToken(true, false);\r\n        } else {\r\n            this.setState(State.Initial);\r\n            this.worker.dispatchDisconnected();\r\n        }\r\n    }\r\n\r\n    public onTokenReceived(token: string) {\r\n        if (this.state === State.RetrievingToken) {\r\n            this.setState(State.Allocating);\r\n            this.worker.startConnectionTimer();\r\n            this.worker.sendAllocateRequest(token);\r\n        } else if (this.state === State.Connected && this.connectedSubstate === ConnectedSubstate.RetrievingToken) {\r\n            this.connectedSubstate = ConnectedSubstate.Registering;\r\n            this.worker.sendRegisterRequest();\r\n        } else if (this.state === State.UnregisteringRetrievingToken) {\r\n            this.setState(State.Unregistering);\r\n            this.worker.sendUnregisterRequest();\r\n        } else {\r\n            this.showIgnored('onTokenReceived');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * if disconnectDetected - need to send ping to check if connection is really dead,\r\n     * otherwise - network is available\r\n     */\r\n    public checkConnection(disconnectDetected: boolean) {\r\n        if (disconnectDetected) {\r\n            this.onPingInterval();\r\n        }\r\n    }\r\n\r\n    /** Allocation request succeed with 200 */\r\n    public onAllocationSucceed(): boolean {\r\n        if (this.state === State.Allocating) {\r\n            this.setState(State.Handshaking);\r\n            this.connectedSubstate = ConnectedSubstate.Initial;\r\n            this.worker.startSocketIo();\r\n\r\n            return true;\r\n        } else {\r\n            this.showIgnored('onAllocationSucceed');\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /** Allocation request failed */\r\n    public onAllocationFailed(unauthorized: boolean) {\r\n        if (this.state === State.Allocating) {\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.stopConnectionTimer();\r\n            this.worker.getToken(!unauthorized, true);\r\n        } else {\r\n            this.showIgnored('onAllocationFailed');\r\n        }\r\n    }\r\n\r\n    /** Connection didn't succeed in given timeout */\r\n    public onConnectingTimeout() {\r\n        // implementation note: this also called from onConnectingFailed\r\n        if (this.state === State.Allocating\r\n            || this.state === State.Connecting\r\n            || this.state === State.Handshaking\r\n        ) {\r\n            this.setState(State.RetrievingToken);\r\n            this.resetAllocationIfNecessary(undefined);\r\n            this.worker.stopSocketIo();\r\n            this.worker.getToken(true, false);\r\n        } else {\r\n            this.showIgnored('onConnectingTimeout');\r\n        }\r\n    }\r\n\r\n    /** socket.io handshake succeed and socket.io is trying next transport */\r\n    public onConnecting() {\r\n        if (this.state === State.Handshaking) {\r\n            this.setState(State.Connecting);\r\n        } else {\r\n            this.showIgnored('onConnecting');\r\n        }\r\n    }\r\n\r\n    /** Socket.io connection wasn't established */\r\n    public onConnectingFailed() {\r\n        // This callback will be called when all transports failed to connect, i.e. socket.io can't proceed\r\n        if (this.state === State.Connecting) {\r\n            this.onConnectingTimeout();\r\n        } else if (this.state === State.Handshaking) {\r\n            // It should never happen, because socket.io should try at least one transport\r\n            this.logger.error('Unexpected error in Socket.io - no valid transports');\r\n            this.onConnectingTimeout();\r\n        } else {\r\n            this.showIgnored('onConnectingFailed');\r\n        }\r\n    }\r\n\r\n    /** Socket.io error (or disconnect) */\r\n    public onSocketError(error?: string) {\r\n        if (this.state === State.Handshaking || this.state === State.Connected) {\r\n            this.worker.stopSocketIo();\r\n            this.worker.stopPingTimer();\r\n            this.worker.clearTimers();\r\n            this.worker.stopConnectionTimer();\r\n            if (this.state !== State.Connected) {\r\n                this.worker.resetAllocationConnectionParams();\r\n            }\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.dispatchReconnecting();\r\n            this.worker.getToken(true, false);\r\n        } else {\r\n            // Such error can happen in Connecting state, which means that\r\n            // websocket transport failed to establish connection\r\n            this.showIgnored('onSocketError');\r\n        }\r\n    }\r\n\r\n    /** Received 'trouter.connected' event from service */\r\n    public onTrouterConnected() {\r\n        if (this.state === State.Connecting) {\r\n            this.setState(State.Connected);\r\n            this.worker.resetTokenBackoff();\r\n            this.worker.stopConnectionTimer();\r\n            this.worker.sendUserActivityState(UserActivityEventReason.Connected, true);\r\n            this.worker.startPingTimer();\r\n            this.worker.dispatchConnected();\r\n            this.connectionErrors = 0;\r\n            if (this.worker.shouldSkipRegistration()) {\r\n                this.connectedSubstate = ConnectedSubstate.NotRegistered;\r\n                this.worker.dispatchRegistered();\r\n            } else {\r\n                this.connectedSubstate = ConnectedSubstate.RetrievingToken;\r\n                this.worker.getToken(true, false);\r\n            }\r\n        } else {\r\n            this.showIgnored('onTrouterConnected');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Received 'trouter.reconnect' event from service,\r\n     * need to establish a new connection\r\n     */\r\n    public onReconnectRequired() {\r\n        this.worker.dispatchReconnectIsRequired();\r\n    }\r\n\r\n    /** Request from downstream is received */\r\n    public onDownstreamRequest(request: ITrouterRequest) {\r\n        if (this.state === State.Connected) {\r\n            this.switchToIncallModeIfEnabled();\r\n            this.worker.dispatchDownstreamRequest(request);\r\n        } else {\r\n            this.showIgnored('onDownstreamRequest');\r\n        }\r\n    }\r\n\r\n    public onTrouterMessageLost(messageLossIndicators: IMessageLossIndicator[]) {\r\n        if (this.state === State.Connected) {\r\n            this.worker.dispatchTrouterMessageLost(messageLossIndicators);\r\n        } else {\r\n            this.showIgnored('onTrouterMessageLost');\r\n        }\r\n    }\r\n\r\n    /** Timer for ping request fired */\r\n    public onPingInterval() {\r\n        if (this.state === State.Connected) {\r\n            this.worker.sendPingRequest();\r\n        } else {\r\n            this.showIgnored('onPingInterval');\r\n        }\r\n    }\r\n\r\n    /** No pong response from service within timeout */\r\n    public onPingResponseTimeout() {\r\n        this.onMissedResponse('onPingResponseTimeout');\r\n    }\r\n\r\n    /** Pong response */\r\n    public onPingResponse() {\r\n        if (this.state === State.Connected) {\r\n            // do nothing\r\n        } else {\r\n            this.showIgnored('onPingResponse');\r\n        }\r\n    }\r\n\r\n    public onRegistrationFailed(unauthorized: boolean) {\r\n        if (this.state === State.Connected\r\n            && this.connectedSubstate === ConnectedSubstate.Registering\r\n        ) {\r\n            this.connectedSubstate = ConnectedSubstate.RetrievingToken;\r\n            this.worker.getToken(!unauthorized, true);\r\n        } else {\r\n            this.showIgnored('onRegistrationFailed');\r\n        }\r\n    }\r\n\r\n    public onRegistrationSucceed() {\r\n        if (this.state === State.Connected) {\r\n            if (this.connectedSubstate === ConnectedSubstate.Registering) {\r\n                this.connectedSubstate = ConnectedSubstate.Registered;\r\n                this.worker.dispatchRegistered();\r\n            }\r\n            if (this.worker.hasCustomRegisterTtl()) {\r\n                this.worker.startRegisterTimer();\r\n            }\r\n        } else {\r\n            this.showIgnored('onRegistrationSucceed');\r\n        }\r\n    }\r\n\r\n    /** Registration TTL is about to expire */\r\n    public onRegistrationTimeout() {\r\n        if (this.state === State.Connected\r\n            && this.connectedSubstate !== ConnectedSubstate.NotRegistered\r\n        ) {\r\n            this.connectedSubstate = ConnectedSubstate.RetrievingToken;\r\n            this.worker.getToken(true, false);\r\n        } else {\r\n            this.showIgnored('onRegistrationTimeout');\r\n        }\r\n    }\r\n\r\n    public onUnregistrationFailed(unauthorized: boolean) {\r\n        if (this.state === State.Unregistering) {\r\n            this.setState(State.UnregisteringRetrievingToken);\r\n            this.worker.getToken(!unauthorized, !unauthorized);\r\n        } else {\r\n            this.showIgnored('onUnregistrationFailed');\r\n        }\r\n    }\r\n\r\n    public onUnregistrationSucceed() {\r\n        if (this.state === State.Unregistering) {\r\n            this.setState(State.Initial);\r\n            this.worker.dispatchDisconnected();\r\n        } else {\r\n            this.showIgnored('onUnregistrationSucceed');\r\n        }\r\n    }\r\n\r\n    public onIncallModeTimer() {\r\n        this.worker.exitIncallMode();\r\n\r\n        if (this.state === State.Connected) {\r\n            this.worker.stopPingTimer();\r\n            this.worker.startPingTimer();\r\n        } else {\r\n            this.showIgnored('onIncallModeTimer');\r\n        }\r\n    }\r\n\r\n    public onSetUserActivityState(state: UserActivityState, changed: boolean) {\r\n        if (changed) {\r\n            this.logger.info(`Changing user activity state to '${UserActivityState[state]}'`);\r\n            this.worker.sendUserActivityState(UserActivityEventReason.Modified, this.state === State.Connected);\r\n        } else {\r\n            this.logger.debug(`Not changing the same user activity state '${UserActivityState[state]}'`);\r\n        }\r\n    }\r\n\r\n    public onActivityStateResponseTimeout() {\r\n        this.onMissedResponse('onActivityStateResponseTimeout');\r\n    }\r\n\r\n\r\n    public forceReconnect() {\r\n        this.setState(State.RetrievingToken);\r\n        // TBD what about registration-related stuff?\r\n        this.worker.resetTokenBackoff();\r\n        this.worker.stopConnectionTimer();\r\n        this.worker.stopPingTimer();\r\n        this.worker.clearTimers();\r\n        this.worker.stopSocketIo();\r\n        this.worker.dispatchReconnecting();\r\n        this.worker.getToken(true, false);\r\n    }\r\n\r\n    private onMissedResponse(onResponseHandlerName: string) {\r\n        if (this.state === State.Connected) {\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.stopPingTimer();\r\n            this.worker.clearTimers();\r\n            this.worker.stopSocketIo();\r\n            this.worker.dispatchReconnecting();\r\n            this.worker.getToken(true, false);\r\n        } else {\r\n            this.showIgnored(onResponseHandlerName);\r\n        }\r\n    }\r\n\r\n    private showIgnored(event: string) {\r\n        this.logger.debug(`Ignoring event '${event}' in state '${State[this.state]}'`);\r\n    }\r\n\r\n    private setState(state: State) {\r\n        this.logger.info(`Switching from state '${State[this.state]}' to state '${State[state]}'`);\r\n        if (this.state === state) {\r\n            this.logger.error(`Attempt to switching into the current state '${State[state]}'`);\r\n\r\n            return;\r\n        }\r\n        this.state = state;\r\n    }\r\n\r\n    private resetAllocationIfNecessary(error?: string) {\r\n        this.connectionErrors++;\r\n        if (this.connectionErrors >= MAXIMUM_CONNECTION_ERRORS_COUNT  // Too many errors for this allocation\r\n            || (error !== undefined && /^4\\d\\d /.test(error)) // Client error (like 401) - need to start with a new allocation\r\n        ) {\r\n            this.logger.error(`Connection error count is ${this.connectionErrors} - will reset allocation`);\r\n            this.connectionErrors = 0;\r\n        } else {\r\n            this.logger.info(`Connection error count is ${this.connectionErrors} - will NOT reset allocation`);\r\n        }\r\n    }\r\n\r\n    private isRegistered() {\r\n        return this.connectedSubstate === ConnectedSubstate.Registered\r\n            || this.connectedSubstate === ConnectedSubstate.Registering;\r\n    }\r\n\r\n    private switchToIncallModeIfEnabled() {\r\n        if (this.incallModeEnabled) {\r\n            if (!this.worker.isIncallMode()) {\r\n                this.worker.enterIncallMode();\r\n                this.worker.stopPingTimer();\r\n                this.worker.startPingTimer();\r\n            }\r\n            this.worker.restartIncallModeTimer();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/TrouterFsm.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\nimport { LogProvider, TrouterState } from './Interfaces';\r\nimport { Logger } from './Logger';\r\n\r\nexport interface IManagerWorker {\r\n    startFirstConnection();\r\n    stopFirstConnection(dontUnregister: boolean);\r\n\r\n    startSecondConnection();\r\n    stopSecondConnection(dontUnregister: boolean);\r\n    stopSecondConnectionDelayed();\r\n\r\n    switchConnections();\r\n    doesSecondConnectionExist(): boolean;\r\n\r\n    dispatchConnected();\r\n    dispatchReconnecting();\r\n    dispatchStopped();\r\n}\r\n\r\n/**\r\n * State machine for manager\r\n */\r\nexport class TrouterManagerFsm {\r\n    private logger: Logger;\r\n    private state: TrouterState = TrouterState.Unknown;\r\n\r\n    constructor(logFunc: LogProvider, private worker: IManagerWorker) {\r\n        this.logger = new Logger('ManagerFsm', logFunc);\r\n    }\r\n\r\n    public start() {\r\n        if (this.state === TrouterState.Unknown) {\r\n            this.setState(TrouterState.Disconnected);\r\n            this.worker.startFirstConnection();\r\n        } else {\r\n            this.showIgnored('start');\r\n        }\r\n    }\r\n\r\n    public stop() {\r\n        if (this.state !== TrouterState.Unknown) {\r\n            this.setState(TrouterState.Unknown);\r\n            this.worker.stopFirstConnection(false);\r\n            this.worker.stopSecondConnection(false);\r\n        } else {\r\n            this.showIgnored('stop');\r\n        }\r\n    }\r\n\r\n    /** Returns current state */\r\n    public getState(): TrouterState {\r\n        return this.state;\r\n    }\r\n\r\n    public onConnected(first: boolean) {\r\n        if (this.state === TrouterState.Disconnected && first) {\r\n            if (this.worker.doesSecondConnectionExist()) {\r\n                this.setState(TrouterState.Switching);\r\n            } else {\r\n                this.setState(TrouterState.Connected);\r\n                this.worker.dispatchConnected();\r\n            }\r\n        } else {\r\n            this.showIgnored(`onConnected(${first})`);\r\n        }\r\n    }\r\n\r\n    public onRegistered(first: boolean) {\r\n        if (this.state === TrouterState.Disconnected && !first) {\r\n            this.setState(TrouterState.Connected);\r\n            this.worker.switchConnections();\r\n            this.worker.stopSecondConnection(true);\r\n            this.worker.dispatchConnected();\r\n        } else if (this.state === TrouterState.Switching && !first) {\r\n            this.setState(TrouterState.Connected);\r\n            this.worker.switchConnections();\r\n            this.worker.stopSecondConnectionDelayed();\r\n            this.worker.dispatchConnected();\r\n        } else {\r\n            this.showIgnored(`onRegistered(${first})`);\r\n        }\r\n    }\r\n\r\n    public onReconnecting(first: boolean) {\r\n        if (this.state === TrouterState.Connected && first) {\r\n            this.setState(TrouterState.Disconnected);\r\n            this.worker.dispatchReconnecting();\r\n        } else if (this.state === TrouterState.Switching && first) {\r\n            this.setState(TrouterState.Disconnected);\r\n            this.worker.dispatchReconnecting();\r\n        } else {\r\n            this.showIgnored(`onReconnecting(${first})`);\r\n        }\r\n    }\r\n\r\n    public onReconnectionRequired(first: boolean) {\r\n        if (this.state === TrouterState.Connected && first) {\r\n            this.setState(TrouterState.Switching);\r\n            this.worker.startSecondConnection();\r\n        } else if (this.state === TrouterState.Disconnected && first) {\r\n            this.worker.startSecondConnection();\r\n        } else {\r\n            this.showIgnored(`onReconnectionRequired(${first})`);\r\n        }\r\n    }\r\n\r\n    public onDisconnected(first: boolean) {\r\n        if (this.state === TrouterState.Unknown && first) {\r\n            this.worker.dispatchStopped();\r\n        } else {\r\n            this.showIgnored(`onDisconnected(${first})`);\r\n        }\r\n    }\r\n\r\n    private showIgnored(event: string) {\r\n        this.logger.info(`Ignoring event '${event}' in state '${TrouterState[this.state]}'`);\r\n    }\r\n\r\n    private setState(state: TrouterState) {\r\n        this.logger.info(`Switching from state '${TrouterState[this.state]}' to state '${TrouterState[state]}'`);\r\n        if (this.state === state) {\r\n            this.logger.error(`Attempt to switching into the current state '${TrouterState[state]}'`);\r\n\r\n            return;\r\n        }\r\n        this.state = state;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/TrouterManagerFsm.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n// tslint:disable:strict-boolean-expressions\r\n\r\nimport { CLIENT_VERSION } from './Constants';\r\nimport {\r\n    Client, ConnectionInfo, IConnectionInfo,\r\n    ITrouterServiceBase, ITrouterServiceConfig, Listener, LogProvider, MessageHandler,\r\n    Request, Response, StateChangedListener,\r\n    TrouterConnectionListener, TrouterRequestBody, TrouterState, TrouterTelemetrySettings,\r\n    UserActivityState\r\n} from './Interfaces';\r\nimport { ITrouterOptions, ServerState } from './InternalInterfaces';\r\nimport { Logger } from './Logger';\r\nimport { MessageHandlerRegistry } from './MessageHandler';\r\nimport { addCacheAsBackupTo } from './SkypeTokenProviderWithCache';\r\nimport { TrouterManager } from './TrouterManager';\r\nimport { TrouterUrlPromise } from './TrouterUrlPromise';\r\n\r\nexport { MessageHandler, TrouterState, UserActivityState };\r\n\r\ninterface IEcsConfig {\r\n    TrouterConnectionUrl?: string;\r\n    TelemetryEnabled?: boolean;\r\n    ClientTelemetryEventEnabled: {\r\n        trouter_js_client_connected?: boolean;\r\n        trouter_js_client_disconnected?: boolean;\r\n        trouter_js_client_error?: boolean;\r\n        trouter_js_client_progress?: boolean;\r\n        trouter_js_client_response?: boolean;\r\n        logHealthCheckError?: boolean;\r\n        logSendPingError?: boolean;\r\n        numberOfStepsToMaintain?: number;\r\n        sendProgressTimeoutSecs?: number;\r\n    };\r\n}\r\n\r\nfunction populateTelemetryOptions(startingCfg: TrouterTelemetrySettings, ecsCfg?: IEcsConfig): TrouterTelemetrySettings {\r\n    if (!ecsCfg) {\r\n        return startingCfg;\r\n    }\r\n\r\n    let res = {\r\n        ...startingCfg,\r\n        ...{\r\n            enabled: ecsCfg.TelemetryEnabled\r\n        }\r\n    };\r\n\r\n    if (ecsCfg.ClientTelemetryEventEnabled !== undefined) {\r\n        res = {\r\n            ...res,\r\n            ...ecsCfg.ClientTelemetryEventEnabled\r\n        };\r\n    }\r\n\r\n    return <TrouterTelemetrySettings>res;\r\n}\r\n\r\nfunction populateTrouterOptions(cfg: ITrouterServiceConfig, ecsCfg?: IEcsConfig): ITrouterOptions {\r\n    return {\r\n        clientInfo: {\r\n            ua: cfg.trouterSettings.productName,\r\n            v: cfg.trouterSettings.version\r\n        },\r\n        ioOptions: {\r\n            // uncomment for manual testing\r\n            // transports: ['xhr-polling'],\r\n            // 'connect timeout': XXX, 10000 by default in socket.io code\r\n            ackTimeoutMs: 5000\r\n        },\r\n        clientCorrelationID: cfg.trouterSettings.sessionId,\r\n        environment: cfg.trouterSettings.environment,\r\n        telemetrySettings: populateTelemetryOptions(cfg.telemetryConfig.settings, ecsCfg),\r\n        eventLogger: cfg.telemetryConfig.eventLogger,\r\n\r\n        endpointId: cfg.trouterSettings.registrationId,\r\n        trouterUrl: (ecsCfg && ecsCfg.TrouterConnectionUrl) || cfg.trouterSettings.trouterServiceUrl,\r\n        registration: cfg.trouterSettings.registrarServiceUrl\r\n            ? {\r\n                registrarUrl: cfg.trouterSettings.registrarServiceUrl,\r\n                registrationId: cfg.trouterSettings.registrationId || '',\r\n\r\n                pnhAppId: cfg.trouterSettings.pnhAppId || '',\r\n                platform: cfg.trouterSettings.platform || '',\r\n                pnhTemplateKey: cfg.trouterSettings.pnhTemplate || '',\r\n                platformUIVersion: cfg.trouterSettings.platformUIVersion || '',\r\n                productContext: cfg.trouterSettings.pnhProductContext || undefined,\r\n                context: cfg.trouterSettings.pnhContext || '',\r\n\r\n                registrarTtlSec: (cfg.trouterSettings.maxRegistrationTimeInMs || 0) / 1000\r\n            }\r\n            : undefined,\r\n\r\n        timeoutOptions: {\r\n            connectionTimeoutMs: cfg.trouterSettings.trouterConnectTimeoutInMs || 30000,\r\n            fetchTimeoutMs: 10000,\r\n            pingTimeoutMs: 40000,\r\n            pongTimeoutMs: 5000,\r\n            maxBackoffMs: 30000,\r\n            requestTimeoutMs: 5000,\r\n            userActivityResponseTimeoutMs: 10000,\r\n            ...cfg.trouterSettings.timeoutOptions\r\n        },\r\n        incallTimeoutOptions: {\r\n            connectionTimeoutMs: 10000,\r\n            fetchTimeoutMs: 5000,\r\n            pingTimeoutMs: 5000,\r\n            pongTimeoutMs: 2000,\r\n            maxBackoffMs: 10000,\r\n            requestTimeoutMs: 5000,\r\n            userActivityResponseTimeoutMs: 10000,\r\n            ...cfg.trouterSettings.incallTimeoutOptions\r\n        },\r\n        incallModeTimeoutMs: cfg.trouterSettings.incallModeTimeoutMs || 0,\r\n        lingeringConnectionDelayMs: 60000,\r\n        userActivitySecondResendDelayMs: cfg.trouterSettings.userActivitySecondResendDelayMs || 10000\r\n    };\r\n}\r\n\r\nexport type TelemetryEvent = {\r\n    // tslint:disable-next-line:no-reserved-keywords\r\n    type: string;\r\n    registrationId: string;\r\n    connectionId?: string;\r\n    connectedClientId?: string;\r\n};\r\n\r\ninterface IWrappedStateChangedListener extends TrouterConnectionListener {\r\n    (state: TrouterState, info?: IConnectionInfo): void;\r\n    wrappedCallback: StateChangedListener;\r\n}\r\n\r\n/**\r\n * TrouterService implementation class\r\n */\r\nexport class TrouterService implements ITrouterServiceBase, Client, Listener {\r\n    private logger: Logger;\r\n    private trouterServer?: TrouterManager;\r\n    private listeners: { [path: string]: Listener };\r\n    private connectionInfo: ConnectionInfo | null;\r\n    private trouterCfg?: ITrouterServiceConfig;\r\n    private ecsCfg?: IEcsConfig;\r\n\r\n\r\n    // Legacy fields\r\n    private trouterUrlPromise: TrouterUrlPromise;\r\n    private stateChangedListeners: (TrouterConnectionListener | IWrappedStateChangedListener)[] = [];\r\n    private messageHandlers: MessageHandlerRegistry;\r\n\r\n    public constructor(private logProvider: LogProvider) {\r\n        this.logger = new Logger('Trouter', logProvider);\r\n        this.trouterUrlPromise = new TrouterUrlPromise(logProvider);\r\n        this.messageHandlers = new MessageHandlerRegistry(logProvider);\r\n        this.listeners = {};\r\n        this.connectionInfo = null;\r\n        this.logger.info(`Created TrouterService version ${CLIENT_VERSION}`);\r\n    }\r\n\r\n    public start(cfg: ITrouterServiceConfig): void {\r\n        this.logger.info('Start');\r\n\r\n        if (!cfg.trouterSettings.disableInternalSkypeTokenCache) {\r\n            const provider = cfg.skypeTokenProvider;\r\n            cfg.skypeTokenProvider = addCacheAsBackupTo(provider);\r\n        }\r\n\r\n        this.trouterCfg = cfg;\r\n        const options = populateTrouterOptions(cfg, this.ecsCfg);\r\n        if (this.trouterServer === undefined) {\r\n            this.trouterServer = new TrouterManager(\r\n                this.logProvider,\r\n                options,\r\n                cfg.skypeTokenProvider,\r\n                this);\r\n        }\r\n        this.trouterServer.start();\r\n    }\r\n\r\n    public stop(): void {\r\n        this.logger.info('close connection');\r\n        this.trouterUrlPromise.rejectUrl(new Error('TrouterService is stopped'));\r\n\r\n        if (this.trouterServer !== undefined) {\r\n            this.trouterServer.stop();\r\n        }\r\n    }\r\n\r\n    public async setEcsConfig(fullEcsData: {}): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const ecsSection = 'TrouterJScriptClient';\r\n            this.ecsCfg = <IEcsConfig>(fullEcsData[ecsSection]);\r\n            this.logger.info(`Setting ECS configuration to ${JSON.stringify(this.ecsCfg)}`);\r\n            if (this.trouterServer !== undefined && this.trouterCfg !== undefined) {\r\n                const options = populateTrouterOptions(this.trouterCfg, this.ecsCfg);\r\n                this.trouterServer.configure(options);\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notifies trouter that network is restored - trouter will try to restore connection immediately\r\n     */\r\n    public checkConnection(disconnectDetected?: boolean): void {\r\n        if (this.trouterServer !== undefined) {\r\n            this.trouterServer.checkConnection(disconnectDetected || false);\r\n        }\r\n    }\r\n\r\n    public async resendRegistration(): Promise<void> {\r\n        if (!this.trouterServer) {\r\n            throw new Error('resendRegistration called too early');\r\n        }\r\n\r\n        return this.trouterServer.resendRegistration();\r\n    }\r\n\r\n\r\n    // Listeners\r\n\r\n    public registerListener(listener: Listener, path: string): boolean {\r\n        if (path === '' || path[0] !== '/' || path.indexOf('?') >= 0 || path.indexOf('#') >= 0) {\r\n            this.logger.error(`Listener path '${path}' is not valid`);\r\n\r\n            return false;\r\n        }\r\n        if (this.listeners[path]) {\r\n            this.logger.error(`Another listener is already registered for path '${path}'`);\r\n\r\n            return false;\r\n        }\r\n        this.listeners[path] = listener;\r\n        this.logger.debug(`Listener for path '${path}' registered`);\r\n        if (this.connectionInfo) {\r\n            listener.onTrouterConnected(this.connectionInfo.baseEndpointUrl + path, this.connectionInfo);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public unregisterListener(listener: Listener): boolean {\r\n        const paths: string[] = [];\r\n        for (const path of Object.keys(this.listeners)) {\r\n            if (this.listeners[path] === listener) {\r\n                paths.push(path);\r\n            }\r\n        }\r\n        if (paths.length === 0) {\r\n            return false;\r\n        }\r\n        for (const path of paths) {\r\n            delete this.listeners[path];\r\n        }\r\n        this.logger.debug(`Listener for path(s) '${paths.join('\\', \\'')}' unregistered`);\r\n\r\n        return true;\r\n    }\r\n\r\n    public onTrouterConnected(endpointUrl: string, connectionInfo: ConnectionInfo): void {\r\n        this.logger.debug('Trouter is now connected');\r\n        for (const path of Object.keys(this.listeners)) {\r\n            try {\r\n                this.listeners[path].onTrouterConnected(connectionInfo.baseEndpointUrl + path, connectionInfo);\r\n            } catch (e) {\r\n                this.logger.error(`Listener '${path}' threw an exception from onTrouterConnected(): ${e}`);\r\n            }\r\n        }\r\n        this.connectionInfo = connectionInfo;\r\n\r\n        this.trouterUrlPromise.resolveUrl(endpointUrl);\r\n        this.notifyStateChanged(TrouterState.Connected, {\r\n            url: endpointUrl,\r\n            getRemainingTtlInSec: () => connectionInfo.connectionTtlSec\r\n        });\r\n    }\r\n\r\n    public onTrouterDisconnected(): void {\r\n        this.logger.debug('Trouter is now disconnected');\r\n        this.connectionInfo = null;\r\n        for (const path of Object.keys(this.listeners)) {\r\n            const func = this.listeners[path].onTrouterDisconnected;\r\n            if (func) {\r\n                try {\r\n                    func();\r\n                } catch (e) {\r\n                    this.logger.error(`Listener '${path}' threw an exception from onTrouterDisconnected(): ${e}`);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.notifyStateChanged(TrouterState.Disconnected);\r\n    }\r\n\r\n    public onTrouterRequest(request: Request, response: Response): void {\r\n        let bestPath = '';\r\n        for (const path of Object.keys(this.listeners)) {\r\n            if (request.path.substring(0, path.length) === path && path.length > bestPath.length) {\r\n                bestPath = path;\r\n            }\r\n        }\r\n        if (bestPath !== '') {\r\n            try {\r\n                this.listeners[bestPath].onTrouterRequest(request, response);\r\n            } catch (e) {\r\n                this.logger.error(`Listener '${bestPath}' threw an exception from onTrouterRequest(): ${e}`);\r\n                response.status = 500;\r\n                response.headers = { 'Trouter-Responder': 'ClientLib' };\r\n                response.send();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (this.tryMessageHandlers(request, response)) {\r\n            return;\r\n        }\r\n\r\n        response.status = 404;\r\n        response.headers = { 'Trouter-Responder': 'ClientLib' };\r\n        response.send();\r\n    }\r\n\r\n    public onTrouterMessageLoss(flowTags: string[]): boolean {\r\n        this.logger.info(`onTrouterMessageLoss called with value ${flowTags}`);\r\n\r\n        let messageLossProcessed = true;\r\n        for (const path of Object.keys(this.listeners)) {\r\n            const func = this.listeners[path].onTrouterMessageLoss;\r\n            if (func) {\r\n                try {\r\n                    messageLossProcessed = func(flowTags) && messageLossProcessed;\r\n\r\n                    if (messageLossProcessed === undefined) {\r\n                        this.logger.error(`Listener '${path}' did not response with boolean value onTrouterMessageLoss()`);\r\n                        messageLossProcessed = false;\r\n                    }\r\n                } catch (e) {\r\n                    this.logger.error(`Listener '${path}' threw an exception from onTrouterMessageLoss(): ${e}`);\r\n                    messageLossProcessed = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return messageLossProcessed;\r\n    }\r\n\r\n    public setUserActivityState(state: UserActivityState): void {\r\n        if (state !== UserActivityState.Active && state !== UserActivityState.Inactive) {\r\n            throw new Error(`setUserActivityState called with unsupported value ${state}`);\r\n        }\r\n        this.logger.info(`setUserActivityState called with value ${UserActivityState[state]}`);\r\n\r\n        if (this.trouterServer && this.state() !== TrouterState.Unknown) {\r\n            this.trouterServer.setUserActivityState(state);\r\n        } else {\r\n            throw new Error('setUserActivityState called too early');\r\n        }\r\n    }\r\n\r\n\r\n    // Legacy API\r\n\r\n    public state(): TrouterState {\r\n        if (this.trouterServer !== undefined) {\r\n            return this.trouterServer.getState();\r\n        }\r\n\r\n        return TrouterState.Unknown;\r\n    }\r\n\r\n    public getServerState(): ServerState | undefined {\r\n        if (this.trouterServer !== undefined) {\r\n            return this.trouterServer.getServerState();\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    // tslint:disable-next-line:promise-function-async\r\n    public getTrouterUrlAsync(): Promise<string> {\r\n        if (this.trouterServer !== undefined) {\r\n            return this.trouterUrlPromise.getPromise();\r\n        } else {\r\n            return Promise.reject(new Error('TrouterService has not been started'));\r\n        }\r\n    }\r\n\r\n    public onStateChanged(callback: StateChangedListener | undefined): void {\r\n        this.logger.info('onStateChanged called');\r\n        if (callback === undefined) {\r\n            this.stateChangedListeners = this.stateChangedListeners.filter(\r\n                (listener) => ((<IWrappedStateChangedListener>listener).wrappedCallback === undefined));\r\n        } else {\r\n            this.offStateChanged(callback);\r\n            const wrapper = (state: TrouterState, info?: IConnectionInfo) => {\r\n                callback(state, info ? info.url : '');\r\n            };\r\n            (<IWrappedStateChangedListener>wrapper).wrappedCallback = callback;\r\n            this.stateChangedListeners.push(wrapper);\r\n        }\r\n    }\r\n\r\n    public offStateChanged(callback: StateChangedListener): boolean {\r\n        this.logger.info('offStateChanged called');\r\n        const sizeBeforeRemoval = this.stateChangedListeners.length;\r\n        this.stateChangedListeners = this.stateChangedListeners.filter(\r\n            (listener) => ((<IWrappedStateChangedListener>listener).wrappedCallback !== callback));\r\n\r\n        return (sizeBeforeRemoval > this.stateChangedListeners.length);\r\n    }\r\n\r\n    public addCallback(callback: TrouterConnectionListener): void {\r\n        this.logger.info('addListener called');\r\n        const index = this.stateChangedListeners.indexOf(callback, 0);\r\n        if (index === -1 && callback !== undefined) {\r\n            this.stateChangedListeners.push(callback);\r\n        }\r\n    }\r\n\r\n    public removeCallback(callback: TrouterConnectionListener): boolean {\r\n        this.logger.info('removeListener called');\r\n        const index = this.stateChangedListeners.indexOf(callback, 0);\r\n        if (index > -1) {\r\n            this.stateChangedListeners.splice(index, 1);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public registerMessageHandler(handler: MessageHandler) {\r\n        this.logger.info('registerMessageHandler is called');\r\n        this.messageHandlers.register(handler);\r\n    }\r\n\r\n    public clearMessageHandlers(): void {\r\n        this.logger.info('clearMessageHandlers is called');\r\n        this.messageHandlers.clear();\r\n    }\r\n\r\n    private notifyStateChanged(state: TrouterState, info?: IConnectionInfo): void {\r\n        this.logger.info(`notifyStateChanged called, will forward to ${this.stateChangedListeners.length} listeners`);\r\n        this.stateChangedListeners.forEach(callback => {\r\n            try {\r\n                callback(state, info);\r\n            } catch (error) {\r\n                this.logger.error(`Error in callback ${error}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    private tryMessageHandlers(request: Request, response: Response): boolean {\r\n        if (!this.messageHandlers.active()) {\r\n\r\n            return false;\r\n        }\r\n\r\n        let body: TrouterRequestBody | undefined;\r\n        let eventId: number | null = null;\r\n\r\n        try {\r\n            body = <TrouterRequestBody>JSON.parse(request.body);\r\n            eventId = (body && (body.evt || body.eventId)) || null;\r\n        } catch (e) { }\r\n\r\n        const message = {\r\n            eventId: eventId,\r\n            url: (this.connectionInfo ? this.connectionInfo.baseEndpointUrl : '') + request.path,\r\n            body: body,\r\n            rawBody: request.body,\r\n            headers: request.headers\r\n        };\r\n\r\n        const result = this.messageHandlers.handleMessage(message);\r\n        if (!result.isHandled) {\r\n\r\n            return false;\r\n        }\r\n\r\n        response.status = result.resultCode;\r\n        if (result.responseHeaders) {\r\n            response.headers = result.responseHeaders;\r\n        }\r\n        if (result.responseBody) {\r\n            response.body = result.responseBody;\r\n        }\r\n        response.send();\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function createTrouterService(logger: LogProvider): ITrouterServiceBase {\r\n    return new TrouterService(logger);\r\n}\r\n\r\nexport function getTrouterServiceVersion(): string {\r\n    return CLIENT_VERSION;\r\n}\r\n\r\nexport function replaceTrouterUrlBase(existingUrl: string, newBase: string): string {\r\n    const schemaSepPos = existingUrl.indexOf('://');\r\n    if (schemaSepPos >= 0) {\r\n        const pathSepPos = existingUrl.indexOf('/', schemaSepPos + 3);\r\n        if (pathSepPos >= 0) {\r\n            return newBase + existingUrl.substr(pathSepPos);\r\n        }\r\n    }\r\n\r\n    return '';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/TsTrouter.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_20__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@skype/tsregistrar\"\n// module id = 20\n// module chunks = 0","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nexports.__esModule = true;\r\nvar eventIds = new Map([\r\n    [\"chatMessageReceived\", 200],\r\n    [\"typingIndicatorReceived\", 245],\r\n    [\"readReceiptReceived\", 246],\r\n    [\"chatMessageEdited\", 247],\r\n    [\"chatMessageDeleted\", 248],\r\n    [\"chatThreadCreated\", 257],\r\n    [\"chatThreadPropertiesUpdated\", 258],\r\n    [\"chatThreadDeleted\", 259],\r\n    [\"participantsAdded\", 260],\r\n    [\"participantsRemoved\", 261]\r\n]);\r\nvar publicTeamsUserPrefix = '8:orgid:';\r\nvar dodTeamsUserPrefix = '8:dod:';\r\nvar gcchTeamsUserPrefix = '8:gcch:';\r\nvar teamsVisitorUserPrefix = '8:teamsvisitor:';\r\nvar phoneNumberPrefix = '4:';\r\nvar acsUserPrefix = '8:acs:';\r\nvar spoolUserPrefix = '8:spool:';\r\nexports.toMessageHandler = function (event, listener) {\r\n    var eventId = eventIds.get(event);\r\n    return {\r\n        handleMessage: function (message) {\r\n            var genericPayload = null;\r\n            if (message === null || message === void 0 ? void 0 : message.rawBody) {\r\n                genericPayload = JSON.parse(message.rawBody);\r\n            }\r\n            if (genericPayload === null || genericPayload._eventId !== eventId) {\r\n                return undefined;\r\n            }\r\n            var eventPayload = toEventPayload(event, genericPayload);\r\n            if (eventPayload === null) {\r\n                return undefined;\r\n            }\r\n            listener(eventPayload);\r\n            return { isHandled: true, resultCode: 200 };\r\n        }\r\n    };\r\n};\r\nvar toEventPayload = function (event, genericPayload) {\r\n    if (event === \"chatMessageReceived\") {\r\n        var payload = genericPayload;\r\n        var eventPayload = {\r\n            threadId: payload.groupId,\r\n            sender: constructIdentifierKindFromMri(payload.senderId),\r\n            senderDisplayName: payload.senderDisplayName,\r\n            recipient: constructIdentifierKindFromMri(\"8:\" + payload.recipientId),\r\n            id: payload.messageId,\r\n            createdOn: new Date(payload.originalArrivalTime),\r\n            version: payload.version,\r\n            type: payload.messageType,\r\n            message: payload.messageBody\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"chatMessageEdited\") {\r\n        var payload = genericPayload;\r\n        var eventPayload = {\r\n            threadId: payload.groupId,\r\n            sender: constructIdentifierKindFromMri(payload.senderId),\r\n            senderDisplayName: payload.senderDisplayName,\r\n            recipient: constructIdentifierKindFromMri(\"8:\" + payload.recipientId),\r\n            id: payload.messageId,\r\n            createdOn: new Date(payload.originalArrivalTime),\r\n            version: payload.version,\r\n            message: payload.messageBody,\r\n            editedOn: new Date(payload.edittime),\r\n            type: payload.messageType\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"chatMessageDeleted\") {\r\n        var payload = genericPayload;\r\n        var eventPayload = {\r\n            threadId: payload.groupId,\r\n            sender: constructIdentifierKindFromMri(payload.senderId),\r\n            senderDisplayName: payload.senderDisplayName,\r\n            recipient: constructIdentifierKindFromMri(\"8:\" + payload.recipientId),\r\n            id: payload.messageId,\r\n            createdOn: new Date(payload.originalArrivalTime),\r\n            version: payload.version,\r\n            deletedOn: new Date(payload.deletetime),\r\n            type: payload.messageType\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"typingIndicatorReceived\") {\r\n        var payload = genericPayload;\r\n        var eventPayload = {\r\n            threadId: payload.groupId,\r\n            sender: constructIdentifierKindFromMri(payload.senderId),\r\n            senderDisplayName: \"\",\r\n            recipient: constructIdentifierKindFromMri(\"8:\" + payload.recipientId),\r\n            version: payload.version,\r\n            receivedOn: new Date(payload.originalArrivalTime)\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"readReceiptReceived\") {\r\n        var payload = genericPayload;\r\n        var readReceiptMessageBody = JSON.parse(payload.messageBody);\r\n        var consumptionHorizon = readReceiptMessageBody.consumptionhorizon.split(\";\");\r\n        var eventPayload = {\r\n            threadId: payload.groupId,\r\n            sender: constructIdentifierKindFromMri(payload.senderId),\r\n            senderDisplayName: \"\",\r\n            recipient: constructIdentifierKindFromMri(\"8:\" + payload.recipientId),\r\n            chatMessageId: payload.messageId,\r\n            readOn: new Date(+consumptionHorizon[1])\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"chatThreadCreated\") {\r\n        var payload = genericPayload;\r\n        var createdByPayload = JSON.parse(unescape(payload.createdBy));\r\n        var membersPayload = JSON.parse(unescape(payload.members));\r\n        var propertiesPayload = JSON.parse(unescape(payload.properties));\r\n        var createdBy = {\r\n            id: constructIdentifierKindFromMri(createdByPayload.participantId),\r\n            displayName: createdByPayload.displayName\r\n        };\r\n        var chatParticipants = membersPayload.map(function (m) {\r\n            return {\r\n                id: constructIdentifierKindFromMri(m.participantId),\r\n                displayName: m.displayName\r\n            };\r\n        });\r\n        var eventPayload = {\r\n            threadId: payload.threadId,\r\n            createdOn: new Date(payload.createTime),\r\n            createdBy: createdBy,\r\n            version: payload.version,\r\n            participants: chatParticipants,\r\n            properties: propertiesPayload\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"chatThreadPropertiesUpdated\") {\r\n        var payload = genericPayload;\r\n        var updatedByPayload = JSON.parse(unescape(payload.editedBy));\r\n        var propertiesPayload = JSON.parse(unescape(payload.properties));\r\n        var updatedBy = {\r\n            id: constructIdentifierKindFromMri(updatedByPayload.participantId),\r\n            displayName: updatedByPayload.displayName\r\n        };\r\n        var eventPayload = {\r\n            threadId: payload.threadId,\r\n            updatedOn: new Date(payload.editTime),\r\n            updatedBy: updatedBy,\r\n            version: payload.version,\r\n            properties: propertiesPayload\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"chatThreadDeleted\") {\r\n        var payload = genericPayload;\r\n        var deletedByPayload = JSON.parse(unescape(payload.deletedBy));\r\n        var deletedBy = {\r\n            id: constructIdentifierKindFromMri(deletedByPayload.participantId),\r\n            displayName: deletedByPayload.displayName\r\n        };\r\n        var eventPayload = {\r\n            threadId: payload.threadId,\r\n            deletedOn: new Date(payload.deleteTime),\r\n            deletedBy: deletedBy,\r\n            version: payload.version\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"participantsAdded\") {\r\n        var payload = genericPayload;\r\n        var addedByPayload = JSON.parse(unescape(payload.addedBy));\r\n        var participantsAddedPayload = JSON.parse(unescape(payload.participantsAdded));\r\n        var addedBy = {\r\n            id: constructIdentifierKindFromMri(addedByPayload.participantId),\r\n            displayName: addedByPayload.displayName\r\n        };\r\n        var chatParticipants = participantsAddedPayload.map(function (m) {\r\n            return {\r\n                id: constructIdentifierKindFromMri(m.participantId),\r\n                displayName: m.displayName,\r\n                shareHistoryTime: new Date(m.shareHistoryTime)\r\n            };\r\n        });\r\n        var eventPayload = {\r\n            threadId: payload.threadId,\r\n            addedOn: new Date(payload.time),\r\n            addedBy: addedBy,\r\n            version: payload.version,\r\n            participantsAdded: chatParticipants\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"participantsRemoved\") {\r\n        var payload = genericPayload;\r\n        var removedByPayload = JSON.parse(unescape(payload.removedBy));\r\n        var participantsRemovedPayload = JSON.parse(unescape(payload.participantsRemoved));\r\n        var removedBy = {\r\n            id: constructIdentifierKindFromMri(removedByPayload.participantId),\r\n            displayName: removedByPayload.displayName\r\n        };\r\n        var chatParticipants = participantsRemovedPayload.map(function (m) {\r\n            return {\r\n                id: constructIdentifierKindFromMri(m.participantId),\r\n                displayName: m.displayName,\r\n                shareHistoryTime: new Date(m.shareHistoryTime)\r\n            };\r\n        });\r\n        var eventPayload = {\r\n            threadId: payload.threadId,\r\n            removedOn: new Date(payload.time),\r\n            removedBy: removedBy,\r\n            version: payload.version,\r\n            participantsRemoved: chatParticipants\r\n        };\r\n        return eventPayload;\r\n    }\r\n    return null;\r\n};\r\nexports.toLogProvider = function (logger) {\r\n    return {\r\n        log: function () {\r\n            var message = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                message[_i] = arguments[_i];\r\n            }\r\n            return logger.info(message);\r\n        },\r\n        warn: function () {\r\n            var message = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                message[_i] = arguments[_i];\r\n            }\r\n            return logger.warning(message);\r\n        },\r\n        error: function () {\r\n            var message = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                message[_i] = arguments[_i];\r\n            }\r\n            return logger.error(message);\r\n        },\r\n        debug: function () {\r\n            var message = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                message[_i] = arguments[_i];\r\n            }\r\n            return logger.verbose(message);\r\n        },\r\n        info: function () {\r\n            var message = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                message[_i] = arguments[_i];\r\n            }\r\n            return logger.verbose(message);\r\n        }\r\n    };\r\n};\r\nexports.toTelemetrySender = function (logger) {\r\n    return {\r\n        logEvent: function (clientEvent) { return logger.info(clientEvent); }\r\n    };\r\n};\r\nvar constructIdentifierKindFromMri = function (mri) {\r\n    if (mri.startsWith(publicTeamsUserPrefix)) {\r\n        return { kind: \"microsoftTeamsUser\", rawId: mri, microsoftTeamsUserId: mri.substring(publicTeamsUserPrefix.length), isAnonymous: false, cloud: 'public' };\r\n    }\r\n    else if (mri.startsWith(dodTeamsUserPrefix)) {\r\n        return { kind: \"microsoftTeamsUser\", rawId: mri, microsoftTeamsUserId: mri.substring(dodTeamsUserPrefix.length), isAnonymous: false, cloud: 'dod' };\r\n    }\r\n    else if (mri.startsWith(gcchTeamsUserPrefix)) {\r\n        return { kind: \"microsoftTeamsUser\", rawId: mri, microsoftTeamsUserId: mri.substring(gcchTeamsUserPrefix.length), isAnonymous: false, cloud: 'gcch' };\r\n    }\r\n    else if (mri.startsWith(teamsVisitorUserPrefix)) {\r\n        return { kind: \"microsoftTeamsUser\", rawId: mri, microsoftTeamsUserId: mri.substring(teamsVisitorUserPrefix.length), isAnonymous: true };\r\n    }\r\n    else if (mri.startsWith(phoneNumberPrefix)) {\r\n        return { kind: \"phoneNumber\", rawId: mri, phoneNumber: mri.substring(phoneNumberPrefix.length) };\r\n    }\r\n    else if (mri.startsWith(acsUserPrefix) || mri.startsWith(spoolUserPrefix)) {\r\n        return { kind: \"communicationUser\", communicationUserId: mri };\r\n    }\r\n    else {\r\n        return { kind: \"unknown\", id: mri };\r\n    }\r\n};\r\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A collection of HttpHeaders that can be sent with a HTTP request.\n */\nfunction getHeaderKey(headerName: string): string {\n  return headerName.toLowerCase();\n}\n\n/**\n * An individual header within a HttpHeaders collection.\n */\nexport interface HttpHeader {\n  /**\n   * The name of the header.\n   */\n  name: string;\n\n  /**\n   * The value of the header.\n   */\n  value: string;\n}\n\n/**\n * A HttpHeaders collection represented as a simple JSON object.\n */\nexport type RawHttpHeaders = { [headerName: string]: string };\n\n/**\n * A collection of HTTP header key/value pairs.\n */\nexport interface HttpHeadersLike {\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param headerName The name of the header to set. This value is case-insensitive.\n   * @param headerValue The value of the header to set.\n   */\n  set(headerName: string, headerValue: string | number): void;\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param headerName The name of the header.\n   */\n  get(headerName: string): string | undefined;\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   */\n  contains(headerName: string): boolean;\n  /**\n   * Remove the header with the provided headerName. Return whether or not the header existed and\n   * was removed.\n   * @param headerName The name of the header to remove.\n   */\n  remove(headerName: string): boolean;\n  /**\n   * Get the headers that are contained this collection as an object.\n   */\n  rawHeaders(): RawHttpHeaders;\n  /**\n   * Get the headers that are contained in this collection as an array.\n   */\n  headersArray(): HttpHeader[];\n  /**\n   * Get the header names that are contained in this collection.\n   */\n  headerNames(): string[];\n  /**\n   * Get the header values that are contained in this collection.\n   */\n  headerValues(): string[];\n  /**\n   * Create a deep clone/copy of this HttpHeaders collection.\n   */\n  clone(): HttpHeadersLike;\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   * The result is the same as `rawHeaders()`.\n   */\n  toJson(): RawHttpHeaders;\n}\n\nexport function isHttpHeadersLike(object?: any): object is HttpHeadersLike {\n  if (!object || typeof object !== \"object\") {\n    return false;\n  }\n\n  if (\n    typeof object.rawHeaders === \"function\" &&\n    typeof object.clone === \"function\" &&\n    typeof object.get === \"function\" &&\n    typeof object.set === \"function\" &&\n    typeof object.contains === \"function\" &&\n    typeof object.remove === \"function\" &&\n    typeof object.headersArray === \"function\" &&\n    typeof object.headerValues === \"function\" &&\n    typeof object.headerNames === \"function\" &&\n    typeof object.toJson === \"function\"\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * A collection of HTTP header key/value pairs.\n */\nexport class HttpHeaders implements HttpHeadersLike {\n  private readonly _headersMap: { [headerKey: string]: HttpHeader };\n\n  constructor(rawHeaders?: RawHttpHeaders) {\n    this._headersMap = {};\n    if (rawHeaders) {\n      for (const headerName in rawHeaders) {\n        this.set(headerName, rawHeaders[headerName]);\n      }\n    }\n  }\n\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param headerName The name of the header to set. This value is case-insensitive.\n   * @param headerValue The value of the header to set.\n   */\n  public set(headerName: string, headerValue: string | number): void {\n    this._headersMap[getHeaderKey(headerName)] = {\n      name: headerName,\n      value: headerValue.toString()\n    };\n  }\n\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param headerName The name of the header.\n   */\n  public get(headerName: string): string | undefined {\n    const header: HttpHeader = this._headersMap[getHeaderKey(headerName)];\n    return !header ? undefined : header.value;\n  }\n\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   */\n  public contains(headerName: string): boolean {\n    return !!this._headersMap[getHeaderKey(headerName)];\n  }\n\n  /**\n   * Remove the header with the provided headerName. Return whether or not the header existed and\n   * was removed.\n   * @param headerName The name of the header to remove.\n   */\n  public remove(headerName: string): boolean {\n    const result: boolean = this.contains(headerName);\n    delete this._headersMap[getHeaderKey(headerName)];\n    return result;\n  }\n\n  /**\n   * Get the headers that are contained this collection as an object.\n   */\n  public rawHeaders(): RawHttpHeaders {\n    const result: RawHttpHeaders = {};\n    for (const headerKey in this._headersMap) {\n      const header: HttpHeader = this._headersMap[headerKey];\n      result[header.name.toLowerCase()] = header.value;\n    }\n    return result;\n  }\n\n  /**\n   * Get the headers that are contained in this collection as an array.\n   */\n  public headersArray(): HttpHeader[] {\n    const headers: HttpHeader[] = [];\n    for (const headerKey in this._headersMap) {\n      headers.push(this._headersMap[headerKey]);\n    }\n    return headers;\n  }\n\n  /**\n   * Get the header names that are contained in this collection.\n   */\n  public headerNames(): string[] {\n    const headerNames: string[] = [];\n    const headers: HttpHeader[] = this.headersArray();\n    for (let i = 0; i < headers.length; ++i) {\n      headerNames.push(headers[i].name);\n    }\n    return headerNames;\n  }\n\n  /**\n   * Get the header values that are contained in this collection.\n   */\n  public headerValues(): string[] {\n    const headerValues: string[] = [];\n    const headers: HttpHeader[] = this.headersArray();\n    for (let i = 0; i < headers.length; ++i) {\n      headerValues.push(headers[i].value);\n    }\n    return headerValues;\n  }\n\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   */\n  public toJson(): RawHttpHeaders {\n    return this.rawHeaders();\n  }\n\n  /**\n   * Get the string representation of this HTTP header collection.\n   */\n  public toString(): string {\n    return JSON.stringify(this.toJson());\n  }\n\n  /**\n   * Create a deep clone/copy of this HttpHeaders collection.\n   */\n  public clone(): HttpHeaders {\n    return new HttpHeaders(this.rawHeaders());\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Encodes a string in base64 format.\n * @param value the string to encode\n */\nexport function encodeString(value: string): string {\n  return btoa(value);\n}\n\n/**\n * Encodes a byte array in base64 format.\n * @param value the Uint8Aray to encode\n */\nexport function encodeByteArray(value: Uint8Array): string {\n  let str = \"\";\n  for (let i = 0; i < value.length; i++) {\n    str += String.fromCharCode(value[i]);\n  }\n  return btoa(str);\n}\n\n/**\n * Decodes a base64 string into a byte array.\n * @param value the base64 string to decode\n */\nexport function decodeString(value: string): Uint8Array {\n  const byteString = atob(value);\n  const arr = new Uint8Array(byteString.length);\n  for (let i = 0; i < byteString.length; i++) {\n    arr[i] = byteString.charCodeAt(i);\n  }\n  return arr;\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const Constants = {\n  /**\n   * The core-http version\n   * @const\n   * @type {string}\n   */\n  coreHttpVersion: \"1.2.0\",\n\n  /**\n   * Specifies HTTP.\n   *\n   * @const\n   * @type {string}\n   */\n  HTTP: \"http:\",\n\n  /**\n   * Specifies HTTPS.\n   *\n   * @const\n   * @type {string}\n   */\n  HTTPS: \"https:\",\n\n  /**\n   * Specifies HTTP Proxy.\n   *\n   * @const\n   * @type {string}\n   */\n  HTTP_PROXY: \"HTTP_PROXY\",\n\n  /**\n   * Specifies HTTPS Proxy.\n   *\n   * @const\n   * @type {string}\n   */\n  HTTPS_PROXY: \"HTTPS_PROXY\",\n\n  /**\n   * Specifies NO Proxy.\n   *\n   * @const\n   * @type {string}\n   */\n  NO_PROXY: \"NO_PROXY\",\n\n  /**\n   * Specifies ALL Proxy.\n   *\n   * @const\n   * @type {string}\n   */\n  ALL_PROXY: \"ALL_PROXY\",\n\n  HttpConstants: {\n    /**\n     * Http Verbs\n     *\n     * @const\n     * @enum {string}\n     */\n    HttpVerbs: {\n      PUT: \"PUT\",\n      GET: \"GET\",\n      DELETE: \"DELETE\",\n      POST: \"POST\",\n      MERGE: \"MERGE\",\n      HEAD: \"HEAD\",\n      PATCH: \"PATCH\"\n    },\n\n    StatusCodes: {\n      TooManyRequests: 429\n    }\n  },\n\n  /**\n   * Defines constants for use with HTTP headers.\n   */\n  HeaderConstants: {\n    /**\n     * The Authorization header.\n     *\n     * @const\n     * @type {string}\n     */\n    AUTHORIZATION: \"authorization\",\n\n    AUTHORIZATION_SCHEME: \"Bearer\",\n\n    /**\n     * The Retry-After response-header field can be used with a 503 (Service\n     * Unavailable) or 349 (Too Many Requests) responses to indicate how long\n     * the service is expected to be unavailable to the requesting client.\n     *\n     * @const\n     * @type {string}\n     */\n    RETRY_AFTER: \"Retry-After\",\n\n    /**\n     * The UserAgent header.\n     *\n     * @const\n     * @type {string}\n     */\n    USER_AGENT: \"User-Agent\"\n  }\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { RestError } from \"../restError\";\nimport { WebResourceLike } from \"../webResource\";\nimport { Constants } from \"./constants\";\n\nconst validUuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n\n/**\n * A constant that indicates whether the environment is node.js or browser based.\n */\nexport const isNode =\n  typeof process !== \"undefined\" &&\n  !!process.version &&\n  !!process.versions &&\n  !!process.versions.node;\n\n/**\n * Checks if a parsed URL is HTTPS\n *\n * @param {object} urlToCheck The url to check\n * @return {boolean} True if the URL is HTTPS; false otherwise.\n */\nexport function urlIsHTTPS(urlToCheck: { protocol: string }): boolean {\n  return urlToCheck.protocol.toLowerCase() === Constants.HTTPS;\n}\n\n/**\n * Encodes an URI.\n *\n * @param {string} uri The URI to be encoded.\n * @return {string} The encoded URI.\n */\nexport function encodeUri(uri: string): string {\n  return encodeURIComponent(uri)\n    .replace(/!/g, \"%21\")\n    .replace(/\"/g, \"%27\")\n    .replace(/\\(/g, \"%28\")\n    .replace(/\\)/g, \"%29\")\n    .replace(/\\*/g, \"%2A\");\n}\n\n/**\n * Returns a stripped version of the Http Response which only contains body,\n * headers and the status.\n *\n * @param {HttpOperationResponse} response The Http Response\n *\n * @return {object} The stripped version of Http Response.\n */\nexport function stripResponse(response: HttpOperationResponse): any {\n  const strippedResponse: any = {};\n  strippedResponse.body = response.bodyAsText;\n  strippedResponse.headers = response.headers;\n  strippedResponse.status = response.status;\n  return strippedResponse;\n}\n\n/**\n * Returns a stripped version of the Http Request that does not contain the\n * Authorization header.\n *\n * @param {WebResourceLike} request The Http Request object\n *\n * @return {WebResourceLike} The stripped version of Http Request.\n */\nexport function stripRequest(request: WebResourceLike): WebResourceLike {\n  const strippedRequest = request.clone();\n  if (strippedRequest.headers) {\n    strippedRequest.headers.remove(\"authorization\");\n  }\n  return strippedRequest;\n}\n\n/**\n * Validates the given uuid as a string\n *\n * @param {string} uuid The uuid as a string that needs to be validated\n *\n * @return {boolean} True if the uuid is valid; false otherwise.\n */\nexport function isValidUuid(uuid: string): boolean {\n  return validUuidRegex.test(uuid);\n}\n\n/**\n * Generated UUID\n *\n * @return {string} RFC4122 v4 UUID.\n */\nexport function generateUuid(): string {\n  return uuidv4();\n}\n\n/**\n * Executes an array of promises sequentially. Inspiration of this method is here:\n * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!\n *\n * @param {Array} promiseFactories An array of promise factories(A function that return a promise)\n *\n * @param {any} [kickstart] Input to the first promise that is used to kickstart the promise chain.\n * If not provided then the promise chain starts with undefined.\n *\n * @return A chain of resolved or rejected promises\n */\nexport function executePromisesSequentially(\n  promiseFactories: Array<any>,\n  kickstart: any\n): Promise<any> {\n  let result = Promise.resolve(kickstart);\n  promiseFactories.forEach((promiseFactory) => {\n    result = result.then(promiseFactory);\n  });\n  return result;\n}\n\n/**\n * A wrapper for setTimeout that resolves a promise after t milliseconds.\n * @param {number} t The number of milliseconds to be delayed.\n * @param {T} value The value to be resolved with after a timeout of t milliseconds.\n * @returns {Promise<T>} Resolved promise\n */\nexport function delay<T>(t: number, value?: T): Promise<T> {\n  return new Promise((resolve) => setTimeout(() => resolve(value), t));\n}\n\n/**\n * Service callback that is returned for REST requests initiated by the service client.\n */\nexport interface ServiceCallback<TResult> {\n  /**\n   * A method that will be invoked as a callback to a service function.\n   * @param {Error | RestError | null} err The error occurred if any, while executing the request; otherwise null.\n   * @param {TResult} [result] The deserialized response body if an error did not occur.\n   * @param {WebResourceLike} [request] The raw/actual request sent to the server if an error did not occur.\n   * @param {HttpOperationResponse} [response] The raw/actual response from the server if an error did not occur.\n   */\n  (\n    err: Error | RestError | null,\n    result?: TResult,\n    request?: WebResourceLike,\n    response?: HttpOperationResponse\n  ): void;\n}\n\n/**\n * Converts a Promise to a callback.\n * @param {Promise<any>} promise The Promise to be converted to a callback\n * @returns {Function} A function that takes the callback (cb: Function): void\n * @deprecated generated code should instead depend on responseToBody\n */\nexport function promiseToCallback(promise: Promise<any>): Function {\n  if (typeof promise.then !== \"function\") {\n    throw new Error(\"The provided input is not a Promise.\");\n  }\n  return (cb: Function): void => {\n    promise\n      .then((data: any) => {\n        // eslint-disable-next-line promise/no-callback-in-promise\n        return cb(undefined, data);\n      })\n      .catch((err: Error) => {\n        // eslint-disable-next-line promise/no-callback-in-promise\n        cb(err);\n      });\n  };\n}\n\n/**\n * Converts a Promise to a service callback.\n * @param {Promise<HttpOperationResponse>} promise - The Promise of HttpOperationResponse to be converted to a service callback\n * @returns {Function} A function that takes the service callback (cb: ServiceCallback<T>): void\n */\nexport function promiseToServiceCallback<T>(promise: Promise<HttpOperationResponse>): Function {\n  if (typeof promise.then !== \"function\") {\n    throw new Error(\"The provided input is not a Promise.\");\n  }\n  return (cb: ServiceCallback<T>): void => {\n    promise\n      .then((data: HttpOperationResponse) => {\n        return process.nextTick(cb, undefined, data.parsedBody as T, data.request, data);\n      })\n      .catch((err: Error) => {\n        process.nextTick(cb, err);\n      });\n  };\n}\n\nexport function prepareXMLRootList(\n  obj: any,\n  elementName: string,\n  xmlNamespaceKey?: string,\n  xmlNamespace?: string\n): { [s: string]: any } {\n  if (!Array.isArray(obj)) {\n    obj = [obj];\n  }\n\n  if (!xmlNamespaceKey || !xmlNamespace) {\n    return { [elementName]: obj };\n  }\n\n  return { [elementName]: obj, $: { [xmlNamespaceKey]: xmlNamespace } };\n}\n\n/**\n * Applies the properties on the prototype of sourceCtors to the prototype of targetCtor\n * @param {object} targetCtor The target object on which the properties need to be applied.\n * @param {Array<object>} sourceCtors An array of source objects from which the properties need to be taken.\n */\nexport function applyMixins(targetCtor: any, sourceCtors: any[]): void {\n  sourceCtors.forEach((sourceCtors) => {\n    Object.getOwnPropertyNames(sourceCtors.prototype).forEach((name) => {\n      targetCtor.prototype[name] = sourceCtors.prototype[name];\n    });\n  });\n}\n\nconst validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n/**\n * Indicates whether the given string is in ISO 8601 format.\n * @param {string} value The value to be validated for ISO 8601 duration format.\n * @return {boolean} `true` if valid, `false` otherwise.\n */\nexport function isDuration(value: string): boolean {\n  return validateISODuration.test(value);\n}\n\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param {string | undefined} value The value to search and replace in.\n * @param {string} searchValue The value to search for in the value argument.\n * @param {string} replaceValue The value to replace searchValue with in the value argument.\n * @returns {string | undefined} The value where each instance of searchValue was replaced with replacedValue.\n */\nexport function replaceAll(\n  value: string | undefined,\n  searchValue: string,\n  replaceValue: string\n): string | undefined {\n  return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n\n/**\n * Determines whether the given entity is a basic/primitive type\n * (string, number, boolean, null, undefined).\n * @param {any} value Any entity\n * @return {boolean} - true is it is primitive type, false otherwise.\n */\nexport function isPrimitiveType(value: any): boolean {\n  return (typeof value !== \"object\" && typeof value !== \"function\") || value === null;\n}\n\nexport function getEnvironmentValue(name: string): string | undefined {\n  if (process.env[name]) {\n    return process.env[name];\n  } else if (process.env[name.toLowerCase()]) {\n    return process.env[name.toLowerCase()];\n  }\n  return undefined;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Default key used to access the XML attributes.\n */\nexport const XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nexport const XML_CHARKEY = \"_\";\n\n/**\n * Options to govern behavior of xml parser and builder.\n */\nexport interface SerializerOptions {\n  /**\n   * indicates the name of the root element in the resulting XML when building XML.\n   */\n  rootName?: string;\n  /**\n   * indicates whether the root element is to be included or not in the output when parsing XML.\n   */\n  includeRoot?: boolean;\n  /**\n   * key used to access the XML value content when parsing XML.\n   */\n  xmlCharKey?: string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable eqeqeq */\n\nimport * as base64 from \"./util/base64\";\nimport * as utils from \"./util/utils\";\nimport { XML_ATTRKEY, XML_CHARKEY, SerializerOptions } from \"./util/serializer.common\";\n\nexport class Serializer {\n  constructor(\n    public readonly modelMappers: { [key: string]: any } = {},\n    public readonly isXML?: boolean\n  ) {}\n\n  validateConstraints(mapper: Mapper, value: any, objectName: string): void {\n    const failValidation = (\n      constraintName: keyof MapperConstraints,\n      constraintValue: any\n    ): Error => {\n      throw new Error(\n        `\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`\n      );\n    };\n    if (mapper.constraints && value != undefined) {\n      const {\n        ExclusiveMaximum,\n        ExclusiveMinimum,\n        InclusiveMaximum,\n        InclusiveMinimum,\n        MaxItems,\n        MaxLength,\n        MinItems,\n        MinLength,\n        MultipleOf,\n        Pattern,\n        UniqueItems\n      } = mapper.constraints;\n      if (ExclusiveMaximum != undefined && value >= ExclusiveMaximum) {\n        failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n      }\n      if (ExclusiveMinimum != undefined && value <= ExclusiveMinimum) {\n        failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n      }\n      if (InclusiveMaximum != undefined && value > InclusiveMaximum) {\n        failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n      }\n      if (InclusiveMinimum != undefined && value < InclusiveMinimum) {\n        failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n      }\n      if (MaxItems != undefined && value.length > MaxItems) {\n        failValidation(\"MaxItems\", MaxItems);\n      }\n      if (MaxLength != undefined && value.length > MaxLength) {\n        failValidation(\"MaxLength\", MaxLength);\n      }\n      if (MinItems != undefined && value.length < MinItems) {\n        failValidation(\"MinItems\", MinItems);\n      }\n      if (MinLength != undefined && value.length < MinLength) {\n        failValidation(\"MinLength\", MinLength);\n      }\n      if (MultipleOf != undefined && value % MultipleOf !== 0) {\n        failValidation(\"MultipleOf\", MultipleOf);\n      }\n      if (Pattern) {\n        const pattern: RegExp = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n        if (typeof value !== \"string\" || value.match(pattern) === null) {\n          failValidation(\"Pattern\", Pattern);\n        }\n      }\n      if (\n        UniqueItems &&\n        value.some((item: any, i: number, ar: Array<any>) => ar.indexOf(item) !== i)\n      ) {\n        failValidation(\"UniqueItems\", UniqueItems);\n      }\n    }\n  }\n\n  /**\n   * Serialize the given object based on its metadata defined in the mapper\n   *\n   * @param {Mapper} mapper The mapper which defines the metadata of the serializable object\n   *\n   * @param {object|string|Array|number|boolean|Date|stream} object A valid Javascript object to be serialized\n   *\n   * @param {string} objectName Name of the serialized object\n   *\n   * @param {options} options additional options to deserialization\n   *\n   * @returns {object|string|Array|number|boolean|Date|stream} A valid serialized Javascript object\n   */\n  serialize(\n    mapper: Mapper,\n    object: any,\n    objectName?: string,\n    options: SerializerOptions = {}\n  ): any {\n    const updatedOptions: Required<SerializerOptions> = {\n      rootName: options.rootName ?? \"\",\n      includeRoot: options.includeRoot ?? false,\n      xmlCharKey: options.xmlCharKey ?? XML_CHARKEY\n    };\n    let payload: any = {};\n    const mapperType = mapper.type.name as string;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n    if (mapperType.match(/^Sequence$/i) !== null) {\n      payload = [];\n    }\n\n    if (mapper.isConstant) {\n      object = mapper.defaultValue;\n    }\n\n    // This table of allowed values should help explain\n    // the mapper.required and mapper.nullable properties.\n    // X means \"neither undefined or null are allowed\".\n    //           || required\n    //           || true      | false\n    //  nullable || ==========================\n    //      true || null      | undefined/null\n    //     false || X         | undefined\n    // undefined || X         | undefined/null\n\n    const { required, nullable } = mapper;\n\n    if (required && nullable && object === undefined) {\n      throw new Error(`${objectName} cannot be undefined.`);\n    }\n    if (required && !nullable && object == undefined) {\n      throw new Error(`${objectName} cannot be null or undefined.`);\n    }\n    if (!required && nullable === false && object === null) {\n      throw new Error(`${objectName} cannot be null.`);\n    }\n\n    if (object == undefined) {\n      payload = object;\n    } else {\n      // Validate Constraints if any\n      this.validateConstraints(mapper, object, objectName);\n      if (mapperType.match(/^any$/i) !== null) {\n        payload = object;\n      } else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n        payload = serializeBasicTypes(mapperType, objectName, object);\n      } else if (mapperType.match(/^Enum$/i) !== null) {\n        const enumMapper: EnumMapper = mapper as EnumMapper;\n        payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n      } else if (\n        mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null\n      ) {\n        payload = serializeDateTypes(mapperType, object, objectName);\n      } else if (mapperType.match(/^ByteArray$/i) !== null) {\n        payload = serializeByteArrayType(objectName, object);\n      } else if (mapperType.match(/^Base64Url$/i) !== null) {\n        payload = serializeBase64UrlType(objectName, object);\n      } else if (mapperType.match(/^Sequence$/i) !== null) {\n        payload = serializeSequenceType(\n          this,\n          mapper as SequenceMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions\n        );\n      } else if (mapperType.match(/^Dictionary$/i) !== null) {\n        payload = serializeDictionaryType(\n          this,\n          mapper as DictionaryMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions\n        );\n      } else if (mapperType.match(/^Composite$/i) !== null) {\n        payload = serializeCompositeType(\n          this,\n          mapper as CompositeMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions\n        );\n      }\n    }\n    return payload;\n  }\n\n  /**\n   * Deserialize the given object based on its metadata defined in the mapper\n   *\n   * @param {object} mapper The mapper which defines the metadata of the serializable object\n   *\n   * @param {object|string|Array|number|boolean|Date|stream} responseBody A valid Javascript entity to be deserialized\n   *\n   * @param {string} objectName Name of the deserialized object\n   *\n   * @param options Controls behavior of XML parser and builder.\n   *\n   * @returns {object|string|Array|number|boolean|Date|stream} A valid deserialized Javascript object\n   */\n  deserialize(\n    mapper: Mapper,\n    responseBody: any,\n    objectName: string,\n    options: SerializerOptions = {}\n  ): any {\n    const updatedOptions: Required<SerializerOptions> = {\n      rootName: options.rootName ?? \"\",\n      includeRoot: options.includeRoot ?? false,\n      xmlCharKey: options.xmlCharKey ?? XML_CHARKEY\n    };\n    if (responseBody == undefined) {\n      if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n        // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n        // between the list being empty versus being missing,\n        // so let's do the more user-friendly thing and return an empty list.\n        responseBody = [];\n      }\n      // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n      if (mapper.defaultValue !== undefined) {\n        responseBody = mapper.defaultValue;\n      }\n      return responseBody;\n    }\n\n    let payload: any;\n    const mapperType = mapper.type.name;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n\n    if (mapperType.match(/^Composite$/i) !== null) {\n      payload = deserializeCompositeType(\n        this,\n        mapper as CompositeMapper,\n        responseBody,\n        objectName,\n        updatedOptions\n      );\n    } else {\n      if (this.isXML) {\n        const xmlCharKey = updatedOptions.xmlCharKey;\n        /**\n         * If the mapper specifies this as a non-composite type value but the responseBody contains\n         * both header (\"$\" i.e., XML_ATTRKEY) and body (\"#\" i.e., XML_CHARKEY) properties,\n         * then just reduce the responseBody value to the body (\"#\" i.e., XML_CHARKEY) property.\n         */\n        if (responseBody[XML_ATTRKEY] != undefined && responseBody[xmlCharKey] != undefined) {\n          responseBody = responseBody[xmlCharKey];\n        }\n      }\n\n      if (mapperType.match(/^Number$/i) !== null) {\n        payload = parseFloat(responseBody);\n        if (isNaN(payload)) {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^Boolean$/i) !== null) {\n        if (responseBody === \"true\") {\n          payload = true;\n        } else if (responseBody === \"false\") {\n          payload = false;\n        } else {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n        payload = responseBody;\n      } else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n        payload = new Date(responseBody);\n      } else if (mapperType.match(/^UnixTime$/i) !== null) {\n        payload = unixTimeToDate(responseBody);\n      } else if (mapperType.match(/^ByteArray$/i) !== null) {\n        payload = base64.decodeString(responseBody);\n      } else if (mapperType.match(/^Base64Url$/i) !== null) {\n        payload = base64UrlToByteArray(responseBody);\n      } else if (mapperType.match(/^Sequence$/i) !== null) {\n        payload = deserializeSequenceType(\n          this,\n          mapper as SequenceMapper,\n          responseBody,\n          objectName,\n          updatedOptions\n        );\n      } else if (mapperType.match(/^Dictionary$/i) !== null) {\n        payload = deserializeDictionaryType(\n          this,\n          mapper as DictionaryMapper,\n          responseBody,\n          objectName,\n          updatedOptions\n        );\n      }\n    }\n\n    if (mapper.isConstant) {\n      payload = mapper.defaultValue;\n    }\n\n    return payload;\n  }\n}\n\nfunction trimEnd(str: string, ch: string): string {\n  let len = str.length;\n  while (len - 1 >= 0 && str[len - 1] === ch) {\n    --len;\n  }\n  return str.substr(0, len);\n}\n\nfunction bufferToBase64Url(buffer: any): string | undefined {\n  if (!buffer) {\n    return undefined;\n  }\n  if (!(buffer instanceof Uint8Array)) {\n    throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n  }\n  // Uint8Array to Base64.\n  const str = base64.encodeByteArray(buffer);\n  // Base64 to Base64Url.\n  return trimEnd(str, \"=\")\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\");\n}\n\nfunction base64UrlToByteArray(str: string): Uint8Array | undefined {\n  if (!str) {\n    return undefined;\n  }\n  if (str && typeof str.valueOf() !== \"string\") {\n    throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n  }\n  // Base64Url to Base64.\n  str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  // Base64 to Uint8Array.\n  return base64.decodeString(str);\n}\n\nfunction splitSerializeName(prop: string | undefined): string[] {\n  const classes: string[] = [];\n  let partialclass = \"\";\n  if (prop) {\n    const subwords = prop.split(\".\");\n\n    for (const item of subwords) {\n      if (item.charAt(item.length - 1) === \"\\\\\") {\n        partialclass += item.substr(0, item.length - 1) + \".\";\n      } else {\n        partialclass += item;\n        classes.push(partialclass);\n        partialclass = \"\";\n      }\n    }\n  }\n\n  return classes;\n}\n\nfunction dateToUnixTime(d: string | Date): number | undefined {\n  if (!d) {\n    return undefined;\n  }\n\n  if (typeof d.valueOf() === \"string\") {\n    d = new Date(d as string);\n  }\n  return Math.floor((d as Date).getTime() / 1000);\n}\n\nfunction unixTimeToDate(n: number): Date | undefined {\n  if (!n) {\n    return undefined;\n  }\n  return new Date(n * 1000);\n}\n\nfunction serializeBasicTypes(typeName: string, objectName: string, value: any): any {\n  if (value !== null && value !== undefined) {\n    if (typeName.match(/^Number$/i) !== null) {\n      if (typeof value !== \"number\") {\n        throw new Error(`${objectName} with value ${value} must be of type number.`);\n      }\n    } else if (typeName.match(/^String$/i) !== null) {\n      if (typeof value.valueOf() !== \"string\") {\n        throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n      }\n    } else if (typeName.match(/^Uuid$/i) !== null) {\n      if (!(typeof value.valueOf() === \"string\" && utils.isValidUuid(value))) {\n        throw new Error(\n          `${objectName} with value \"${value}\" must be of type string and a valid uuid.`\n        );\n      }\n    } else if (typeName.match(/^Boolean$/i) !== null) {\n      if (typeof value !== \"boolean\") {\n        throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n      }\n    } else if (typeName.match(/^Stream$/i) !== null) {\n      const objectType = typeof value;\n      if (\n        objectType !== \"string\" &&\n        objectType !== \"function\" &&\n        !(value instanceof ArrayBuffer) &&\n        !ArrayBuffer.isView(value) &&\n        !((typeof Blob === \"function\" || typeof Blob === \"object\") && value instanceof Blob)\n      ) {\n        throw new Error(\n          `${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, or a function returning NodeJS.ReadableStream.`\n        );\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction serializeEnumType(objectName: string, allowedValues: Array<any>, value: any): any {\n  if (!allowedValues) {\n    throw new Error(\n      `Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`\n    );\n  }\n  const isPresent = allowedValues.some((item) => {\n    if (typeof item.valueOf() === \"string\") {\n      return item.toLowerCase() === value.toLowerCase();\n    }\n    return item === value;\n  });\n  if (!isPresent) {\n    throw new Error(\n      `${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(\n        allowedValues\n      )}.`\n    );\n  }\n  return value;\n}\n\nfunction serializeByteArrayType(objectName: string, value: Uint8Array): string {\n  let returnValue: string = \"\";\n  if (value != undefined) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    returnValue = base64.encodeByteArray(value);\n  }\n  return returnValue;\n}\n\nfunction serializeBase64UrlType(objectName: string, value: Uint8Array): string {\n  let returnValue: string = \"\";\n  if (value != undefined) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    returnValue = bufferToBase64Url(value) || \"\";\n  }\n  return returnValue;\n}\n\nfunction serializeDateTypes(typeName: string, value: any, objectName: string): any {\n  if (value != undefined) {\n    if (typeName.match(/^Date$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value =\n        value instanceof Date\n          ? value.toISOString().substring(0, 10)\n          : new Date(value).toISOString().substring(0, 10);\n    } else if (typeName.match(/^DateTime$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n    } else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n      }\n      value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n    } else if (typeName.match(/^UnixTime$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(\n          `${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n            `for it to be serialized in UnixTime/Epoch format.`\n        );\n      }\n      value = dateToUnixTime(value);\n    } else if (typeName.match(/^TimeSpan$/i) !== null) {\n      if (!utils.isDuration(value)) {\n        throw new Error(\n          `${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`\n        );\n      }\n    }\n  }\n  return value;\n}\n\nfunction serializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: Required<SerializerOptions>\n): any[] {\n  if (!Array.isArray(object)) {\n    throw new Error(`${objectName} must be of type Array.`);\n  }\n  const elementType = mapper.type.element;\n  if (!elementType || typeof elementType !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`\n    );\n  }\n  const tempArray = [];\n  for (let i = 0; i < object.length; i++) {\n    const serializedValue = serializer.serialize(elementType, object[i], objectName, options);\n\n    if (isXml && elementType.xmlNamespace) {\n      const xmlnsKey = elementType.xmlNamespacePrefix\n        ? `xmlns:${elementType.xmlNamespacePrefix}`\n        : \"xmlns\";\n      if (elementType.type.name === \"Composite\") {\n        tempArray[i] = { ...serializedValue };\n        tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n      } else {\n        tempArray[i] = {};\n        tempArray[i][options.xmlCharKey] = serializedValue;\n        tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n      }\n    } else {\n      tempArray[i] = serializedValue;\n    }\n  }\n  return tempArray;\n}\n\nfunction serializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: Required<SerializerOptions>\n): { [key: string]: any } {\n  if (typeof object !== \"object\") {\n    throw new Error(`${objectName} must be of type object.`);\n  }\n  const valueType = mapper.type.value;\n  if (!valueType || typeof valueType !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`\n    );\n  }\n  const tempDictionary: { [key: string]: any } = {};\n  for (const key of Object.keys(object)) {\n    const serializedValue = serializer.serialize(valueType, object[key], objectName, options);\n    // If the element needs an XML namespace we need to add it within the $ property\n    tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);\n  }\n\n  // Add the namespace to the root element if needed\n  if (isXml && mapper.xmlNamespace) {\n    const xmlnsKey = mapper.xmlNamespacePrefix ? `xmlns:${mapper.xmlNamespacePrefix}` : \"xmlns\";\n\n    return { ...tempDictionary, $: { [xmlnsKey]: mapper.xmlNamespace } };\n  }\n\n  return tempDictionary;\n}\n\n/**\n * Resolves the additionalProperties property from a referenced mapper\n * @param serializer the serializer containing the entire set of mappers\n * @param mapper the composite mapper to resolve\n * @param objectName name of the object being serialized\n */\nfunction resolveAdditionalProperties(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string\n): SequenceMapper | BaseMapper | CompositeMapper | DictionaryMapper | EnumMapper | undefined {\n  const additionalProperties = mapper.type.additionalProperties;\n\n  if (!additionalProperties && mapper.type.className) {\n    const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n    return modelMapper?.type.additionalProperties;\n  }\n\n  return additionalProperties;\n}\n\n/**\n * Finds the mapper referenced by className\n * @param serializer the serializer containing the entire set of mappers\n * @param mapper the composite mapper to resolve\n * @param objectName name of the object being serialized\n */\nfunction resolveReferencedMapper(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string\n): CompositeMapper | undefined {\n  const className = mapper.type.className;\n  if (!className) {\n    throw new Error(\n      `Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(\n        mapper,\n        undefined,\n        2\n      )}\".`\n    );\n  }\n\n  return serializer.modelMappers[className];\n}\n\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer the serializer containing the entire set of mappers\n * @param mapper the composite mapper to resolve\n */\nfunction resolveModelProperties(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string\n): { [propertyName: string]: Mapper } {\n  let modelProps = mapper.type.modelProperties;\n  if (!modelProps) {\n    const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n    if (!modelMapper) {\n      throw new Error(`mapper() cannot be null or undefined for model \"${mapper.type.className}\".`);\n    }\n    modelProps = modelMapper?.type.modelProperties;\n    if (!modelProps) {\n      throw new Error(\n        `modelProperties cannot be null or undefined in the ` +\n          `mapper \"${JSON.stringify(modelMapper)}\" of type \"${\n            mapper.type.className\n          }\" for object \"${objectName}\".`\n      );\n    }\n  }\n\n  return modelProps;\n}\n\nfunction serializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: Required<SerializerOptions>\n): any {\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n  }\n\n  if (object != undefined) {\n    const payload: any = {};\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    for (const key of Object.keys(modelProps)) {\n      const propertyMapper = modelProps[key];\n      if (propertyMapper.readOnly) {\n        continue;\n      }\n\n      let propName: string | undefined;\n      let parentObject: any = payload;\n      if (serializer.isXML) {\n        if (propertyMapper.xmlIsWrapped) {\n          propName = propertyMapper.xmlName;\n        } else {\n          propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n        }\n      } else {\n        const paths = splitSerializeName(propertyMapper.serializedName!);\n        propName = paths.pop();\n\n        for (const pathName of paths) {\n          const childObject = parentObject[pathName];\n          if (\n            childObject == undefined &&\n            (object[key] != undefined || propertyMapper.defaultValue !== undefined)\n          ) {\n            parentObject[pathName] = {};\n          }\n          parentObject = parentObject[pathName];\n        }\n      }\n\n      if (parentObject != undefined) {\n        if (isXml && mapper.xmlNamespace) {\n          const xmlnsKey = mapper.xmlNamespacePrefix\n            ? `xmlns:${mapper.xmlNamespacePrefix}`\n            : \"xmlns\";\n          parentObject[XML_ATTRKEY] = {\n            ...parentObject[XML_ATTRKEY],\n            [xmlnsKey]: mapper.xmlNamespace\n          };\n        }\n        const propertyObjectName =\n          propertyMapper.serializedName !== \"\"\n            ? objectName + \".\" + propertyMapper.serializedName\n            : objectName;\n\n        let toSerialize = object[key];\n        const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n        if (\n          polymorphicDiscriminator &&\n          polymorphicDiscriminator.clientName === key &&\n          toSerialize == undefined\n        ) {\n          toSerialize = mapper.serializedName;\n        }\n\n        const serializedValue = serializer.serialize(\n          propertyMapper,\n          toSerialize,\n          propertyObjectName,\n          options\n        );\n\n        if (serializedValue !== undefined && propName != undefined) {\n          const value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);\n          if (isXml && propertyMapper.xmlIsAttribute) {\n            // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.\n            // This keeps things simple while preventing name collision\n            // with names in user documents.\n            parentObject[XML_ATTRKEY] = parentObject[XML_ATTRKEY] || {};\n            parentObject[XML_ATTRKEY][propName] = serializedValue;\n          } else if (isXml && propertyMapper.xmlIsWrapped) {\n            parentObject[propName] = { [propertyMapper.xmlElementName!]: value };\n          } else {\n            parentObject[propName] = value;\n          }\n        }\n      }\n    }\n\n    const additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);\n    if (additionalPropertiesMapper) {\n      const propNames = Object.keys(modelProps);\n      for (const clientPropName in object) {\n        const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n        if (isAdditionalProperty) {\n          payload[clientPropName] = serializer.serialize(\n            additionalPropertiesMapper,\n            object[clientPropName],\n            objectName + '[\"' + clientPropName + '\"]',\n            options\n          );\n        }\n      }\n    }\n\n    return payload;\n  }\n  return object;\n}\n\nfunction getXmlObjectValue(\n  propertyMapper: Mapper,\n  serializedValue: any,\n  isXml: boolean,\n  options: Required<SerializerOptions>\n) {\n  if (!isXml || !propertyMapper.xmlNamespace) {\n    return serializedValue;\n  }\n\n  const xmlnsKey = propertyMapper.xmlNamespacePrefix\n    ? `xmlns:${propertyMapper.xmlNamespacePrefix}`\n    : \"xmlns\";\n  const xmlNamespace = { [xmlnsKey]: propertyMapper.xmlNamespace };\n\n  if ([\"Composite\"].includes(propertyMapper.type.name)) {\n    if (serializedValue[XML_ATTRKEY]) {\n      return serializedValue;\n    } else {\n      const result: any = { ...serializedValue };\n      result[XML_ATTRKEY] = xmlNamespace;\n      return result;\n    }\n  }\n  const result: any = {};\n  result[options.xmlCharKey] = serializedValue;\n  result[XML_ATTRKEY] = xmlNamespace;\n  return result;\n}\n\nfunction isSpecialXmlProperty(propertyName: string, options: Required<SerializerOptions>): boolean {\n  return [XML_ATTRKEY, options.xmlCharKey].includes(propertyName);\n}\n\nfunction deserializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  responseBody: any,\n  objectName: string,\n  options: Required<SerializerOptions>\n): any {\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n  }\n\n  const modelProps = resolveModelProperties(serializer, mapper, objectName);\n  let instance: { [key: string]: any } = {};\n  const handledPropertyNames: string[] = [];\n\n  for (const key of Object.keys(modelProps)) {\n    const propertyMapper = modelProps[key];\n    const paths = splitSerializeName(modelProps[key].serializedName!);\n    handledPropertyNames.push(paths[0]);\n    const { serializedName, xmlName, xmlElementName } = propertyMapper;\n    let propertyObjectName = objectName;\n    if (serializedName !== \"\" && serializedName !== undefined) {\n      propertyObjectName = objectName + \".\" + serializedName;\n    }\n\n    const headerCollectionPrefix = (propertyMapper as DictionaryMapper).headerCollectionPrefix;\n    if (headerCollectionPrefix) {\n      const dictionary: any = {};\n      for (const headerKey of Object.keys(responseBody)) {\n        if (headerKey.startsWith(headerCollectionPrefix)) {\n          dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(\n            (propertyMapper as DictionaryMapper).type.value,\n            responseBody[headerKey],\n            propertyObjectName,\n            options\n          );\n        }\n\n        handledPropertyNames.push(headerKey);\n      }\n      instance[key] = dictionary;\n    } else if (serializer.isXML) {\n      if (propertyMapper.xmlIsAttribute && responseBody[XML_ATTRKEY]) {\n        instance[key] = serializer.deserialize(\n          propertyMapper,\n          responseBody[XML_ATTRKEY][xmlName!],\n          propertyObjectName,\n          options\n        );\n      } else {\n        const propertyName = xmlElementName || xmlName || serializedName;\n        if (propertyMapper.xmlIsWrapped) {\n          /* a list of <xmlElementName> wrapped by <xmlName>\n            For the xml example below\n              <Cors>\n                <CorsRule>...</CorsRule>\n                <CorsRule>...</CorsRule>\n              </Cors>\n            the responseBody has\n              {\n                Cors: {\n                  CorsRule: [{...}, {...}]\n                }\n              }\n            xmlName is \"Cors\" and xmlElementName is\"CorsRule\".\n          */\n          const wrapped = responseBody[xmlName!];\n          const elementList = wrapped?.[xmlElementName!] ?? [];\n          instance[key] = serializer.deserialize(\n            propertyMapper,\n            elementList,\n            propertyObjectName,\n            options\n          );\n        } else {\n          const property = responseBody[propertyName!];\n          instance[key] = serializer.deserialize(\n            propertyMapper,\n            property,\n            propertyObjectName,\n            options\n          );\n        }\n      }\n    } else {\n      // deserialize the property if it is present in the provided responseBody instance\n      let propertyInstance;\n      let res = responseBody;\n      // traversing the object step by step.\n      for (const item of paths) {\n        if (!res) break;\n        res = res[item];\n      }\n      propertyInstance = res;\n      const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n      // checking that the model property name (key)(ex: \"fishtype\") and the\n      // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n      // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n      // is a better approach. The generator is not consistent with escaping '\\.' in the\n      // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n      // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n      // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n      // the transformation of model property name (ex: \"fishtype\") is done consistently.\n      // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n      if (\n        polymorphicDiscriminator &&\n        key === polymorphicDiscriminator.clientName &&\n        propertyInstance == undefined\n      ) {\n        propertyInstance = mapper.serializedName;\n      }\n\n      let serializedValue;\n      // paging\n      if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n        propertyInstance = responseBody[key];\n        instance = serializer.deserialize(\n          propertyMapper,\n          propertyInstance,\n          propertyObjectName,\n          options\n        );\n      } else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n        serializedValue = serializer.deserialize(\n          propertyMapper,\n          propertyInstance,\n          propertyObjectName,\n          options\n        );\n        instance[key] = serializedValue;\n      }\n    }\n  }\n\n  const additionalPropertiesMapper = mapper.type.additionalProperties;\n  if (additionalPropertiesMapper) {\n    const isAdditionalProperty = (responsePropName: string): boolean => {\n      for (const clientPropName in modelProps) {\n        const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n        if (paths[0] === responsePropName) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    for (const responsePropName in responseBody) {\n      if (isAdditionalProperty(responsePropName)) {\n        instance[responsePropName] = serializer.deserialize(\n          additionalPropertiesMapper,\n          responseBody[responsePropName],\n          objectName + '[\"' + responsePropName + '\"]',\n          options\n        );\n      }\n    }\n  } else if (responseBody) {\n    for (const key of Object.keys(responseBody)) {\n      if (\n        instance[key] === undefined &&\n        !handledPropertyNames.includes(key) &&\n        !isSpecialXmlProperty(key, options)\n      ) {\n        instance[key] = responseBody[key];\n      }\n    }\n  }\n\n  return instance;\n}\n\nfunction deserializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  responseBody: any,\n  objectName: string,\n  options: Required<SerializerOptions>\n): { [key: string]: any } {\n  const value = mapper.type.value;\n  if (!value || typeof value !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`\n    );\n  }\n  if (responseBody) {\n    const tempDictionary: { [key: string]: any } = {};\n    for (const key of Object.keys(responseBody)) {\n      tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);\n    }\n    return tempDictionary;\n  }\n  return responseBody;\n}\n\nfunction deserializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  responseBody: any,\n  objectName: string,\n  options: Required<SerializerOptions>\n): any[] {\n  const element = mapper.type.element;\n  if (!element || typeof element !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`\n    );\n  }\n  if (responseBody) {\n    if (!Array.isArray(responseBody)) {\n      // xml2js will interpret a single element array as just the element, so force it to be an array\n      responseBody = [responseBody];\n    }\n\n    const tempArray = [];\n    for (let i = 0; i < responseBody.length; i++) {\n      tempArray[i] = serializer.deserialize(\n        element,\n        responseBody[i],\n        `${objectName}[${i}]`,\n        options\n      );\n    }\n    return tempArray;\n  }\n  return responseBody;\n}\n\nfunction getPolymorphicMapper(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  polymorphicPropertyName: \"clientName\" | \"serializedName\"\n): CompositeMapper {\n  const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n  if (polymorphicDiscriminator) {\n    const discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n    if (discriminatorName != undefined) {\n      const discriminatorValue = object[discriminatorName];\n      if (discriminatorValue != undefined) {\n        const typeName = mapper.type.uberParent || mapper.type.className;\n        const indexDiscriminator =\n          discriminatorValue === typeName\n            ? discriminatorValue\n            : typeName + \".\" + discriminatorValue;\n        const polymorphicMapper = serializer.modelMappers.discriminators[indexDiscriminator];\n        if (polymorphicMapper) {\n          mapper = polymorphicMapper;\n        }\n      }\n    }\n  }\n  return mapper;\n}\n\nfunction getPolymorphicDiscriminatorRecursively(\n  serializer: Serializer,\n  mapper: CompositeMapper\n): PolymorphicDiscriminator | undefined {\n  return (\n    mapper.type.polymorphicDiscriminator ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.className)\n  );\n}\n\nfunction getPolymorphicDiscriminatorSafely(serializer: Serializer, typeName?: string): any {\n  return (\n    typeName &&\n    serializer.modelMappers[typeName] &&\n    serializer.modelMappers[typeName].type.polymorphicDiscriminator\n  );\n}\n\nexport interface MapperConstraints {\n  InclusiveMaximum?: number;\n  ExclusiveMaximum?: number;\n  InclusiveMinimum?: number;\n  ExclusiveMinimum?: number;\n  MaxLength?: number;\n  MinLength?: number;\n  Pattern?: RegExp;\n  MaxItems?: number;\n  MinItems?: number;\n  UniqueItems?: true;\n  MultipleOf?: number;\n}\n\nexport type MapperType =\n  | SimpleMapperType\n  | CompositeMapperType\n  | SequenceMapperType\n  | DictionaryMapperType\n  | EnumMapperType;\n\nexport interface SimpleMapperType {\n  name:\n    | \"Base64Url\"\n    | \"Boolean\"\n    | \"ByteArray\"\n    | \"Date\"\n    | \"DateTime\"\n    | \"DateTimeRfc1123\"\n    | \"Object\"\n    | \"Stream\"\n    | \"String\"\n    | \"TimeSpan\"\n    | \"UnixTime\"\n    | \"Uuid\"\n    | \"Number\"\n    | \"any\";\n}\n\nexport interface CompositeMapperType {\n  name: \"Composite\";\n\n  // Only one of the two below properties should be present.\n  // Use className to reference another type definition,\n  // and use modelProperties/additionalProperties when the reference to the other type has been resolved.\n  className?: string;\n\n  modelProperties?: { [propertyName: string]: Mapper };\n  additionalProperties?: Mapper;\n\n  uberParent?: string;\n  polymorphicDiscriminator?: PolymorphicDiscriminator;\n}\n\nexport interface SequenceMapperType {\n  name: \"Sequence\";\n  element: Mapper;\n}\n\nexport interface DictionaryMapperType {\n  name: \"Dictionary\";\n  value: Mapper;\n}\n\nexport interface EnumMapperType {\n  name: \"Enum\";\n  allowedValues: any[];\n}\n\nexport interface BaseMapper {\n  /**\n   * Name for the xml element\n   */\n  xmlName?: string;\n  /**\n   * Xml element namespace\n   */\n  xmlNamespace?: string;\n  /**\n   * Xml element namespace prefix\n   */\n  xmlNamespacePrefix?: string;\n  /**\n   * Determines if the current property should be serialized as an attribute of the parent xml element\n   */\n  xmlIsAttribute?: boolean;\n  /**\n   * Name for the xml elements when serializing an array\n   */\n  xmlElementName?: string;\n  /**\n   * Whether or not the current propery should have a wrapping XML element\n   */\n  xmlIsWrapped?: boolean;\n  /**\n   * Whether or not the current propery is readonly\n   */\n  readOnly?: boolean;\n  /**\n   * Whether or not the current propery is a constant\n   */\n  isConstant?: boolean;\n  /**\n   * Whether or not the current propery is required\n   */\n  required?: boolean;\n  /**\n   * Whether or not the current propery allows mull as a value\n   */\n  nullable?: boolean;\n  /**\n   * The name to use when serializing\n   */\n  serializedName?: string;\n  /**\n   * Type of the mapper\n   */\n  type: MapperType;\n  /**\n   * Default value when one is not explicitly provided\n   */\n  defaultValue?: any;\n  /**\n   * Constraints to test the current value against\n   */\n  constraints?: MapperConstraints;\n}\n\nexport type Mapper = BaseMapper | CompositeMapper | SequenceMapper | DictionaryMapper | EnumMapper;\n\nexport interface PolymorphicDiscriminator {\n  serializedName: string;\n  clientName: string;\n  [key: string]: string;\n}\n\nexport interface CompositeMapper extends BaseMapper {\n  type: CompositeMapperType;\n}\n\nexport interface SequenceMapper extends BaseMapper {\n  type: SequenceMapperType;\n}\n\nexport interface DictionaryMapper extends BaseMapper {\n  type: DictionaryMapperType;\n  headerCollectionPrefix?: string;\n}\n\nexport interface EnumMapper extends BaseMapper {\n  type: EnumMapperType;\n}\n\nexport interface UrlParameterValue {\n  value: string;\n  skipUrlEncoding: boolean;\n}\n\n// TODO: why is this here?\nexport function serializeObject(toSerialize: any): any {\n  if (toSerialize == undefined) return undefined;\n  if (toSerialize instanceof Uint8Array) {\n    toSerialize = base64.encodeByteArray(toSerialize);\n    return toSerialize;\n  } else if (toSerialize instanceof Date) {\n    return toSerialize.toISOString();\n  } else if (Array.isArray(toSerialize)) {\n    const array = [];\n    for (let i = 0; i < toSerialize.length; i++) {\n      array.push(serializeObject(toSerialize[i]));\n    }\n    return array;\n  } else if (typeof toSerialize === \"object\") {\n    const dictionary: { [key: string]: any } = {};\n    for (const property in toSerialize) {\n      dictionary[property] = serializeObject(toSerialize[property]);\n    }\n    return dictionary;\n  }\n  return toSerialize;\n}\n\n/**\n * Utility function to create a K:V from a list of strings\n */\nfunction strEnum<T extends string>(o: Array<T>): { [K in T]: K } {\n  const result: any = {};\n  for (const key of o) {\n    result[key] = key;\n  }\n  return result;\n}\n\nexport const MapperType = strEnum([\n  \"Base64Url\",\n  \"Boolean\",\n  \"ByteArray\",\n  \"Composite\",\n  \"Date\",\n  \"DateTime\",\n  \"DateTimeRfc1123\",\n  \"Dictionary\",\n  \"Enum\",\n  \"Number\",\n  \"Object\",\n  \"Sequence\",\n  \"String\",\n  \"Stream\",\n  \"TimeSpan\",\n  \"UnixTime\"\n]);\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpHeaders, HttpHeadersLike, isHttpHeadersLike } from \"./httpHeaders\";\nimport { OperationSpec } from \"./operationSpec\";\nimport { Mapper, Serializer } from \"./serializer\";\nimport { generateUuid } from \"./util/utils\";\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { OperationResponse } from \"./operationResponse\";\nimport { ProxySettings } from \"./serviceClient\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { SpanOptions } from \"@azure/core-tracing\";\nimport { SerializerOptions } from \"./util/serializer.common\";\n\nexport type HttpMethods =\n  | \"GET\"\n  | \"PUT\"\n  | \"POST\"\n  | \"DELETE\"\n  | \"PATCH\"\n  | \"HEAD\"\n  | \"OPTIONS\"\n  | \"TRACE\";\nexport type HttpRequestBody =\n  | Blob\n  | string\n  | ArrayBuffer\n  | ArrayBufferView\n  | (() => NodeJS.ReadableStream);\n\n/**\n * Fired in response to upload or download progress.\n */\nexport type TransferProgressEvent = {\n  /**\n   * The number of bytes loaded so far.\n   */\n  loadedBytes: number;\n};\n\nexport interface WebResourceLike {\n  /**\n   * The URL being accessed by the request.\n   */\n  url: string;\n  /**\n   * The HTTP method to use when making the request.\n   */\n  method: HttpMethods;\n  /**\n   * The HTTP body contents of the request.\n   */\n  body?: any;\n  /**\n   * The HTTP headers to use when making the request.\n   */\n  headers: HttpHeadersLike;\n  /**\n   * Whether or not the body of the HttpOperationResponse should be treated as a stream.\n   */\n  streamResponseBody?: boolean;\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: HttpOperationResponse) => boolean);\n  /**\n   * A function that returns the proper OperationResponse for the given OperationSpec and\n   * HttpOperationResponse combination. If this is undefined, then a simple status code lookup will\n   * be used.\n   */\n  operationResponseGetter?: (\n    operationSpec: OperationSpec,\n    response: HttpOperationResponse\n  ) => undefined | OperationResponse;\n  formData?: any;\n  /**\n   * A query string represented as an object.\n   */\n  query?: { [key: string]: any };\n  /**\n   * Used to parse the response.\n   */\n  operationSpec?: OperationSpec;\n  /**\n   * If credentials (cookies) should be sent along during an XHR.\n   */\n  withCredentials: boolean;\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   */\n  timeout: number;\n  /**\n   * Proxy configuration.\n   */\n  proxySettings?: ProxySettings;\n  /**\n   * If the connection should be reused.\n   */\n  keepAlive?: boolean;\n  /**\n   * Whether or not to decompress response according to Accept-Encoding header (node-fetch only)\n   */\n  decompressResponse?: boolean;\n  /**\n   * A unique identifier for the request. Used for logging and tracing.\n   */\n  requestId: string;\n\n  /**\n   * Used to abort the request later.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Options used to create a span when tracing is enabled.\n   */\n  spanOptions?: SpanOptions;\n\n  /**\n   * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n   * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n   * mentioned properties are not defined.\n   */\n  validateRequestProperties(): void;\n\n  /**\n   * Sets options on the request.\n   */\n  prepare(options: RequestPrepareOptions): WebResourceLike;\n  /**\n   * Clone this request object.\n   */\n  clone(): WebResourceLike;\n}\n\nexport function isWebResourceLike(object: any): object is WebResourceLike {\n  if (typeof object !== \"object\") {\n    return false;\n  }\n  if (\n    typeof object.url === \"string\" &&\n    typeof object.method === \"string\" &&\n    typeof object.headers === \"object\" &&\n    isHttpHeadersLike(object.headers) &&\n    typeof object.validateRequestProperties === \"function\" &&\n    typeof object.prepare === \"function\" &&\n    typeof object.clone === \"function\"\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Creates a new WebResource object.\n *\n * This class provides an abstraction over a REST call by being library / implementation agnostic and wrapping the necessary\n * properties to initiate a request.\n *\n * @constructor\n */\nexport class WebResource implements WebResourceLike {\n  url: string;\n  method: HttpMethods;\n  body?: any;\n  headers: HttpHeadersLike;\n  /**\n   * Whether or not the body of the HttpOperationResponse should be treated as a stream.\n   */\n  streamResponseBody?: boolean;\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: HttpOperationResponse) => boolean);\n  /**\n   * A function that returns the proper OperationResponse for the given OperationSpec and\n   * HttpOperationResponse combination. If this is undefined, then a simple status code lookup will\n   * be used.\n   */\n  operationResponseGetter?: (\n    operationSpec: OperationSpec,\n    response: HttpOperationResponse\n  ) => undefined | OperationResponse;\n  formData?: any;\n  query?: { [key: string]: any };\n  operationSpec?: OperationSpec;\n  withCredentials: boolean;\n  timeout: number;\n  proxySettings?: ProxySettings;\n  keepAlive?: boolean;\n  /**\n   * Whether or not to decompress response according to Accept-Encoding header (node-fetch only)\n   */\n  decompressResponse?: boolean;\n  requestId: string;\n\n  abortSignal?: AbortSignalLike;\n\n  /** Callback which fires upon upload progress. */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Options used to create a span when tracing is enabled.\n   */\n  spanOptions?: SpanOptions;\n\n  constructor(\n    url?: string,\n    method?: HttpMethods,\n    body?: any,\n    query?: { [key: string]: any },\n    headers?: { [key: string]: any } | HttpHeadersLike,\n    streamResponseBody?: boolean,\n    withCredentials?: boolean,\n    abortSignal?: AbortSignalLike,\n    timeout?: number,\n    onUploadProgress?: (progress: TransferProgressEvent) => void,\n    onDownloadProgress?: (progress: TransferProgressEvent) => void,\n    proxySettings?: ProxySettings,\n    keepAlive?: boolean,\n    decompressResponse?: boolean\n  ) {\n    this.streamResponseBody = streamResponseBody;\n    this.url = url || \"\";\n    this.method = method || \"GET\";\n    this.headers = isHttpHeadersLike(headers) ? headers : new HttpHeaders(headers);\n    this.body = body;\n    this.query = query;\n    this.formData = undefined;\n    this.withCredentials = withCredentials || false;\n    this.abortSignal = abortSignal;\n    this.timeout = timeout || 0;\n    this.onUploadProgress = onUploadProgress;\n    this.onDownloadProgress = onDownloadProgress;\n    this.proxySettings = proxySettings;\n    this.keepAlive = keepAlive;\n    this.decompressResponse = decompressResponse;\n    this.requestId = this.headers.get(\"x-ms-client-request-id\") || generateUuid();\n  }\n\n  /**\n   * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n   * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n   * mentioned properties are not defined.\n   */\n  validateRequestProperties(): void {\n    if (!this.method) {\n      throw new Error(\"WebResource.method is required.\");\n    }\n    if (!this.url) {\n      throw new Error(\"WebResource.url is required.\");\n    }\n  }\n\n  /**\n   * Prepares the request.\n   * @param {RequestPrepareOptions} options Options to provide for preparing the request.\n   * @returns {WebResource} Returns the prepared WebResource (HTTP Request) object that needs to be given to the request pipeline.\n   */\n  prepare(options: RequestPrepareOptions): WebResource {\n    if (!options) {\n      throw new Error(\"options object is required\");\n    }\n\n    if (\n      options.method === undefined ||\n      options.method === null ||\n      typeof options.method.valueOf() !== \"string\"\n    ) {\n      throw new Error(\"options.method must be a string.\");\n    }\n\n    if (options.url && options.pathTemplate) {\n      throw new Error(\n        \"options.url and options.pathTemplate are mutually exclusive. Please provide exactly one of them.\"\n      );\n    }\n\n    if (\n      (options.pathTemplate === undefined ||\n        options.pathTemplate === null ||\n        typeof options.pathTemplate.valueOf() !== \"string\") &&\n      (options.url === undefined ||\n        options.url === null ||\n        typeof options.url.valueOf() !== \"string\")\n    ) {\n      throw new Error(\"Please provide exactly one of options.pathTemplate or options.url.\");\n    }\n\n    // set the url if it is provided.\n    if (options.url) {\n      if (typeof options.url !== \"string\") {\n        throw new Error('options.url must be of type \"string\".');\n      }\n      this.url = options.url;\n    }\n\n    // set the method\n    if (options.method) {\n      const validMethods = [\"GET\", \"PUT\", \"HEAD\", \"DELETE\", \"OPTIONS\", \"POST\", \"PATCH\", \"TRACE\"];\n      if (validMethods.indexOf(options.method.toUpperCase()) === -1) {\n        throw new Error(\n          'The provided method \"' +\n            options.method +\n            '\" is invalid. Supported HTTP methods are: ' +\n            JSON.stringify(validMethods)\n        );\n      }\n    }\n    this.method = options.method.toUpperCase() as HttpMethods;\n\n    // construct the url if path template is provided\n    if (options.pathTemplate) {\n      const { pathTemplate, pathParameters } = options;\n      if (typeof pathTemplate !== \"string\") {\n        throw new Error('options.pathTemplate must be of type \"string\".');\n      }\n      if (!options.baseUrl) {\n        options.baseUrl = \"https://management.azure.com\";\n      }\n      const baseUrl = options.baseUrl;\n      let url =\n        baseUrl +\n        (baseUrl.endsWith(\"/\") ? \"\" : \"/\") +\n        (pathTemplate.startsWith(\"/\") ? pathTemplate.slice(1) : pathTemplate);\n      const segments = url.match(/({[\\w-]*\\s*[\\w-]*})/gi);\n      if (segments && segments.length) {\n        if (!pathParameters) {\n          throw new Error(\n            `pathTemplate: ${pathTemplate} has been provided. Hence, options.pathParameters must also be provided.`\n          );\n        }\n        segments.forEach(function(item) {\n          const pathParamName = item.slice(1, -1);\n          const pathParam = (pathParameters as { [key: string]: any })[pathParamName];\n          if (\n            pathParam === null ||\n            pathParam === undefined ||\n            !(typeof pathParam === \"string\" || typeof pathParam === \"object\")\n          ) {\n            const stringifiedPathParameters = JSON.stringify(pathParameters, undefined, 2);\n            throw new Error(\n              `pathTemplate: ${pathTemplate} contains the path parameter ${pathParamName}` +\n                ` however, it is not present in parameters: ${stringifiedPathParameters}.` +\n                `The value of the path parameter can either be a \"string\" of the form { ${pathParamName}: \"some sample value\" } or ` +\n                `it can be an \"object\" of the form { \"${pathParamName}\": { value: \"some sample value\", skipUrlEncoding: true } }.`\n            );\n          }\n\n          if (typeof pathParam.valueOf() === \"string\") {\n            url = url.replace(item, encodeURIComponent(pathParam));\n          }\n\n          if (typeof pathParam.valueOf() === \"object\") {\n            if (!pathParam.value) {\n              throw new Error(\n                `options.pathParameters[${pathParamName}] is of type \"object\" but it does not contain a \"value\" property.`\n              );\n            }\n            if (pathParam.skipUrlEncoding) {\n              url = url.replace(item, pathParam.value);\n            } else {\n              url = url.replace(item, encodeURIComponent(pathParam.value));\n            }\n          }\n        });\n      }\n      this.url = url;\n    }\n\n    // append query parameters to the url if they are provided. They can be provided with pathTemplate or url option.\n    if (options.queryParameters) {\n      const queryParameters = options.queryParameters;\n      if (typeof queryParameters !== \"object\") {\n        throw new Error(\n          `options.queryParameters must be of type object. It should be a JSON object ` +\n            `of \"query-parameter-name\" as the key and the \"query-parameter-value\" as the value. ` +\n            `The \"query-parameter-value\" may be fo type \"string\" or an \"object\" of the form { value: \"query-parameter-value\", skipUrlEncoding: true }.`\n        );\n      }\n      // append question mark if it is not present in the url\n      if (this.url && this.url.indexOf(\"?\") === -1) {\n        this.url += \"?\";\n      }\n      // construct queryString\n      const queryParams = [];\n      // We need to populate this.query as a dictionary if the request is being used for Sway's validateRequest().\n      this.query = {};\n      for (const queryParamName in queryParameters) {\n        const queryParam: any = queryParameters[queryParamName];\n        if (queryParam) {\n          if (typeof queryParam === \"string\") {\n            queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam));\n            this.query[queryParamName] = encodeURIComponent(queryParam);\n          } else if (typeof queryParam === \"object\") {\n            if (!queryParam.value) {\n              throw new Error(\n                `options.queryParameters[${queryParamName}] is of type \"object\" but it does not contain a \"value\" property.`\n              );\n            }\n            if (queryParam.skipUrlEncoding) {\n              queryParams.push(queryParamName + \"=\" + queryParam.value);\n              this.query[queryParamName] = queryParam.value;\n            } else {\n              queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam.value));\n              this.query[queryParamName] = encodeURIComponent(queryParam.value);\n            }\n          }\n        }\n      } // end-of-for\n      // append the queryString\n      this.url += queryParams.join(\"&\");\n    }\n\n    // add headers to the request if they are provided\n    if (options.headers) {\n      const headers = options.headers;\n      for (const headerName of Object.keys(options.headers)) {\n        this.headers.set(headerName, headers[headerName]);\n      }\n    }\n    // ensure accept-language is set correctly\n    if (!this.headers.get(\"accept-language\")) {\n      this.headers.set(\"accept-language\", \"en-US\");\n    }\n    // ensure the request-id is set correctly\n    if (!this.headers.get(\"x-ms-client-request-id\") && !options.disableClientRequestId) {\n      this.headers.set(\"x-ms-client-request-id\", this.requestId);\n    }\n\n    // default\n    if (!this.headers.get(\"Content-Type\")) {\n      this.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n    }\n\n    // set the request body. request.js automatically sets the Content-Length request header, so we need not set it explicilty\n    this.body = options.body;\n    if (options.body !== undefined && options.body !== null) {\n      // body as a stream special case. set the body as-is and check for some special request headers specific to sending a stream.\n      if (options.bodyIsStream) {\n        if (!this.headers.get(\"Transfer-Encoding\")) {\n          this.headers.set(\"Transfer-Encoding\", \"chunked\");\n        }\n        if (this.headers.get(\"Content-Type\") !== \"application/octet-stream\") {\n          this.headers.set(\"Content-Type\", \"application/octet-stream\");\n        }\n      } else {\n        if (options.serializationMapper) {\n          this.body = new Serializer(options.mappers).serialize(\n            options.serializationMapper,\n            options.body,\n            \"requestBody\"\n          );\n        }\n        if (!options.disableJsonStringifyOnBody) {\n          this.body = JSON.stringify(options.body);\n        }\n      }\n    }\n\n    if (options.spanOptions) {\n      this.spanOptions = options.spanOptions;\n    }\n\n    this.abortSignal = options.abortSignal;\n    this.onDownloadProgress = options.onDownloadProgress;\n    this.onUploadProgress = options.onUploadProgress;\n\n    return this;\n  }\n\n  /**\n   * Clone this WebResource HTTP request object.\n   * @returns {WebResource} The clone of this WebResource HTTP request object.\n   */\n  clone(): WebResource {\n    const result = new WebResource(\n      this.url,\n      this.method,\n      this.body,\n      this.query,\n      this.headers && this.headers.clone(),\n      this.streamResponseBody,\n      this.withCredentials,\n      this.abortSignal,\n      this.timeout,\n      this.onUploadProgress,\n      this.onDownloadProgress,\n      this.proxySettings,\n      this.keepAlive,\n      this.decompressResponse\n    );\n\n    if (this.formData) {\n      result.formData = this.formData;\n    }\n\n    if (this.operationSpec) {\n      result.operationSpec = this.operationSpec;\n    }\n\n    if (this.shouldDeserialize) {\n      result.shouldDeserialize = this.shouldDeserialize;\n    }\n\n    if (this.operationResponseGetter) {\n      result.operationResponseGetter = this.operationResponseGetter;\n    }\n\n    return result;\n  }\n}\n\nexport interface RequestPrepareOptions {\n  /**\n   * The HTTP request method. Valid values are \"GET\", \"PUT\", \"HEAD\", \"DELETE\", \"OPTIONS\", \"POST\",\n   * or \"PATCH\".\n   */\n  method: HttpMethods;\n  /**\n   * The request url. It may or may not have query parameters in it. Either provide the \"url\" or\n   * provide the \"pathTemplate\" in the options object. Both the options are mutually exclusive.\n   */\n  url?: string;\n  /**\n   * A dictionary of query parameters to be appended to the url, where\n   * the \"key\" is the \"query-parameter-name\" and the \"value\" is the \"query-parameter-value\".\n   * The \"query-parameter-value\" can be of type \"string\" or it can be of type \"object\".\n   * The \"object\" format should be used when you want to skip url encoding. While using the object format,\n   * the object must have a property named value which provides the \"query-parameter-value\".\n   * Example:\n   *    - query-parameter-value in \"object\" format: { \"query-parameter-name\": { value: \"query-parameter-value\", skipUrlEncoding: true } }\n   *    - query-parameter-value in \"string\" format: { \"query-parameter-name\": \"query-parameter-value\"}.\n   * Note: \"If options.url already has some query parameters, then the value provided in options.queryParameters will be appended to the url.\n   */\n  queryParameters?: { [key: string]: any | ParameterValue };\n  /**\n   * The path template of the request url. Either provide the \"url\" or provide the \"pathTemplate\" in\n   * the options object. Both the options are mutually exclusive.\n   * Example: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}\"\n   */\n  pathTemplate?: string;\n  /**\n   * The base url of the request. Default value is: \"https://management.azure.com\". This is\n   * applicable only with pathTemplate. If you are providing options.url then it is expected that\n   * you provide the complete url.\n   */\n  baseUrl?: string;\n  /**\n   * A dictionary of path parameters that need to be replaced with actual values in the pathTemplate.\n   * Here the key is the \"path-parameter-name\" and the value is the \"path-parameter-value\".\n   * The \"path-parameter-value\" can be of type \"string\"  or it can be of type \"object\".\n   * The \"object\" format should be used when you want to skip url encoding. While using the object format,\n   * the object must have a property named value which provides the \"path-parameter-value\".\n   * Example:\n   *    - path-parameter-value in \"object\" format: { \"path-parameter-name\": { value: \"path-parameter-value\", skipUrlEncoding: true } }\n   *    - path-parameter-value in \"string\" format: { \"path-parameter-name\": \"path-parameter-value\" }.\n   */\n  pathParameters?: { [key: string]: any | ParameterValue };\n  formData?: { [key: string]: any };\n  /**\n   * A dictionary of request headers that need to be applied to the request.\n   * Here the key is the \"header-name\" and the value is the \"header-value\". The header-value MUST be of type string.\n   *  - ContentType must be provided with the key name as \"Content-Type\". Default value \"application/json; charset=utf-8\".\n   *  - \"Transfer-Encoding\" is set to \"chunked\" by default if \"options.bodyIsStream\" is set to true.\n   *  - \"Content-Type\" is set to \"application/octet-stream\" by default if \"options.bodyIsStream\" is set to true.\n   *  - \"accept-language\" by default is set to \"en-US\"\n   *  - \"x-ms-client-request-id\" by default is set to a new Guid. To not generate a guid for the request, please set options.disableClientRequestId to true\n   */\n  headers?: { [key: string]: any };\n  /**\n   * When set to true, instructs the client to not set \"x-ms-client-request-id\" header to a new Guid().\n   */\n  disableClientRequestId?: boolean;\n  /**\n   * The request body. It can be of any type. This value will be serialized if it is not a stream.\n   */\n  body?: any;\n  /**\n   * Provides information on how to serialize the request body.\n   */\n  serializationMapper?: Mapper;\n  /**\n   * A dictionary of mappers that may be used while [de]serialization.\n   */\n  mappers?: { [x: string]: any };\n  /**\n   * Provides information on how to deserialize the response body.\n   */\n  deserializationMapper?: object;\n  /**\n   * Indicates whether this method should JSON.stringify() the request body. Default value: false.\n   */\n  disableJsonStringifyOnBody?: boolean;\n  /**\n   * Indicates whether the request body is a stream (useful for file upload scenarios).\n   */\n  bodyIsStream?: boolean;\n  abortSignal?: AbortSignalLike;\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n  spanOptions?: SpanOptions;\n}\n\n/**\n * The Parameter value provided for path or query parameters in RequestPrepareOptions\n */\nexport interface ParameterValue {\n  value: any;\n  skipUrlEncoding: boolean;\n  [key: string]: any;\n}\n\n/**\n * Describes the base structure of the options object that will be used in every operation.\n */\nexport interface RequestOptionsBase {\n  /**\n   * @property {object} [customHeaders] User defined custom request headers that\n   * will be applied before the request is sent.\n   */\n  customHeaders?: { [key: string]: string };\n\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   */\n  timeout?: number;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Callback which fires upon download progress.\n   */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: HttpOperationResponse) => boolean);\n\n  /**\n   * Options used to create a span when tracing is enabled.\n   */\n  spanOptions?: SpanOptions;\n\n  [key: string]: any;\n\n  /**\n   * Options to override XML parsing/building behavior.\n   */\n  serializerOptions?: SerializerOptions;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/// <reference path=\"./shims-public.d.ts\" />\ntype AbortEventListener = (this: AbortSignalLike, ev?: any) => any;\n\nconst listenersMap = new WeakMap<AbortSignal, AbortEventListener[]>();\nconst abortedMap = new WeakMap<AbortSignal, boolean>();\n\n/**\n * Allows the request to be aborted upon firing of the \"abort\" event.\n * Compatible with the browser built-in AbortSignal and common polyfills.\n */\nexport interface AbortSignalLike {\n  /**\n   * Indicates if the signal has already been aborted.\n   */\n  readonly aborted: boolean;\n  /**\n   * Add new \"abort\" event listener, only support \"abort\" event.\n   */\n  addEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   */\n  removeEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n}\n\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call AbortSignal.none to create a new AbortSignal instance that cannot be cancelled.\n * Use `AbortSignal.none` when you are required to pass a cancellation token but the operation\n * cannot or will not ever be cancelled.\n *\n * @example\n * // Abort without timeout\n * await doAsyncWork(AbortSignal.none);\n *\n * @export\n * @class AbortSignal\n * @implements {AbortSignalLike}\n */\nexport class AbortSignal implements AbortSignalLike {\n  constructor() {\n    listenersMap.set(this, []);\n    abortedMap.set(this, false);\n  }\n\n  /**\n   * Status of whether aborted or not.\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberof AbortSignal\n   */\n  public get aborted(): boolean {\n    if (!abortedMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    return abortedMap.get(this)!;\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will never be aborted.\n   *\n   * @readonly\n   * @static\n   * @type {AbortSignal}\n   * @memberof AbortSignal\n   */\n  public static get none(): AbortSignal {\n    return new AbortSignal();\n  }\n\n  /**\n   * onabort event listener.\n   *\n   * @memberof AbortSignal\n   */\n  public onabort: ((ev?: Event) => any) | null = null;\n\n  /**\n   * Added new \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param {\"abort\"} _type Only support \"abort\" event\n   * @param {(this: AbortSignalLike, ev: any) => any} listener\n   * @memberof AbortSignal\n   */\n  public addEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n    listeners.push(listener);\n  }\n\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param {\"abort\"} _type Only support \"abort\" event\n   * @param {(this: AbortSignalLike, ev: any) => any} listener\n   * @memberof AbortSignal\n   */\n  public removeEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Dispatches a synthetic event to the AbortSignal.\n   */\n  dispatchEvent(_event: Event): boolean {\n    throw new Error(\n      \"This is a stub dispatchEvent implementation that should not be used.  It only exists for type-checking purposes.\"\n    );\n  }\n}\n\n/**\n * Helper to trigger an abort event immediately, the onabort and all abort event listeners will be triggered.\n * Will try to trigger abort event for all linked AbortSignal nodes.\n *\n * - If there is a timeout, the timer will be cancelled.\n * - If aborted is true, nothing will happen.\n *\n * @returns\n * @internal\n */\nexport function abortSignal(signal: AbortSignal) {\n  if (signal.aborted) {\n    return;\n  }\n\n  if (signal.onabort) {\n    signal.onabort.call(signal);\n  }\n\n  const listeners = listenersMap.get(signal)!;\n  if (listeners) {\n    listeners.forEach((listener) => {\n      listener.call(signal, { type: \"abort\" });\n    });\n  }\n\n  abortedMap.set(signal, true);\n}\n","import { AbortSignal, abortSignal, AbortSignalLike } from \"./AbortSignal\";\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n\n/**\n * An AbortController provides an AbortSignal and the associated controls to signal\n * that an asynchronous operation should be aborted.\n *\n * @example\n * // Abort an operation when another event fires\n * const controller = new AbortController();\n * const signal = controller.signal;\n * doAsyncWork(signal);\n * button.addEventListener('click', () => controller.abort());\n *\n * @example\n * // Share aborter cross multiple operations in 30s\n * // Upload the same data to 2 different data centers at the same time,\n * // abort another when any of them is finished\n * const controller = AbortController.withTimeout(30 * 1000);\n * doAsyncWork(controller.signal).then(controller.abort);\n * doAsyncWork(controller.signal).then(controller.abort);\n *\n * @example\n * // Cascaded aborting\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n *\n * @export\n * @class AbortController\n * @implements {AbortSignalLike}\n */\nexport class AbortController {\n  private _signal: AbortSignal;\n\n  /**\n   * @param {AbortSignalLike[]} [parentSignals] The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   * @constructor\n   */\n  constructor(parentSignals?: AbortSignalLike[]);\n  /**\n   * @param {...AbortSignalLike} parentSignals The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   * @constructor\n   */\n  constructor(...parentSignals: AbortSignalLike[]);\n  constructor(parentSignals?: any) {\n    this._signal = new AbortSignal();\n\n    if (!parentSignals) {\n      return;\n    }\n    // coerce parentSignals into an array\n    if (!Array.isArray(parentSignals)) {\n      parentSignals = arguments;\n    }\n    for (const parentSignal of parentSignals) {\n      // if the parent signal has already had abort() called,\n      // then call abort on this signal as well.\n      if (parentSignal.aborted) {\n        this.abort();\n      } else {\n        // when the parent signal aborts, this signal should as well.\n        parentSignal.addEventListener(\"abort\", () => {\n          this.abort();\n        });\n      }\n    }\n  }\n\n  /**\n   * The AbortSignal associated with this controller that will signal aborted\n   * when the abort method is called on this controller.\n   *\n   * @readonly\n   * @type {AbortSignal}\n   * @memberof AbortController\n   */\n  public get signal() {\n    return this._signal;\n  }\n\n  /**\n   * Signal that any operations passed this controller's associated abort signal\n   * to cancel any remaining work and throw an `AbortError`.\n   *\n   * @memberof AbortController\n   */\n  abort() {\n    abortSignal(this._signal);\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will abort after the provided ms.\n   *\n   * @static\n   * @params {number} ms Elapsed time in milliseconds to trigger an abort.\n   * @returns {AbortSignal}\n   */\n  public static timeout(ms: number): AbortSignal {\n    const signal = new AbortSignal();\n    const timer = setTimeout(abortSignal, ms, signal);\n    // Prevent the active Timer from keeping the Node.js event loop active.\n    if (typeof timer.unref === \"function\") {\n      timer.unref();\n    }\n    return signal;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const custom = {};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { replaceAll } from \"./util/utils\";\n\ntype URLQueryParseState = \"ParameterName\" | \"ParameterValue\";\n\n/**\n * A class that handles the query portion of a URLBuilder.\n */\nexport class URLQuery {\n  private readonly _rawQuery: { [queryParameterName: string]: string | string[] } = {};\n\n  /**\n   * Get whether or not there any query parameters in this URLQuery.\n   */\n  public any(): boolean {\n    return Object.keys(this._rawQuery).length > 0;\n  }\n\n  /**\n   * Get the keys of the query string.\n   */\n  public keys(): string[] {\n    return Object.keys(this._rawQuery);\n  }\n\n  /**\n   * Set a query parameter with the provided name and value. If the parameterValue is undefined or\n   * empty, then this will attempt to remove an existing query parameter with the provided\n   * parameterName.\n   */\n  public set(parameterName: string, parameterValue: any): void {\n    if (parameterName) {\n      if (parameterValue !== undefined && parameterValue !== null) {\n        const newValue = Array.isArray(parameterValue) ? parameterValue : parameterValue.toString();\n        this._rawQuery[parameterName] = newValue;\n      } else {\n        delete this._rawQuery[parameterName];\n      }\n    }\n  }\n\n  /**\n   * Get the value of the query parameter with the provided name. If no parameter exists with the\n   * provided parameter name, then undefined will be returned.\n   */\n  public get(parameterName: string): string | string[] | undefined {\n    return parameterName ? this._rawQuery[parameterName] : undefined;\n  }\n\n  /**\n   * Get the string representation of this query. The return value will not start with a \"?\".\n   */\n  public toString(): string {\n    let result = \"\";\n    for (const parameterName in this._rawQuery) {\n      if (result) {\n        result += \"&\";\n      }\n      const parameterValue = this._rawQuery[parameterName];\n      if (Array.isArray(parameterValue)) {\n        const parameterStrings = [];\n        for (const parameterValueElement of parameterValue) {\n          parameterStrings.push(`${parameterName}=${parameterValueElement}`);\n        }\n        result += parameterStrings.join(\"&\");\n      } else {\n        result += `${parameterName}=${parameterValue}`;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Parse a URLQuery from the provided text.\n   */\n  public static parse(text: string): URLQuery {\n    const result = new URLQuery();\n\n    if (text) {\n      if (text.startsWith(\"?\")) {\n        text = text.substring(1);\n      }\n\n      let currentState: URLQueryParseState = \"ParameterName\";\n\n      let parameterName = \"\";\n      let parameterValue = \"\";\n      for (let i = 0; i < text.length; ++i) {\n        const currentCharacter: string = text[i];\n        switch (currentState) {\n          case \"ParameterName\":\n            switch (currentCharacter) {\n              case \"=\":\n                currentState = \"ParameterValue\";\n                break;\n\n              case \"&\":\n                parameterName = \"\";\n                parameterValue = \"\";\n                break;\n\n              default:\n                parameterName += currentCharacter;\n                break;\n            }\n            break;\n\n          case \"ParameterValue\":\n            switch (currentCharacter) {\n              case \"&\":\n                result.set(parameterName, parameterValue);\n                parameterName = \"\";\n                parameterValue = \"\";\n                currentState = \"ParameterName\";\n                break;\n\n              default:\n                parameterValue += currentCharacter;\n                break;\n            }\n            break;\n\n          default:\n            throw new Error(\"Unrecognized URLQuery parse state: \" + currentState);\n        }\n      }\n      if (currentState === \"ParameterValue\") {\n        result.set(parameterName, parameterValue);\n      }\n    }\n\n    return result;\n  }\n}\n\n/**\n * A class that handles creating, modifying, and parsing URLs.\n */\nexport class URLBuilder {\n  private _scheme: string | undefined;\n  private _host: string | undefined;\n  private _port: string | undefined;\n  private _path: string | undefined;\n  private _query: URLQuery | undefined;\n\n  /**\n   * Set the scheme/protocol for this URL. If the provided scheme contains other parts of a URL\n   * (such as a host, port, path, or query), those parts will be added to this URL as well.\n   */\n  public setScheme(scheme: string | undefined): void {\n    if (!scheme) {\n      this._scheme = undefined;\n    } else {\n      this.set(scheme, \"SCHEME\");\n    }\n  }\n\n  /**\n   * Get the scheme that has been set in this URL.\n   */\n  public getScheme(): string | undefined {\n    return this._scheme;\n  }\n\n  /**\n   * Set the host for this URL. If the provided host contains other parts of a URL (such as a\n   * port, path, or query), those parts will be added to this URL as well.\n   */\n  public setHost(host: string | undefined): void {\n    if (!host) {\n      this._host = undefined;\n    } else {\n      this.set(host, \"SCHEME_OR_HOST\");\n    }\n  }\n\n  /**\n   * Get the host that has been set in this URL.\n   */\n  public getHost(): string | undefined {\n    return this._host;\n  }\n\n  /**\n   * Set the port for this URL. If the provided port contains other parts of a URL (such as a\n   * path or query), those parts will be added to this URL as well.\n   */\n  public setPort(port: number | string | undefined): void {\n    if (port === undefined || port === null || port === \"\") {\n      this._port = undefined;\n    } else {\n      this.set(port.toString(), \"PORT\");\n    }\n  }\n\n  /**\n   * Get the port that has been set in this URL.\n   */\n  public getPort(): string | undefined {\n    return this._port;\n  }\n\n  /**\n   * Set the path for this URL. If the provided path contains a query, then it will be added to\n   * this URL as well.\n   */\n  public setPath(path: string | undefined): void {\n    if (!path) {\n      this._path = undefined;\n    } else {\n      const schemeIndex = path.indexOf(\"://\");\n      if (schemeIndex !== -1) {\n        const schemeStart = path.lastIndexOf(\"/\", schemeIndex);\n        // Make sure to only grab the URL part of the path before setting the state back to SCHEME\n        // this will handle cases such as \"/a/b/c/https://microsoft.com\" => \"https://microsoft.com\"\n        this.set(schemeStart === -1 ? path : path.substr(schemeStart + 1), \"SCHEME\");\n      } else {\n        this.set(path, \"PATH\");\n      }\n    }\n  }\n\n  /**\n   * Append the provided path to this URL's existing path. If the provided path contains a query,\n   * then it will be added to this URL as well.\n   */\n  public appendPath(path: string | undefined): void {\n    if (path) {\n      let currentPath: string | undefined = this.getPath();\n      if (currentPath) {\n        if (!currentPath.endsWith(\"/\")) {\n          currentPath += \"/\";\n        }\n\n        if (path.startsWith(\"/\")) {\n          path = path.substring(1);\n        }\n\n        path = currentPath + path;\n      }\n      this.set(path, \"PATH\");\n    }\n  }\n\n  /**\n   * Get the path that has been set in this URL.\n   */\n  public getPath(): string | undefined {\n    return this._path;\n  }\n\n  /**\n   * Set the query in this URL.\n   */\n  public setQuery(query: string | undefined): void {\n    if (!query) {\n      this._query = undefined;\n    } else {\n      this._query = URLQuery.parse(query);\n    }\n  }\n\n  /**\n   * Set a query parameter with the provided name and value in this URL's query. If the provided\n   * query parameter value is undefined or empty, then the query parameter will be removed if it\n   * existed.\n   */\n  public setQueryParameter(queryParameterName: string, queryParameterValue: any): void {\n    if (queryParameterName) {\n      if (!this._query) {\n        this._query = new URLQuery();\n      }\n      this._query.set(queryParameterName, queryParameterValue);\n    }\n  }\n\n  /**\n   * Get the value of the query parameter with the provided query parameter name. If no query\n   * parameter exists with the provided name, then undefined will be returned.\n   */\n  public getQueryParameterValue(queryParameterName: string): string | string[] | undefined {\n    return this._query ? this._query.get(queryParameterName) : undefined;\n  }\n\n  /**\n   * Get the query in this URL.\n   */\n  public getQuery(): string | undefined {\n    return this._query ? this._query.toString() : undefined;\n  }\n\n  /**\n   * Set the parts of this URL by parsing the provided text using the provided startState.\n   */\n  private set(text: string, startState: URLTokenizerState): void {\n    const tokenizer = new URLTokenizer(text, startState);\n\n    while (tokenizer.next()) {\n      const token: URLToken | undefined = tokenizer.current();\n      let tokenPath: string | undefined;\n      if (token) {\n        switch (token.type) {\n          case \"SCHEME\":\n            this._scheme = token.text || undefined;\n            break;\n\n          case \"HOST\":\n            this._host = token.text || undefined;\n            break;\n\n          case \"PORT\":\n            this._port = token.text || undefined;\n            break;\n\n          case \"PATH\":\n            tokenPath = token.text || undefined;\n            if (!this._path || this._path === \"/\" || tokenPath !== \"/\") {\n              this._path = tokenPath;\n            }\n            break;\n\n          case \"QUERY\":\n            this._query = URLQuery.parse(token.text);\n            break;\n\n          default:\n            throw new Error(`Unrecognized URLTokenType: ${token.type}`);\n        }\n      }\n    }\n  }\n\n  public toString(): string {\n    let result = \"\";\n\n    if (this._scheme) {\n      result += `${this._scheme}://`;\n    }\n\n    if (this._host) {\n      result += this._host;\n    }\n\n    if (this._port) {\n      result += `:${this._port}`;\n    }\n\n    if (this._path) {\n      if (!this._path.startsWith(\"/\")) {\n        result += \"/\";\n      }\n      result += this._path;\n    }\n\n    if (this._query && this._query.any()) {\n      result += `?${this._query.toString()}`;\n    }\n\n    return result;\n  }\n\n  /**\n   * If the provided searchValue is found in this URLBuilder, then replace it with the provided\n   * replaceValue.\n   */\n  public replaceAll(searchValue: string, replaceValue: string): void {\n    if (searchValue) {\n      this.setScheme(replaceAll(this.getScheme(), searchValue, replaceValue));\n      this.setHost(replaceAll(this.getHost(), searchValue, replaceValue));\n      this.setPort(replaceAll(this.getPort(), searchValue, replaceValue));\n      this.setPath(replaceAll(this.getPath(), searchValue, replaceValue));\n      this.setQuery(replaceAll(this.getQuery(), searchValue, replaceValue));\n    }\n  }\n\n  public static parse(text: string): URLBuilder {\n    const result = new URLBuilder();\n    result.set(text, \"SCHEME_OR_HOST\");\n    return result;\n  }\n}\n\ntype URLTokenizerState = \"SCHEME\" | \"SCHEME_OR_HOST\" | \"HOST\" | \"PORT\" | \"PATH\" | \"QUERY\" | \"DONE\";\n\ntype URLTokenType = \"SCHEME\" | \"HOST\" | \"PORT\" | \"PATH\" | \"QUERY\";\n\nexport class URLToken {\n  public constructor(public readonly text: string, public readonly type: URLTokenType) {}\n\n  public static scheme(text: string): URLToken {\n    return new URLToken(text, \"SCHEME\");\n  }\n\n  public static host(text: string): URLToken {\n    return new URLToken(text, \"HOST\");\n  }\n\n  public static port(text: string): URLToken {\n    return new URLToken(text, \"PORT\");\n  }\n\n  public static path(text: string): URLToken {\n    return new URLToken(text, \"PATH\");\n  }\n\n  public static query(text: string): URLToken {\n    return new URLToken(text, \"QUERY\");\n  }\n}\n\n/**\n * Get whether or not the provided character (single character string) is an alphanumeric (letter or\n * digit) character.\n */\nexport function isAlphaNumericCharacter(character: string): boolean {\n  const characterCode: number = character.charCodeAt(0);\n  return (\n    (48 /* '0' */ <= characterCode && characterCode <= 57) /* '9' */ ||\n    (65 /* 'A' */ <= characterCode && characterCode <= 90) /* 'Z' */ ||\n    (97 /* 'a' */ <= characterCode && characterCode <= 122) /* 'z' */\n  );\n}\n\n/**\n * A class that tokenizes URL strings.\n */\nexport class URLTokenizer {\n  readonly _textLength: number;\n  _currentState: URLTokenizerState;\n  _currentIndex: number;\n  _currentToken: URLToken | undefined;\n\n  public constructor(readonly _text: string, state?: URLTokenizerState) {\n    this._textLength = _text ? _text.length : 0;\n    this._currentState = state !== undefined && state !== null ? state : \"SCHEME_OR_HOST\";\n    this._currentIndex = 0;\n  }\n\n  /**\n   * Get the current URLToken this URLTokenizer is pointing at, or undefined if the URLTokenizer\n   * hasn't started or has finished tokenizing.\n   */\n  public current(): URLToken | undefined {\n    return this._currentToken;\n  }\n\n  /**\n   * Advance to the next URLToken and return whether or not a URLToken was found.\n   */\n  public next(): boolean {\n    if (!hasCurrentCharacter(this)) {\n      this._currentToken = undefined;\n    } else {\n      switch (this._currentState) {\n        case \"SCHEME\":\n          nextScheme(this);\n          break;\n\n        case \"SCHEME_OR_HOST\":\n          nextSchemeOrHost(this);\n          break;\n\n        case \"HOST\":\n          nextHost(this);\n          break;\n\n        case \"PORT\":\n          nextPort(this);\n          break;\n\n        case \"PATH\":\n          nextPath(this);\n          break;\n\n        case \"QUERY\":\n          nextQuery(this);\n          break;\n\n        default:\n          throw new Error(`Unrecognized URLTokenizerState: ${this._currentState}`);\n      }\n    }\n    return !!this._currentToken;\n  }\n}\n\n/**\n * Read the remaining characters from this Tokenizer's character stream.\n */\nfunction readRemaining(tokenizer: URLTokenizer): string {\n  let result = \"\";\n  if (tokenizer._currentIndex < tokenizer._textLength) {\n    result = tokenizer._text.substring(tokenizer._currentIndex);\n    tokenizer._currentIndex = tokenizer._textLength;\n  }\n  return result;\n}\n\n/**\n * Whether or not this URLTokenizer has a current character.\n */\nfunction hasCurrentCharacter(tokenizer: URLTokenizer): boolean {\n  return tokenizer._currentIndex < tokenizer._textLength;\n}\n\n/**\n * Get the character in the text string at the current index.\n */\nfunction getCurrentCharacter(tokenizer: URLTokenizer): string {\n  return tokenizer._text[tokenizer._currentIndex];\n}\n\n/**\n * Advance to the character in text that is \"step\" characters ahead. If no step value is provided,\n * then step will default to 1.\n */\nfunction nextCharacter(tokenizer: URLTokenizer, step?: number): void {\n  if (hasCurrentCharacter(tokenizer)) {\n    if (!step) {\n      step = 1;\n    }\n    tokenizer._currentIndex += step;\n  }\n}\n\n/**\n * Starting with the current character, peek \"charactersToPeek\" number of characters ahead in this\n * Tokenizer's stream of characters.\n */\nfunction peekCharacters(tokenizer: URLTokenizer, charactersToPeek: number): string {\n  let endIndex: number = tokenizer._currentIndex + charactersToPeek;\n  if (tokenizer._textLength < endIndex) {\n    endIndex = tokenizer._textLength;\n  }\n  return tokenizer._text.substring(tokenizer._currentIndex, endIndex);\n}\n\n/**\n * Read characters from this Tokenizer until the end of the stream or until the provided condition\n * is false when provided the current character.\n */\nfunction readWhile(tokenizer: URLTokenizer, condition: (character: string) => boolean): string {\n  let result = \"\";\n\n  while (hasCurrentCharacter(tokenizer)) {\n    const currentCharacter: string = getCurrentCharacter(tokenizer);\n    if (!condition(currentCharacter)) {\n      break;\n    } else {\n      result += currentCharacter;\n      nextCharacter(tokenizer);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Read characters from this Tokenizer until a non-alphanumeric character or the end of the\n * character stream is reached.\n */\nfunction readWhileLetterOrDigit(tokenizer: URLTokenizer): string {\n  return readWhile(tokenizer, (character: string) => isAlphaNumericCharacter(character));\n}\n\n/**\n * Read characters from this Tokenizer until one of the provided terminating characters is read or\n * the end of the character stream is reached.\n */\nfunction readUntilCharacter(tokenizer: URLTokenizer, ...terminatingCharacters: string[]): string {\n  return readWhile(\n    tokenizer,\n    (character: string) => terminatingCharacters.indexOf(character) === -1\n  );\n}\n\nfunction nextScheme(tokenizer: URLTokenizer): void {\n  const scheme: string = readWhileLetterOrDigit(tokenizer);\n  tokenizer._currentToken = URLToken.scheme(scheme);\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else {\n    tokenizer._currentState = \"HOST\";\n  }\n}\n\nfunction nextSchemeOrHost(tokenizer: URLTokenizer): void {\n  const schemeOrHost: string = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentToken = URLToken.host(schemeOrHost);\n    tokenizer._currentState = \"DONE\";\n  } else if (getCurrentCharacter(tokenizer) === \":\") {\n    if (peekCharacters(tokenizer, 3) === \"://\") {\n      tokenizer._currentToken = URLToken.scheme(schemeOrHost);\n      tokenizer._currentState = \"HOST\";\n    } else {\n      tokenizer._currentToken = URLToken.host(schemeOrHost);\n      tokenizer._currentState = \"PORT\";\n    }\n  } else {\n    tokenizer._currentToken = URLToken.host(schemeOrHost);\n    if (getCurrentCharacter(tokenizer) === \"/\") {\n      tokenizer._currentState = \"PATH\";\n    } else {\n      tokenizer._currentState = \"QUERY\";\n    }\n  }\n}\n\nfunction nextHost(tokenizer: URLTokenizer): void {\n  if (peekCharacters(tokenizer, 3) === \"://\") {\n    nextCharacter(tokenizer, 3);\n  }\n\n  const host: string = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n  tokenizer._currentToken = URLToken.host(host);\n\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else if (getCurrentCharacter(tokenizer) === \":\") {\n    tokenizer._currentState = \"PORT\";\n  } else if (getCurrentCharacter(tokenizer) === \"/\") {\n    tokenizer._currentState = \"PATH\";\n  } else {\n    tokenizer._currentState = \"QUERY\";\n  }\n}\n\nfunction nextPort(tokenizer: URLTokenizer): void {\n  if (getCurrentCharacter(tokenizer) === \":\") {\n    nextCharacter(tokenizer);\n  }\n\n  const port: string = readUntilCharacter(tokenizer, \"/\", \"?\");\n  tokenizer._currentToken = URLToken.port(port);\n\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else if (getCurrentCharacter(tokenizer) === \"/\") {\n    tokenizer._currentState = \"PATH\";\n  } else {\n    tokenizer._currentState = \"QUERY\";\n  }\n}\n\nfunction nextPath(tokenizer: URLTokenizer): void {\n  const path: string = readUntilCharacter(tokenizer, \"?\");\n  tokenizer._currentToken = URLToken.path(path);\n\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else {\n    tokenizer._currentState = \"QUERY\";\n  }\n}\n\nfunction nextQuery(tokenizer: URLTokenizer): void {\n  if (getCurrentCharacter(tokenizer) === \"?\") {\n    nextCharacter(tokenizer);\n  }\n\n  const query: string = readRemaining(tokenizer);\n  tokenizer._currentToken = URLToken.query(query);\n  tokenizer._currentState = \"DONE\";\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { URLBuilder, URLQuery } from \"../url\";\n\nexport interface SanitizerOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled. Defaults to\n   * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  allowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  allowedQueryParameters?: string[];\n}\n\nconst RedactedString = \"REDACTED\";\n\nconst defaultAllowedHeaderNames = [\n  \"x-ms-client-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-useragent\",\n  \"x-ms-correlation-request-id\",\n  \"x-ms-request-id\",\n  \"client-request-id\",\n  \"return-client-request-id\",\n  \"traceparent\",\n\n  \"Access-Control-Allow-Credentials\",\n  \"Access-Control-Allow-Headers\",\n  \"Access-Control-Allow-Methods\",\n  \"Access-Control-Allow-Origin\",\n  \"Access-Control-Expose-Headers\",\n  \"Access-Control-Max-Age\",\n  \"Access-Control-Request-Headers\",\n  \"Access-Control-Request-Method\",\n  \"Origin\",\n\n  \"Accept\",\n  \"Cache-Control\",\n  \"Connection\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"ETag\",\n  \"Expires\",\n  \"If-Match\",\n  \"If-Modified-Since\",\n  \"If-None-Match\",\n  \"If-Unmodified-Since\",\n  \"Last-Modified\",\n  \"Pragma\",\n  \"Request-Id\",\n  \"Retry-After\",\n  \"Server\",\n  \"Transfer-Encoding\",\n  \"User-Agent\"\n];\n\nconst defaultAllowedQueryParameters: string[] = [\"api-version\"];\n\nexport class Sanitizer {\n  public allowedHeaderNames: Set<string>;\n  public allowedQueryParameters: Set<string>;\n\n  constructor({ allowedHeaderNames = [], allowedQueryParameters = [] }: SanitizerOptions = {}) {\n    allowedHeaderNames = Array.isArray(allowedHeaderNames)\n      ? defaultAllowedHeaderNames.concat(allowedHeaderNames)\n      : defaultAllowedHeaderNames;\n\n    allowedQueryParameters = Array.isArray(allowedQueryParameters)\n      ? defaultAllowedQueryParameters.concat(allowedQueryParameters)\n      : defaultAllowedQueryParameters;\n\n    this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n    this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n  }\n\n  public sanitize(obj: object): string {\n    return JSON.stringify(obj, this.replacer.bind(this), 2);\n  }\n\n  private replacer(key: string, value: unknown): any {\n    // Ensure Errors include their interesting non-enumerable members\n    if (value instanceof Error) {\n      return {\n        ...value,\n        name: value.name,\n        message: value.message\n      };\n    }\n    if (key === \"_headersMap\") {\n      return this.sanitizeHeaders(key, value as {});\n    } else if (key === \"url\") {\n      return this.sanitizeUrl(value as string);\n    } else if (key === \"query\") {\n      return this.sanitizeQuery(value as {});\n    } else if (key === \"body\") {\n      // Don't log the request body\n      return undefined;\n    } else if (key === \"response\") {\n      // Don't log response again\n      return undefined;\n    } else if (key === \"operationSpec\") {\n      // When using sendOperationRequest, the request carries a massive\n      // field with the autorest spec. No need to log it.\n      return undefined;\n    }\n\n    return value;\n  }\n\n  private sanitizeHeaders(_: string, value: { [s: string]: any }): { [s: string]: string } {\n    return this.sanitizeObject(value, this.allowedHeaderNames, (v, k) => v[k].value);\n  }\n\n  private sanitizeQuery(value: { [s: string]: string }): { [s: string]: string } {\n    return this.sanitizeObject(value, this.allowedQueryParameters, (v, k) => v[k]);\n  }\n\n  private sanitizeObject(\n    value: { [s: string]: any },\n    allowedKeys: Set<string>,\n    accessor: (value: any, key: string) => any\n  ): { [s: string]: string } {\n    if (typeof value !== \"object\" || value === null) {\n      return value;\n    }\n\n    const sanitized: { [s: string]: string } = {};\n\n    for (const k of Object.keys(value)) {\n      if (allowedKeys.has(k.toLowerCase())) {\n        sanitized[k] = accessor(value, k);\n      } else {\n        sanitized[k] = RedactedString;\n      }\n    }\n\n    return sanitized;\n  }\n\n  private sanitizeUrl(value: string): string {\n    if (typeof value !== \"string\" || value === null) {\n      return value;\n    }\n\n    const urlBuilder = URLBuilder.parse(value);\n    const queryString = urlBuilder.getQuery();\n\n    if (!queryString) {\n      return value;\n    }\n\n    const query = URLQuery.parse(queryString);\n    for (const k of query.keys()) {\n      if (!this.allowedQueryParameters.has(k.toLowerCase())) {\n        query.set(k, RedactedString);\n      }\n    }\n\n    urlBuilder.setQuery(query.toString());\n    return urlBuilder.toString();\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { WebResourceLike } from \"./webResource\";\nimport { custom } from \"./util/inspect\";\nimport { Sanitizer } from \"./util/sanitizer\";\n\nconst errorSanitizer = new Sanitizer();\n\nexport class RestError extends Error {\n  static readonly REQUEST_SEND_ERROR: string = \"REQUEST_SEND_ERROR\";\n  static readonly PARSE_ERROR: string = \"PARSE_ERROR\";\n\n  code?: string;\n  statusCode?: number;\n  request?: WebResourceLike;\n  response?: HttpOperationResponse;\n  details?: unknown;\n  constructor(\n    message: string,\n    code?: string,\n    statusCode?: number,\n    request?: WebResourceLike,\n    response?: HttpOperationResponse\n  ) {\n    super(message);\n    this.name = \"RestError\";\n    this.code = code;\n    this.statusCode = statusCode;\n    this.request = request;\n    this.response = response;\n\n    Object.setPrototypeOf(this, RestError.prototype);\n  }\n\n  /**\n   * Logging method for util.inspect in Node\n   */\n  [custom](): string {\n    return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(this)}`;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport { HttpClient } from \"./httpClient\";\nimport { HttpHeaders, HttpHeadersLike } from \"./httpHeaders\";\nimport { WebResourceLike, TransferProgressEvent } from \"./webResource\";\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { RestError } from \"./restError\";\n\n/**\n * A HttpClient implementation that uses XMLHttpRequest to send HTTP requests.\n */\nexport class XhrHttpClient implements HttpClient {\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    const xhr = new XMLHttpRequest();\n\n    if (request.proxySettings) {\n      throw new Error(\"HTTP proxy is not supported in browser environment\");\n    }\n\n    const abortSignal = request.abortSignal;\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        return Promise.reject(new AbortError(\"The operation was aborted.\"));\n      }\n\n      const listener = (): void => {\n        xhr.abort();\n      };\n      abortSignal.addEventListener(\"abort\", listener);\n      xhr.addEventListener(\"readystatechange\", () => {\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n          abortSignal.removeEventListener(\"abort\", listener);\n        }\n      });\n    }\n\n    addProgressListener(xhr.upload, request.onUploadProgress);\n    addProgressListener(xhr, request.onDownloadProgress);\n\n    if (request.formData) {\n      const formData = request.formData;\n      const requestForm = new FormData();\n      const appendFormValue = (key: string, value: any): void => {\n        // eslint-disable-next-line no-prototype-builtins\n        if (value && value.hasOwnProperty(\"value\") && value.hasOwnProperty(\"options\")) {\n          requestForm.append(key, value.value, value.options);\n        } else {\n          requestForm.append(key, value);\n        }\n      };\n      for (const formKey of Object.keys(formData)) {\n        const formValue = formData[formKey];\n        if (Array.isArray(formValue)) {\n          for (let j = 0; j < formValue.length; j++) {\n            appendFormValue(formKey, formValue[j]);\n          }\n        } else {\n          appendFormValue(formKey, formValue);\n        }\n      }\n\n      request.body = requestForm;\n      request.formData = undefined;\n      const contentType = request.headers.get(\"Content-Type\");\n      if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n        // browser will automatically apply a suitable content-type header\n        request.headers.remove(\"Content-Type\");\n      }\n    }\n\n    xhr.open(request.method, request.url);\n    xhr.timeout = request.timeout;\n    xhr.withCredentials = request.withCredentials;\n    for (const header of request.headers.headersArray()) {\n      xhr.setRequestHeader(header.name, header.value);\n    }\n    xhr.responseType = request.streamResponseBody ? \"blob\" : \"text\";\n\n    // tslint:disable-next-line:no-null-keyword\n    xhr.send(request.body === undefined ? null : request.body);\n\n    if (request.streamResponseBody) {\n      return new Promise((resolve, reject) => {\n        xhr.addEventListener(\"readystatechange\", () => {\n          // Resolve as soon as headers are loaded\n          if (xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {\n            const blobBody = new Promise<Blob>((resolve, reject) => {\n              xhr.addEventListener(\"load\", () => {\n                resolve(xhr.response);\n              });\n              rejectOnTerminalEvent(request, xhr, reject);\n            });\n            resolve({\n              request,\n              status: xhr.status,\n              headers: parseHeaders(xhr),\n              blobBody\n            });\n          }\n        });\n        rejectOnTerminalEvent(request, xhr, reject);\n      });\n    } else {\n      return new Promise(function(resolve, reject) {\n        xhr.addEventListener(\"load\", () =>\n          resolve({\n            request,\n            status: xhr.status,\n            headers: parseHeaders(xhr),\n            bodyAsText: xhr.responseText\n          })\n        );\n        rejectOnTerminalEvent(request, xhr, reject);\n      });\n    }\n  }\n}\n\nfunction addProgressListener(\n  xhr: XMLHttpRequestEventTarget,\n  listener?: (progress: TransferProgressEvent) => void\n): void {\n  if (listener) {\n    xhr.addEventListener(\"progress\", (rawEvent) =>\n      listener({\n        loadedBytes: rawEvent.loaded\n      })\n    );\n  }\n}\n\n// exported locally for testing\nexport function parseHeaders(xhr: XMLHttpRequest): HttpHeadersLike {\n  const responseHeaders = new HttpHeaders();\n  const headerLines = xhr\n    .getAllResponseHeaders()\n    .trim()\n    .split(/[\\r\\n]+/);\n  for (const line of headerLines) {\n    const index = line.indexOf(\":\");\n    const headerName = line.slice(0, index);\n    const headerValue = line.slice(index + 2);\n    responseHeaders.set(headerName, headerValue);\n  }\n  return responseHeaders;\n}\n\nfunction rejectOnTerminalEvent(\n  request: WebResourceLike,\n  xhr: XMLHttpRequest,\n  reject: (err: any) => void\n): void {\n  xhr.addEventListener(\"error\", () =>\n    reject(\n      new RestError(\n        `Failed to send request to ${request.url}`,\n        RestError.REQUEST_SEND_ERROR,\n        undefined,\n        request\n      )\n    )\n  );\n  const abortError = new AbortError(\"The operation was aborted.\");\n  xhr.addEventListener(\"abort\", () => reject(abortError));\n  xhr.addEventListener(\"timeout\", () => reject(abortError));\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The different levels of logs that can be used with the HttpPipelineLogger.\n */\nexport enum HttpPipelineLogLevel {\n  /**\n   * A log level that indicates that no logs will be logged.\n   */\n  OFF,\n\n  /**\n   * An error log.\n   */\n  ERROR,\n\n  /**\n   * A warning log.\n   */\n  WARNING,\n\n  /**\n   * An information log.\n   */\n  INFO\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { OperationTracingOptions } from \"@azure/core-tracing\";\nimport { TransferProgressEvent, RequestOptionsBase } from \"./webResource\";\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\n\n/**\n * The base options type for all operations.\n */\nexport interface OperationOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: OperationRequestOptions;\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n}\n\nexport interface OperationRequestOptions {\n  /**\n   * @property {object} [customHeaders] User defined custom request headers that\n   * will be applied before the request is sent.\n   */\n  customHeaders?: { [key: string]: string };\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   */\n  timeout?: number;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Callback which fires upon download progress.\n   */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: HttpOperationResponse) => boolean);\n}\n\n/**\n * Converts an OperationOptions to a RequestOptionsBase\n *\n * @param opts OperationOptions object to convert to RequestOptionsBase\n */\nexport function operationOptionsToRequestOptionsBase<T extends OperationOptions>(\n  opts: T\n): RequestOptionsBase {\n  const { requestOptions, tracingOptions, ...additionalOptions } = opts;\n\n  let result: RequestOptionsBase = additionalOptions;\n\n  if (requestOptions) {\n    result = { ...result, ...requestOptions };\n  }\n\n  if (tracingOptions) {\n    result.spanOptions = tracingOptions.spanOptions;\n  }\n\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { SpanOptions } from \"@azure/core-tracing\";\n\n/**\n * Represents a credential capable of providing an authentication token.\n */\nexport interface TokenCredential {\n  /**\n   * Gets the token provided by this credential.\n   *\n   * @param scopes The list of scopes for which the token will have access.\n   * @param options The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  getToken(scopes: string | string[], options?: GetTokenOptions): Promise<AccessToken | null>;\n}\n\n/**\n * Defines options for TokenCredential.getToken.\n */\nexport interface GetTokenOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: {\n    /**\n     * The number of milliseconds a request can take before automatically being terminated.\n     */\n    timeout?: number;\n  };\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: {\n    /**\n     * OpenTelemetry SpanOptions used to create a span when tracing is enabled.\n     */\n    spanOptions?: SpanOptions;\n  };\n}\n\n/**\n * Represents an access token with an expiration time.\n */\nexport interface AccessToken {\n  /**\n   * The access token returned by the authentication service.\n   */\n  token: string;\n\n  /**\n   * The access token's expiration timestamp in milliseconds, UNIX epoch time.\n   */\n  expiresOnTimestamp: number;\n}\n\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential: any): credential is TokenCredential {\n  // Check for an object with a 'getToken' function and possibly with\n  // a 'signRequest' function.  We do this check to make sure that\n  // a ServiceClientCredentials implementor (like TokenClientCredentials\n  // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n  // it doesn't actually implement TokenCredential also.\n  return (\n    credential &&\n    typeof credential.getToken === \"function\" &&\n    (credential.signRequest === undefined || credential.getToken.length > 0)\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { HttpPipelineLogger } from \"../httpPipelineLogger\";\nimport { HttpPipelineLogLevel } from \"../httpPipelineLogLevel\";\nimport { WebResourceLike } from \"../webResource\";\n\n/**\n * Creates a new RequestPolicy per-request that uses the provided nextPolicy.\n */\nexport type RequestPolicyFactory = {\n  create(nextPolicy: RequestPolicy, options: RequestPolicyOptionsLike): RequestPolicy;\n};\n\nexport interface RequestPolicy {\n  sendRequest(httpRequest: WebResourceLike): Promise<HttpOperationResponse>;\n}\n\nexport abstract class BaseRequestPolicy implements RequestPolicy {\n  protected constructor(\n    readonly _nextPolicy: RequestPolicy,\n    readonly _options: RequestPolicyOptionsLike\n  ) {}\n\n  public abstract sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse>;\n\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  public shouldLog(logLevel: HttpPipelineLogLevel): boolean {\n    return this._options.shouldLog(logLevel);\n  }\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meat the logger's threshold, then nothing will be logged.\n   * @param logLevel The log level of this log.\n   * @param message The message of this log.\n   */\n  public log(logLevel: HttpPipelineLogLevel, message: string): void {\n    this._options.log(logLevel, message);\n  }\n}\n\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nexport interface RequestPolicyOptionsLike {\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  shouldLog(logLevel: HttpPipelineLogLevel): boolean;\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meet the logger's threshold, then nothing will be logged.\n   * @param logLevel The log level of this log.\n   * @param message The message of this log.\n   */\n  log(logLevel: HttpPipelineLogLevel, message: string): void;\n}\n\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nexport class RequestPolicyOptions {\n  constructor(private _logger?: HttpPipelineLogger) {}\n\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  public shouldLog(logLevel: HttpPipelineLogLevel): boolean {\n    return (\n      !!this._logger &&\n      logLevel !== HttpPipelineLogLevel.OFF &&\n      logLevel <= this._logger.minimumLogLevel\n    );\n  }\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meet the logger's threshold, then nothing will be logged.\n   * @param logLevel The log level of this log.\n   * @param message The message of this log.\n   */\n  public log(logLevel: HttpPipelineLogLevel, message: string): void {\n    if (this._logger && this.shouldLog(logLevel)) {\n      this._logger.log(logLevel, message);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst logFunction = console.debug || console.log;\nexport function log(...args: any[]) {\n  logFunction(...args);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { log } from \"./log\";\n\n/**\n * A simple mechanism for enabling logging.\n * Intended to mimic the publicly available `debug` package.\n */\nexport interface Debug {\n  /**\n   * Creates a new logger with the given namespace.\n   */\n  (namespace: string): Debugger;\n  /**\n   * The default log method (defaults to console)\n   */\n  log: (...args: any[]) => void;\n  /**\n   * Enables a particular set of namespaces.\n   * To enable multiple separate them with commas, e.g. \"info,debug\".\n   * Supports wildcards, e.g. \"azure:*\"\n   * Supports skip syntax, e.g. \"azure:*,-azure:storage:*\" will enable\n   * everything under azure except for things under azure:storage.\n   */\n  enable: (namespaces: string) => void;\n  /**\n   * Checks if a particular namespace is enabled.\n   */\n  enabled: (namespace: string) => boolean;\n  /**\n   * Disables all logging, returns what was previously enabled.\n   */\n  disable: () => string;\n}\n\n/**\n * A log function that can be dynamically enabled and redirected.\n */\nexport interface Debugger {\n  /**\n   * Logs the given arguments to the `log` method.\n   */\n  (...args: any[]): void;\n  /**\n   * True if this logger is active and logging.\n   */\n  enabled: boolean;\n  /**\n   * Used to cleanup/remove this logger.\n   */\n  destroy: () => boolean;\n  /**\n   * The current log method. Can be overridden to redirect output.\n   */\n  log: (...args: any[]) => void;\n  /**\n   * The namespace of this logger.\n   */\n  namespace: string;\n  /**\n   * Extends this logger with a child namespace.\n   * Namespaces are separated with a ':' character.\n   */\n  extend: (namespace: string) => Debugger;\n}\n\nconst debugEnvVariable =\n  (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\n\nlet enabledString: string | undefined;\nlet enabledNamespaces: RegExp[] = [];\nlet skippedNamespaces: RegExp[] = [];\nconst debuggers: Debugger[] = [];\n\nif (debugEnvVariable) {\n  enable(debugEnvVariable);\n}\n\nfunction enable(namespaces: string): void {\n  enabledString = namespaces;\n  enabledNamespaces = [];\n  skippedNamespaces = [];\n  const wildcard = /\\*/g;\n  const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n  for (const ns of namespaceList) {\n    if (ns.startsWith(\"-\")) {\n      skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n    } else {\n      enabledNamespaces.push(new RegExp(`^${ns}$`));\n    }\n  }\n  for (const instance of debuggers) {\n    instance.enabled = enabled(instance.namespace);\n  }\n}\n\nfunction enabled(namespace: string): boolean {\n  if (namespace.endsWith(\"*\")) {\n    return true;\n  }\n\n  for (const skipped of skippedNamespaces) {\n    if (skipped.test(namespace)) {\n      return false;\n    }\n  }\n  for (const enabled of enabledNamespaces) {\n    if (enabled.test(namespace)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction disable(): string {\n  const result = enabledString || \"\";\n  enable(\"\");\n  return result;\n}\n\nfunction createDebugger(namespace: string): Debugger {\n  function debug(...args: any[]) {\n    if (!newDebugger.enabled) {\n      return;\n    }\n    if (args.length > 0) {\n      args[0] = `${namespace} ${args[0]}`;\n    }\n    newDebugger.log(...args);\n  }\n\n  const newDebugger: Debugger = Object.assign(debug, {\n    enabled: enabled(namespace),\n    destroy,\n    log: debugObj.log,\n    namespace,\n    extend\n  });\n\n  debuggers.push(newDebugger);\n\n  return newDebugger;\n}\n\nfunction destroy(this: Debugger): boolean {\n  const index = debuggers.indexOf(this);\n  if (index >= 0) {\n    debuggers.splice(index, 1);\n    return true;\n  }\n  return false;\n}\n\nfunction extend(this: Debugger, namespace: string): Debugger {\n  const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n  newDebugger.log = this.log;\n  return newDebugger;\n}\n\nconst debugObj: Debug = Object.assign(\n  (namespace: string): Debugger => {\n    return createDebugger(namespace);\n  },\n  {\n    enable,\n    enabled,\n    disable,\n    log\n  }\n);\n\nexport default debugObj;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport debug, { Debugger } from \"./debug\";\nexport { Debugger } from \"./debug\";\n\nconst registeredLoggers = new Set<AzureDebugger>();\nconst logLevelFromEnv =\n  (typeof process !== \"undefined\" && process.env && process.env.AZURE_LOG_LEVEL) || undefined;\n\nlet azureLogLevel: AzureLogLevel | undefined;\n\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nexport const AzureLogger: AzureClientLogger = debug(\"azure\");\nAzureLogger.log = (...args) => {\n  debug.log(...args);\n};\n\n/**\n * The log levels supported by the logger.\n * The log levels in order of most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport type AzureLogLevel = \"verbose\" | \"info\" | \"warning\" | \"error\";\nconst AZURE_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\n\ntype AzureDebugger = Debugger & { level: AzureLogLevel };\n\n/**\n * An AzureClientLogger is a function that can log to an appropriate severity level.\n */\nexport type AzureClientLogger = Debugger;\n\nif (logLevelFromEnv) {\n  // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n  if (isAzureLogLevel(logLevelFromEnv)) {\n    setLogLevel(logLevelFromEnv);\n  } else {\n    console.error(\n      `AZURE_LOG_LEVEL set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${AZURE_LOG_LEVELS.join(\n        \", \"\n      )}.`\n    );\n  }\n}\n\n/**\n * Immediately enables logging at the specified log level.\n * @param level The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport function setLogLevel(level?: AzureLogLevel) {\n  if (level && !isAzureLogLevel(level)) {\n    throw new Error(\n      `Unknown log level '${level}'. Acceptable values: ${AZURE_LOG_LEVELS.join(\",\")}`\n    );\n  }\n  azureLogLevel = level;\n\n  const enabledNamespaces = [];\n  for (const logger of registeredLoggers) {\n    if (shouldEnable(logger)) {\n      enabledNamespaces.push(logger.namespace);\n    }\n  }\n\n  debug.enable(enabledNamespaces.join(\",\"));\n}\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel() {\n  return azureLogLevel;\n}\n\nconst levelMap = {\n  verbose: 400,\n  info: 300,\n  warning: 200,\n  error: 100\n};\n\n/**\n * Defines the methods available on the SDK-facing logger.\n */\nexport interface AzureLogger {\n  /**\n   * Used for failures the program is unlikely to recover from,\n   * such as Out of Memory.\n   */\n  error: Debugger;\n  /**\n   * Used when a function fails to perform its intended task.\n   * Usually this means the function will throw an exception.\n   * Not used for self-healing events (e.g. automatic retry)\n   */\n  warning: Debugger;\n  /**\n   * Used when a function operates normally.\n   */\n  info: Debugger;\n  /**\n   * Used for detailed trbouleshooting scenarios. This is\n   * intended for use by developers / system administrators\n   * for diagnosing specific failures.\n   */\n  verbose: Debugger;\n}\n\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace The name of the SDK package.\n * @ignore\n */\nexport function createClientLogger(namespace: string): AzureLogger {\n  const clientRootLogger: AzureClientLogger = AzureLogger.extend(namespace);\n  patchLogMethod(AzureLogger, clientRootLogger);\n  return {\n    error: createLogger(clientRootLogger, \"error\"),\n    warning: createLogger(clientRootLogger, \"warning\"),\n    info: createLogger(clientRootLogger, \"info\"),\n    verbose: createLogger(clientRootLogger, \"verbose\")\n  };\n}\n\nfunction patchLogMethod(parent: AzureClientLogger, child: AzureClientLogger | AzureDebugger): void {\n  child.log = (...args) => {\n    parent.log(...args);\n  };\n}\n\nfunction createLogger(parent: AzureClientLogger, level: AzureLogLevel): AzureDebugger {\n  const logger: AzureDebugger = Object.assign(parent.extend(level), {\n    level\n  });\n\n  patchLogMethod(parent, logger);\n\n  if (shouldEnable(logger)) {\n    const enabledNamespaces = debug.disable();\n    debug.enable(enabledNamespaces + \",\" + logger.namespace);\n  }\n\n  registeredLoggers.add(logger);\n\n  return logger;\n}\n\nfunction shouldEnable(logger: AzureDebugger) {\n  if (azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction isAzureLogLevel(logLevel: string): logLevel is AzureLogLevel {\n  return AZURE_LOG_LEVELS.includes(logLevel as any);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-http\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\nimport { Debugger } from \"@azure/logger\";\nimport { logger as coreLogger } from \"../log\";\nimport { Sanitizer } from \"../util/sanitizer\";\n\nexport interface LogPolicyOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled. Defaults to\n   * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  allowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  allowedQueryParameters?: string[];\n\n  /**\n   * The Debugger (logger) instance to use for writing pipeline logs.\n   */\n  logger?: Debugger;\n}\n\nexport function logPolicy(loggingOptions: LogPolicyOptions = {}): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new LogPolicy(nextPolicy, options, loggingOptions);\n    }\n  };\n}\n\nexport class LogPolicy extends BaseRequestPolicy {\n  logger: Debugger;\n  sanitizer: Sanitizer;\n\n  /**\n   * Header names whose values will be logged when logging is enabled. Defaults to\n   * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   * @deprecated Pass these into the constructor instead.\n   */\n  public get allowedHeaderNames(): Set<string> {\n    return this.sanitizer.allowedHeaderNames;\n  }\n\n  /**\n   * Header names whose values will be logged when logging is enabled. Defaults to\n   * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   * @deprecated Pass these into the constructor instead.\n   */\n  public set allowedHeaderNames(allowedHeaderNames: Set<string>) {\n    this.sanitizer.allowedHeaderNames = allowedHeaderNames;\n  }\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   * @deprecated Pass these into the constructor instead.\n   */\n  public get allowedQueryParameters(): Set<string> {\n    return this.sanitizer.allowedQueryParameters;\n  }\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   * @deprecated Pass these into the constructor instead.\n   */\n  public set allowedQueryParameters(allowedQueryParameters: Set<string>) {\n    this.sanitizer.allowedQueryParameters = allowedQueryParameters;\n  }\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    {\n      logger = coreLogger.info,\n      allowedHeaderNames = [],\n      allowedQueryParameters = []\n    }: LogPolicyOptions = {}\n  ) {\n    super(nextPolicy, options);\n    this.logger = logger;\n    this.sanitizer = new Sanitizer({ allowedHeaderNames, allowedQueryParameters });\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!this.logger.enabled) return this._nextPolicy.sendRequest(request);\n\n    this.logRequest(request);\n    return this._nextPolicy.sendRequest(request).then((response) => this.logResponse(response));\n  }\n\n  private logRequest(request: WebResourceLike): void {\n    this.logger(`Request: ${this.sanitizer.sanitize(request)}`);\n  }\n\n  private logResponse(response: HttpOperationResponse): HttpOperationResponse {\n    this.logger(`Response status code: ${response.status}`);\n    this.logger(`Headers: ${this.sanitizer.sanitize(response.headers)}`);\n    return response;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nimport { Mapper } from \"./serializer\";\n\nexport type ParameterPath = string | string[] | { [propertyName: string]: ParameterPath };\n\n/**\n * A common interface that all Operation parameter's extend.\n */\nexport interface OperationParameter {\n  /**\n   * The path to this parameter's value in OperationArguments or the object that contains paths for\n   * each property's value in OperationArguments.\n   */\n  parameterPath: ParameterPath;\n\n  /**\n   * The mapper that defines how to validate and serialize this parameter's value.\n   */\n  mapper: Mapper;\n}\n\n/**\n * A parameter for an operation that will be substituted into the operation's request URL.\n */\nexport interface OperationURLParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the URL parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n}\n\n/**\n * A parameter for an operation that will be added as a query parameter to the operation's HTTP\n * request.\n */\nexport interface OperationQueryParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the query parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n\n  /**\n   * If this query parameter's value is a collection, what type of format should the value be\n   * converted to.\n   */\n  collectionFormat?: QueryCollectionFormat;\n}\n\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n */\nexport function getPathStringFromParameter(parameter: OperationParameter): string {\n  return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\n}\n\nexport function getPathStringFromParameterPath(\n  parameterPath: ParameterPath,\n  mapper: Mapper\n): string {\n  let result: string;\n  if (typeof parameterPath === \"string\") {\n    result = parameterPath;\n  } else if (Array.isArray(parameterPath)) {\n    result = parameterPath.join(\".\");\n  } else {\n    result = mapper.serializedName!;\n  }\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  OperationParameter,\n  OperationQueryParameter,\n  OperationURLParameter\n} from \"./operationParameter\";\nimport { OperationResponse } from \"./operationResponse\";\nimport { MapperType, Serializer } from \"./serializer\";\nimport { HttpMethods } from \"./webResource\";\n\n/**\n * A specification that defines an operation.\n */\nexport interface OperationSpec {\n  /**\n   * The serializer to use in this operation.\n   */\n  readonly serializer: Serializer;\n\n  /**\n   * The HTTP method that should be used by requests for this operation.\n   */\n  readonly httpMethod: HttpMethods;\n\n  /**\n   * The URL that was provided in the service's specification. This will still have all of the URL\n   * template variables in it. If this is not provided when the OperationSpec is created, then it\n   * will be populated by a \"baseUri\" property on the ServiceClient.\n   */\n  readonly baseUrl?: string;\n\n  /**\n   * The fixed path for this operation's URL. This will still have all of the URL template variables\n   * in it.\n   */\n  readonly path?: string;\n\n  /**\n   * The content type of the request body. This value will be used as the \"Content-Type\" header if\n   * it is provided.\n   */\n  readonly contentType?: string;\n\n  /**\n   * The media type of the request body.\n   * This value can be used to aide in serialization if it is provided.\n   */\n  readonly mediaType?:\n    | \"json\"\n    | \"xml\"\n    | \"form\"\n    | \"binary\"\n    | \"multipart\"\n    | \"text\"\n    | \"unknown\"\n    | string;\n  /**\n   * The parameter that will be used to construct the HTTP request's body.\n   */\n  readonly requestBody?: OperationParameter;\n\n  /**\n   * Whether or not this operation uses XML request and response bodies.\n   */\n  readonly isXML?: boolean;\n\n  /**\n   * The parameters to the operation method that will be substituted into the constructed URL.\n   */\n  readonly urlParameters?: ReadonlyArray<OperationURLParameter>;\n\n  /**\n   * The parameters to the operation method that will be added to the constructed URL's query.\n   */\n  readonly queryParameters?: ReadonlyArray<OperationQueryParameter>;\n\n  /**\n   * The parameters to the operation method that will be converted to headers on the operation's\n   * HTTP request.\n   */\n  readonly headerParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The parameters to the operation method that will be used to create a formdata body for the\n   * operation's HTTP request.\n   */\n  readonly formDataParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The different types of responses that this operation can return based on what status code is\n   * returned.\n   */\n  readonly responses: { [responseCode: string]: OperationResponse };\n}\n\nexport function isStreamOperation(operationSpec: OperationSpec): boolean {\n  let result = false;\n  for (const statusCode in operationSpec.responses) {\n    const operationResponse: OperationResponse = operationSpec.responses[statusCode];\n    if (\n      operationResponse.bodyMapper &&\n      operationResponse.bodyMapper.type.name === MapperType.Stream\n    ) {\n      result = true;\n      break;\n    }\n  }\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { XML_ATTRKEY, XML_CHARKEY, SerializerOptions } from \"./serializer.common\";\n\n// tslint:disable-next-line:no-null-keyword\nconst doc = document.implementation.createDocument(null, null, null);\n\nconst parser = new DOMParser();\nexport function parseXML(str: string, opts: SerializerOptions = {}): Promise<any> {\n  try {\n    const updatedOptions: Required<SerializerOptions> = {\n      rootName: opts.rootName ?? \"\",\n      includeRoot: opts.includeRoot ?? false,\n      xmlCharKey: opts.xmlCharKey ?? XML_CHARKEY\n    };\n    const dom = parser.parseFromString(str, \"application/xml\");\n    throwIfError(dom);\n\n    let obj;\n    if (updatedOptions.includeRoot) {\n      obj = domToObject(dom, updatedOptions);\n    } else {\n      obj = domToObject(dom.childNodes[0], updatedOptions);\n    }\n\n    return Promise.resolve(obj);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nlet errorNS = \"\";\ntry {\n  errorNS = parser.parseFromString(\"INVALID\", \"text/xml\").getElementsByTagName(\"parsererror\")[0]\n    .namespaceURI!;\n} catch (ignored) {\n  // Most browsers will return a document containing <parsererror>, but IE will throw.\n}\n\nfunction throwIfError(dom: Document): void {\n  if (errorNS) {\n    const parserErrors = dom.getElementsByTagNameNS(errorNS, \"parsererror\");\n    if (parserErrors.length) {\n      throw new Error(parserErrors.item(0)!.innerHTML);\n    }\n  }\n}\n\nfunction isElement(node: Node): node is Element {\n  return !!(node as Element).attributes;\n}\n\n/**\n * Get the Element-typed version of the provided Node if the provided node is an element with\n * attributes. If it isn't, then undefined is returned.\n */\nfunction asElementWithAttributes(node: Node): Element | undefined {\n  return isElement(node) && node.hasAttributes() ? node : undefined;\n}\n\nfunction domToObject(node: Node, options: Required<SerializerOptions>): any {\n  let result: any = {};\n\n  const childNodeCount: number = node.childNodes.length;\n\n  const firstChildNode: Node = node.childNodes[0];\n  const onlyChildTextValue: string | undefined =\n    (firstChildNode &&\n      childNodeCount === 1 &&\n      firstChildNode.nodeType === Node.TEXT_NODE &&\n      firstChildNode.nodeValue) ||\n    undefined;\n\n  const elementWithAttributes: Element | undefined = asElementWithAttributes(node);\n  if (elementWithAttributes) {\n    result[XML_ATTRKEY] = {};\n\n    for (let i = 0; i < elementWithAttributes.attributes.length; i++) {\n      const attr = elementWithAttributes.attributes[i];\n      result[XML_ATTRKEY][attr.nodeName] = attr.nodeValue;\n    }\n\n    if (onlyChildTextValue) {\n      result[options.xmlCharKey] = onlyChildTextValue;\n    }\n  } else if (childNodeCount === 0) {\n    result = \"\";\n  } else if (onlyChildTextValue) {\n    result = onlyChildTextValue;\n  }\n\n  if (!onlyChildTextValue) {\n    for (let i = 0; i < childNodeCount; i++) {\n      const child = node.childNodes[i];\n      // Ignore leading/trailing whitespace nodes\n      if (child.nodeType !== Node.TEXT_NODE) {\n        const childObject: any = domToObject(child, options);\n        if (!result[child.nodeName]) {\n          result[child.nodeName] = childObject;\n        } else if (Array.isArray(result[child.nodeName])) {\n          result[child.nodeName].push(childObject);\n        } else {\n          result[child.nodeName] = [result[child.nodeName], childObject];\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nconst serializer = new XMLSerializer();\n\nexport function stringifyXML(content: any, opts: SerializerOptions = {}): string {\n  const updatedOptions: Required<SerializerOptions> = {\n    rootName: opts.rootName ?? \"root\",\n    includeRoot: opts.includeRoot ?? false,\n    xmlCharKey: opts.xmlCharKey ?? XML_CHARKEY\n  };\n  const dom = buildNode(content, updatedOptions.rootName, updatedOptions)[0];\n  return (\n    '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>' + serializer.serializeToString(dom)\n  );\n}\n\nfunction buildAttributes(attrs: { [key: string]: { toString(): string } }): Attr[] {\n  const result = [];\n  for (const key of Object.keys(attrs)) {\n    const attr = doc.createAttribute(key);\n    attr.value = attrs[key].toString();\n    result.push(attr);\n  }\n  return result;\n}\n\nfunction buildNode(obj: any, elementName: string, options: Required<SerializerOptions>): Node[] {\n  if (\n    obj === undefined ||\n    obj === null ||\n    typeof obj === \"string\" ||\n    typeof obj === \"number\" ||\n    typeof obj === \"boolean\"\n  ) {\n    const elem = doc.createElement(elementName);\n    elem.textContent = obj === undefined || obj === null ? \"\" : obj.toString();\n    return [elem];\n  } else if (Array.isArray(obj)) {\n    const result = [];\n    for (const arrayElem of obj) {\n      for (const child of buildNode(arrayElem, elementName, options)) {\n        result.push(child);\n      }\n    }\n    return result;\n  } else if (typeof obj === \"object\") {\n    const elem = doc.createElement(elementName);\n    for (const key of Object.keys(obj)) {\n      if (key === XML_ATTRKEY) {\n        for (const attr of buildAttributes(obj[key])) {\n          elem.attributes.setNamedItem(attr);\n        }\n      } else if (key === options.xmlCharKey) {\n        elem.textContent = obj[key].toString();\n      } else {\n        for (const child of buildNode(obj[key], key, options)) {\n          elem.appendChild(child);\n        }\n      }\n    }\n    return [elem];\n  } else {\n    throw new Error(`Illegal value passed to buildObject: ${obj}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { OperationResponse } from \"../operationResponse\";\nimport { OperationSpec, isStreamOperation } from \"../operationSpec\";\nimport { RestError } from \"../restError\";\nimport { MapperType } from \"../serializer\";\nimport { parseXML } from \"../util/xml\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\nimport { XML_CHARKEY, SerializerOptions } from \"../util/serializer.common\";\n\n/**\n * Options to configure API response deserialization.\n */\nexport interface DeserializationOptions {\n  /**\n   * Configures the expected content types for the deserialization of\n   * JSON and XML response bodies.\n   */\n  expectedContentTypes: DeserializationContentTypes;\n}\n\n/**\n * The content-types that will indicate that an operation response should be deserialized in a\n * particular way.\n */\nexport interface DeserializationContentTypes {\n  /**\n   * The content-types that indicate that an operation response should be deserialized as JSON.\n   * Defaults to [ \"application/json\", \"text/json\" ].\n   */\n  json?: string[];\n\n  /**\n   * The content-types that indicate that an operation response should be deserialized as XML.\n   * Defaults to [ \"application/xml\", \"application/atom+xml\" ].\n   */\n  xml?: string[];\n}\n\n/**\n * Create a new serialization RequestPolicyCreator that will serialized HTTP request bodies as they\n * pass through the HTTP pipeline.\n */\nexport function deserializationPolicy(\n  deserializationContentTypes?: DeserializationContentTypes,\n  parsingOptions?: SerializerOptions\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new DeserializationPolicy(\n        nextPolicy,\n        options,\n        deserializationContentTypes,\n        parsingOptions\n      );\n    }\n  };\n}\n\nexport const defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nexport const defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n\nexport const DefaultDeserializationOptions: DeserializationOptions = {\n  expectedContentTypes: {\n    json: defaultJsonContentTypes,\n    xml: defaultXmlContentTypes\n  }\n};\n\n/**\n * A RequestPolicy that will deserialize HTTP response bodies and headers as they pass through the\n * HTTP pipeline.\n */\nexport class DeserializationPolicy extends BaseRequestPolicy {\n  public readonly jsonContentTypes: string[];\n  public readonly xmlContentTypes: string[];\n  public readonly xmlCharKey: string;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    requestPolicyOptions: RequestPolicyOptions,\n    deserializationContentTypes?: DeserializationContentTypes,\n    parsingOptions: SerializerOptions = {}\n  ) {\n    super(nextPolicy, requestPolicyOptions);\n\n    this.jsonContentTypes =\n      (deserializationContentTypes && deserializationContentTypes.json) || defaultJsonContentTypes;\n    this.xmlContentTypes =\n      (deserializationContentTypes && deserializationContentTypes.xml) || defaultXmlContentTypes;\n    this.xmlCharKey = parsingOptions.xmlCharKey ?? XML_CHARKEY;\n  }\n\n  public async sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(request).then((response: HttpOperationResponse) =>\n      deserializeResponseBody(this.jsonContentTypes, this.xmlContentTypes, response, {\n        xmlCharKey: this.xmlCharKey\n      })\n    );\n  }\n}\n\nfunction getOperationResponse(\n  parsedResponse: HttpOperationResponse\n): undefined | OperationResponse {\n  let result: OperationResponse | undefined;\n  const request: WebResourceLike = parsedResponse.request;\n  const operationSpec: OperationSpec | undefined = request.operationSpec;\n  if (operationSpec) {\n    const operationResponseGetter:\n      | undefined\n      | ((\n          operationSpec: OperationSpec,\n          response: HttpOperationResponse\n        ) => undefined | OperationResponse) = request.operationResponseGetter;\n    if (!operationResponseGetter) {\n      result = operationSpec.responses[parsedResponse.status];\n    } else {\n      result = operationResponseGetter(operationSpec, parsedResponse);\n    }\n  }\n  return result;\n}\n\nfunction shouldDeserializeResponse(parsedResponse: HttpOperationResponse): boolean {\n  const shouldDeserialize: undefined | boolean | ((response: HttpOperationResponse) => boolean) =\n    parsedResponse.request.shouldDeserialize;\n  let result: boolean;\n  if (shouldDeserialize === undefined) {\n    result = true;\n  } else if (typeof shouldDeserialize === \"boolean\") {\n    result = shouldDeserialize;\n  } else {\n    result = shouldDeserialize(parsedResponse);\n  }\n  return result;\n}\n\nexport function deserializeResponseBody(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  response: HttpOperationResponse,\n  options: SerializerOptions = {}\n): Promise<HttpOperationResponse> {\n  const updatedOptions: Required<SerializerOptions> = {\n    rootName: options.rootName ?? \"\",\n    includeRoot: options.includeRoot ?? false,\n    xmlCharKey: options.xmlCharKey ?? XML_CHARKEY\n  };\n  return parse(jsonContentTypes, xmlContentTypes, response, updatedOptions).then(\n    (parsedResponse) => {\n      if (!shouldDeserializeResponse(parsedResponse)) {\n        return parsedResponse;\n      }\n\n      const operationSpec = parsedResponse.request.operationSpec;\n      if (!operationSpec || !operationSpec.responses) {\n        return parsedResponse;\n      }\n\n      const responseSpec = getOperationResponse(parsedResponse);\n\n      const { error, shouldReturnResponse } = handleErrorResponse(\n        parsedResponse,\n        operationSpec,\n        responseSpec\n      );\n      if (error) {\n        throw error;\n      } else if (shouldReturnResponse) {\n        return parsedResponse;\n      }\n\n      // An operation response spec does exist for current status code, so\n      // use it to deserialize the response.\n      if (responseSpec) {\n        if (responseSpec.bodyMapper) {\n          let valueToDeserialize: any = parsedResponse.parsedBody;\n          if (operationSpec.isXML && responseSpec.bodyMapper.type.name === MapperType.Sequence) {\n            valueToDeserialize =\n              typeof valueToDeserialize === \"object\"\n                ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName!]\n                : [];\n          }\n          try {\n            parsedResponse.parsedBody = operationSpec.serializer.deserialize(\n              responseSpec.bodyMapper,\n              valueToDeserialize,\n              \"operationRes.parsedBody\",\n              options\n            );\n          } catch (error) {\n            const restError = new RestError(\n              `Error ${error} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`,\n              undefined,\n              parsedResponse.status,\n              parsedResponse.request,\n              parsedResponse\n            );\n            throw restError;\n          }\n        } else if (operationSpec.httpMethod === \"HEAD\") {\n          // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n          parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n        }\n\n        if (responseSpec.headersMapper) {\n          parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(\n            responseSpec.headersMapper,\n            parsedResponse.headers.rawHeaders(),\n            \"operationRes.parsedHeaders\",\n            options\n          );\n        }\n      }\n\n      return parsedResponse;\n    }\n  );\n}\n\nfunction isOperationSpecEmpty(operationSpec: OperationSpec): boolean {\n  const expectedStatusCodes = Object.keys(operationSpec.responses);\n  return (\n    expectedStatusCodes.length === 0 ||\n    (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\")\n  );\n}\n\nfunction handleErrorResponse(\n  parsedResponse: HttpOperationResponse,\n  operationSpec: OperationSpec,\n  responseSpec: OperationResponse | undefined\n): { error: RestError | null; shouldReturnResponse: boolean } {\n  const isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;\n  const isExpectedStatusCode: boolean = isOperationSpecEmpty(operationSpec)\n    ? isSuccessByStatus\n    : !!responseSpec;\n\n  if (isExpectedStatusCode) {\n    if (responseSpec) {\n      if (!responseSpec.isError) {\n        return { error: null, shouldReturnResponse: false };\n      }\n    } else {\n      return { error: null, shouldReturnResponse: false };\n    }\n  }\n\n  const errorResponseSpec = responseSpec ?? operationSpec.responses.default;\n  const initialErrorMessage = isStreamOperation(operationSpec)\n    ? `Unexpected status code: ${parsedResponse.status}`\n    : (parsedResponse.bodyAsText as string);\n\n  const error = new RestError(\n    initialErrorMessage,\n    undefined,\n    parsedResponse.status,\n    parsedResponse.request,\n    parsedResponse\n  );\n\n  // If the item failed but there's no error spec or default spec to deserialize the error,\n  // we should fail so we just throw the parsed response\n  if (!errorResponseSpec) {\n    throw error;\n  }\n\n  const defaultBodyMapper = errorResponseSpec.bodyMapper;\n  const defaultHeadersMapper = errorResponseSpec.headersMapper;\n\n  try {\n    // If error response has a body, try to deserialize it using default body mapper.\n    // Then try to extract error code & message from it\n    if (parsedResponse.parsedBody) {\n      const parsedBody = parsedResponse.parsedBody;\n      let parsedError;\n      if (defaultBodyMapper) {\n        let valueToDeserialize: any = parsedBody;\n        if (operationSpec.isXML && defaultBodyMapper.type.name === MapperType.Sequence) {\n          valueToDeserialize =\n            typeof parsedBody === \"object\" ? parsedBody[defaultBodyMapper.xmlElementName!] : [];\n        }\n        parsedError = operationSpec.serializer.deserialize(\n          defaultBodyMapper,\n          valueToDeserialize,\n          \"error.response.parsedBody\"\n        );\n      }\n\n      const internalError: any = parsedBody.error || parsedError || parsedBody;\n      error.code = internalError.code;\n      if (internalError.message) {\n        error.message = internalError.message;\n      }\n\n      if (defaultBodyMapper) {\n        error.response!.parsedBody = parsedError;\n      }\n    }\n\n    // If error response has headers, try to deserialize it using default header mapper\n    if (parsedResponse.headers && defaultHeadersMapper) {\n      error.response!.parsedHeaders = operationSpec.serializer.deserialize(\n        defaultHeadersMapper,\n        parsedResponse.headers.rawHeaders(),\n        \"operationRes.parsedHeaders\"\n      );\n    }\n  } catch (defaultError) {\n    error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody - \"${parsedResponse.bodyAsText}\" for the default response.`;\n  }\n\n  return { error, shouldReturnResponse: false };\n}\n\nfunction parse(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  operationResponse: HttpOperationResponse,\n  opts: Required<SerializerOptions>\n): Promise<HttpOperationResponse> {\n  const errorHandler = (err: Error & { code: string }): Promise<never> => {\n    const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n    const errCode = err.code || RestError.PARSE_ERROR;\n    const e = new RestError(\n      msg,\n      errCode,\n      operationResponse.status,\n      operationResponse.request,\n      operationResponse\n    );\n    return Promise.reject(e);\n  };\n\n  if (!operationResponse.request.streamResponseBody && operationResponse.bodyAsText) {\n    const text = operationResponse.bodyAsText;\n    const contentType: string = operationResponse.headers.get(\"Content-Type\") || \"\";\n    const contentComponents: string[] = !contentType\n      ? []\n      : contentType.split(\";\").map((component) => component.toLowerCase());\n    if (\n      contentComponents.length === 0 ||\n      contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)\n    ) {\n      return new Promise<HttpOperationResponse>((resolve) => {\n        operationResponse.parsedBody = JSON.parse(text);\n        resolve(operationResponse);\n      }).catch(errorHandler);\n    } else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n      return parseXML(text, opts)\n        .then((body) => {\n          operationResponse.parsedBody = body;\n          return operationResponse;\n        })\n        .catch(errorHandler);\n    }\n  }\n\n  return Promise.resolve(operationResponse);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../coreHttp\";\n\nexport const DEFAULT_CLIENT_RETRY_COUNT = 3;\n// intervals are in ms\nexport const DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\nexport const DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\nexport const DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\n\nexport function isNumber(n: any): n is number {\n  return typeof n === \"number\";\n}\nexport interface RetryData {\n  retryCount: number;\n  retryInterval: number;\n  error?: RetryError;\n}\n\nexport interface RetryError extends Error {\n  message: string;\n  code?: string;\n  innerError?: RetryError;\n}\n\n/**\n * @internal\n * Determines if the operation should be retried.\n *\n * @param {number} retryLimit Specifies the max number of retries.\n * @param {(response?: HttpOperationResponse, error?: RetryError) => boolean} predicate Initial chekck on whether to retry based on given responses or errors\n * @param {RetryData} retryData  The retry data.\n * @return {boolean} True if the operation qualifies for a retry; false otherwise.\n */\nexport function shouldRetry(\n  retryLimit: number,\n  predicate: (response?: HttpOperationResponse, error?: RetryError) => boolean,\n  retryData: RetryData,\n  response?: HttpOperationResponse,\n  error?: RetryError\n): boolean {\n  if (!predicate(response, error)) {\n    return false;\n  }\n\n  return retryData.retryCount < retryLimit;\n}\n\n/**\n * @internal\n * Updates the retry data for the next attempt.\n *\n * @param {RetryPolicyOptions} retryOptions specifies retry interval, and its lower bound and upper bound.\n * @param {RetryData} [retryData]  The retry data.\n * @param {RetryError} [err] The operation\"s error, if any.\n */\nexport function updateRetryData(\n  retryOptions: { retryInterval: number; minRetryInterval: number; maxRetryInterval: number },\n  retryData: RetryData = { retryCount: 0, retryInterval: 0 },\n  err?: RetryError\n): RetryData {\n  if (err) {\n    if (retryData.error) {\n      err.innerError = retryData.error;\n    }\n\n    retryData.error = err;\n  }\n\n  // Adjust retry count\n  retryData.retryCount++;\n\n  // Adjust retry interval\n  let incrementDelta = Math.pow(2, retryData.retryCount - 1) - 1;\n  const boundedRandDelta =\n    retryOptions.retryInterval * 0.8 +\n    Math.floor(Math.random() * (retryOptions.retryInterval * 0.4));\n  incrementDelta *= boundedRandDelta;\n\n  retryData.retryInterval = Math.min(\n    retryOptions.minRetryInterval + incrementDelta,\n    retryOptions.maxRetryInterval\n  );\n\n  return retryData;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport * as utils from \"../util/utils\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\nimport {\n  RetryData,\n  RetryError,\n  DEFAULT_CLIENT_MAX_RETRY_INTERVAL,\n  DEFAULT_CLIENT_RETRY_COUNT,\n  DEFAULT_CLIENT_RETRY_INTERVAL,\n  isNumber,\n  updateRetryData,\n  shouldRetry\n} from \"../util/exponentialBackoffStrategy\";\nimport { RestError } from \"../restError\";\nimport { logger } from \"../log\";\n\nexport function exponentialRetryPolicy(\n  retryCount?: number,\n  retryInterval?: number,\n  maxRetryInterval?: number\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new ExponentialRetryPolicy(\n        nextPolicy,\n        options,\n        retryCount,\n        retryInterval,\n        maxRetryInterval\n      );\n    }\n  };\n}\n\n/**\n * Describes the Retry Mode type. Currently supporting only Exponential.\n * @enum RetryMode\n */\nexport enum RetryMode {\n  Exponential\n}\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface RetryOptions {\n  /**\n   * The maximum number of retry attempts.  Defaults to 3.\n   */\n  maxRetries?: number;\n\n  /**\n   * The amount of delay in milliseconds between retry attempts. Defaults to 30000\n   * (30 seconds). The delay increases exponentially with each retry up to a maximum\n   * specified by maxRetryDelayInMs.\n   */\n  retryDelayInMs?: number;\n\n  /**\n   * The maximum delay in milliseconds allowed before retrying an operation. Defaults\n   * to 90000 (90 seconds).\n   */\n  maxRetryDelayInMs?: number;\n\n  /**\n   * Currently supporting only Exponential mode.\n   */\n  mode?: RetryMode;\n}\n\nexport const DefaultRetryOptions: RetryOptions = {\n  maxRetries: DEFAULT_CLIENT_RETRY_COUNT,\n  retryDelayInMs: DEFAULT_CLIENT_RETRY_INTERVAL,\n  maxRetryDelayInMs: DEFAULT_CLIENT_MAX_RETRY_INTERVAL\n};\n\n/**\n * @class\n * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n */\nexport class ExponentialRetryPolicy extends BaseRequestPolicy {\n  /**\n   * The client retry count.\n   */\n  retryCount: number;\n  /**\n   * The client retry interval in milliseconds.\n   */\n  retryInterval: number;\n  /**\n   * The maximum retry interval in milliseconds.\n   */\n  maxRetryInterval: number;\n\n  /**\n   * @constructor\n   * @param {RequestPolicy} nextPolicy The next RequestPolicy in the pipeline chain.\n   * @param {RequestPolicyOptions} options The options for this RequestPolicy.\n   * @param {number} [retryCount]        The client retry count.\n   * @param {number} [retryInterval]     The client retry interval, in milliseconds.\n   * @param {number} [minRetryInterval]  The minimum retry interval, in milliseconds.\n   * @param {number} [maxRetryInterval]  The maximum retry interval, in milliseconds.\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryCount?: number,\n    retryInterval?: number,\n    maxRetryInterval?: number\n  ) {\n    super(nextPolicy, options);\n    this.retryCount = isNumber(retryCount) ? retryCount : DEFAULT_CLIENT_RETRY_COUNT;\n    this.retryInterval = isNumber(retryInterval) ? retryInterval : DEFAULT_CLIENT_RETRY_INTERVAL;\n    this.maxRetryInterval = isNumber(maxRetryInterval)\n      ? maxRetryInterval\n      : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request.clone())\n      .then((response) => retry(this, request, response))\n      .catch((error) => retry(this, request, error.response, undefined, error));\n  }\n}\n\nasync function retry(\n  policy: ExponentialRetryPolicy,\n  request: WebResourceLike,\n  response?: HttpOperationResponse,\n  retryData?: RetryData,\n  requestError?: RetryError\n): Promise<HttpOperationResponse> {\n  function shouldPolicyRetry(response?: HttpOperationResponse): boolean {\n    const statusCode = response?.status;\n    if (\n      statusCode === undefined ||\n      (statusCode < 500 && statusCode !== 408) ||\n      statusCode === 501 ||\n      statusCode === 505\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  retryData = updateRetryData(\n    {\n      retryInterval: policy.retryInterval,\n      minRetryInterval: 0,\n      maxRetryInterval: policy.maxRetryInterval\n    },\n    retryData,\n    requestError\n  );\n\n  const isAborted: boolean | undefined = request.abortSignal && request.abortSignal.aborted;\n  if (!isAborted && shouldRetry(policy.retryCount, shouldPolicyRetry, retryData, response)) {\n    logger.info(`Retrying request in ${retryData.retryInterval}`);\n    try {\n      await utils.delay(retryData.retryInterval);\n      const res = await policy._nextPolicy.sendRequest(request.clone());\n      return retry(policy, request, res, retryData);\n    } catch (err) {\n      return retry(policy, request, response, retryData, err);\n    }\n  } else if (isAborted || requestError || !response) {\n    // If the operation failed in the end, return all errors instead of just the last one\n    const err =\n      retryData.error ||\n      new RestError(\n        \"Failed to send the request.\",\n        RestError.REQUEST_SEND_ERROR,\n        response && response.status,\n        response && response.request,\n        response\n      );\n    throw err;\n  } else {\n    return response;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport function generateClientRequestIdPolicy(\n  requestIdHeaderName = \"x-ms-client-request-id\"\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n    }\n  };\n}\n\nexport class GenerateClientRequestIdPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private _requestIdHeaderName: string\n  ) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!request.headers.contains(this._requestIdHeaderName)) {\n      request.headers.set(this._requestIdHeaderName, request.requestId);\n    }\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n * and \"plugins\" section in webpack.testconfig.ts.\n */\n\nimport { TelemetryInfo } from \"./userAgentPolicy\";\n\ninterface NavigatorEx extends Navigator {\n  // oscpu is not yet standards-compliant, but can not be undefined in TypeScript 3.6.2\n  readonly oscpu: string;\n}\n\nexport function getDefaultUserAgentKey(): string {\n  return \"x-ms-useragent\";\n}\n\nexport function getPlatformSpecificData(): TelemetryInfo[] {\n  const navigator = window.navigator as NavigatorEx;\n  const osInfo = {\n    key: \"OS\",\n    value: (navigator.oscpu || navigator.platform).replace(\" \", \"\")\n  };\n\n  return [osInfo];\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpHeaders } from \"../httpHeaders\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { Constants } from \"../util/constants\";\nimport { WebResourceLike } from \"../webResource\";\nimport { getDefaultUserAgentKey, getPlatformSpecificData } from \"./msRestUserAgentPolicy\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport type TelemetryInfo = { key?: string; value?: string };\n\n/**\n * Options for adding user agent details to outgoing requests.\n */\nexport interface UserAgentOptions {\n  /*\n   * String prefix to add to the user agent for outgoing requests.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n}\n\nfunction getRuntimeInfo(): TelemetryInfo[] {\n  const msRestRuntime = {\n    key: \"core-http\",\n    value: Constants.coreHttpVersion\n  };\n\n  return [msRestRuntime];\n}\n\nfunction getUserAgentString(\n  telemetryInfo: TelemetryInfo[],\n  keySeparator = \" \",\n  valueSeparator = \"/\"\n): string {\n  return telemetryInfo\n    .map((info) => {\n      const value = info.value ? `${valueSeparator}${info.value}` : \"\";\n      return `${info.key}${value}`;\n    })\n    .join(keySeparator);\n}\n\nexport const getDefaultUserAgentHeaderName = getDefaultUserAgentKey;\n\nexport function getDefaultUserAgentValue(): string {\n  const runtimeInfo = getRuntimeInfo();\n  const platformSpecificData = getPlatformSpecificData();\n  const userAgent = getUserAgentString(runtimeInfo.concat(platformSpecificData));\n  return userAgent;\n}\n\nexport function userAgentPolicy(userAgentData?: TelemetryInfo): RequestPolicyFactory {\n  const key: string =\n    !userAgentData || userAgentData.key === undefined || userAgentData.key === null\n      ? getDefaultUserAgentKey()\n      : userAgentData.key;\n  const value: string =\n    !userAgentData || userAgentData.value === undefined || userAgentData.value === null\n      ? getDefaultUserAgentValue()\n      : userAgentData.value;\n\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new UserAgentPolicy(nextPolicy, options, key, value);\n    }\n  };\n}\n\nexport class UserAgentPolicy extends BaseRequestPolicy {\n  constructor(\n    readonly _nextPolicy: RequestPolicy,\n    readonly _options: RequestPolicyOptions,\n    protected headerKey: string,\n    protected headerValue: string\n  ) {\n    super(_nextPolicy, _options);\n  }\n\n  sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    this.addUserAgentHeader(request);\n    return this._nextPolicy.sendRequest(request);\n  }\n\n  addUserAgentHeader(request: WebResourceLike): void {\n    if (!request.headers) {\n      request.headers = new HttpHeaders();\n    }\n\n    if (!request.headers.get(this.headerKey) && this.headerValue) {\n      request.headers.set(this.headerKey, this.headerValue);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { URLBuilder } from \"../url\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n\n/**\n * Options for how redirect responses are handled.\n */\nexport interface RedirectOptions {\n  /*\n   * When true, redirect responses are followed.  Defaults to true.\n   */\n  handleRedirects: boolean;\n\n  /*\n   * The maximum number of times the redirect URL will be tried before\n   * failing.  Defaults to 20.\n   */\n  maxRetries?: number;\n}\n\nexport const DefaultRedirectOptions: RedirectOptions = {\n  handleRedirects: true,\n  maxRetries: 20\n};\n\nexport function redirectPolicy(maximumRetries = 20): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new RedirectPolicy(nextPolicy, options, maximumRetries);\n    }\n  };\n}\n\nexport class RedirectPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions, readonly maxRetries = 20) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request)\n      .then((response) => handleRedirect(this, response, 0));\n  }\n}\n\nfunction handleRedirect(\n  policy: RedirectPolicy,\n  response: HttpOperationResponse,\n  currentRetries: number\n): Promise<HttpOperationResponse> {\n  const { request, status } = response;\n  const locationHeader = response.headers.get(\"location\");\n  if (\n    locationHeader &&\n    (status === 300 ||\n      (status === 301 && allowedRedirect.includes(request.method)) ||\n      (status === 302 && allowedRedirect.includes(request.method)) ||\n      (status === 303 && request.method === \"POST\") ||\n      status === 307) &&\n    (!policy.maxRetries || currentRetries < policy.maxRetries)\n  ) {\n    const builder = URLBuilder.parse(request.url);\n    builder.setPath(locationHeader);\n    request.url = builder.toString();\n\n    // POST request with Status code 303 should be converted into a\n    // redirected GET request if the redirect url is present in the location header\n    if (status === 303) {\n      request.method = \"GET\";\n      delete request.body;\n    }\n\n    return policy._nextPolicy\n      .sendRequest(request)\n      .then((res) => handleRedirect(policy, res, currentRetries + 1));\n  }\n\n  return Promise.resolve(response);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport * as utils from \"../util/utils\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport function rpRegistrationPolicy(retryTimeout = 30): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new RPRegistrationPolicy(nextPolicy, options, retryTimeout);\n    }\n  };\n}\n\nexport class RPRegistrationPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    readonly _retryTimeout = 30\n  ) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request.clone())\n      .then((response) => registerIfNeeded(this, request, response));\n  }\n}\n\nfunction registerIfNeeded(\n  policy: RPRegistrationPolicy,\n  request: WebResourceLike,\n  response: HttpOperationResponse\n): Promise<HttpOperationResponse> {\n  if (response.status === 409) {\n    const rpName = checkRPNotRegisteredError(response.bodyAsText as string);\n    if (rpName) {\n      const urlPrefix = extractSubscriptionUrl(request.url);\n      return (\n        registerRP(policy, urlPrefix, rpName, request)\n          // Autoregistration of ${provider} failed for some reason. We will not return this error\n          // instead will return the initial response with 409 status code back to the user.\n          // do nothing here as we are returning the original response at the end of this method.\n          .catch(() => false)\n          .then((registrationStatus) => {\n            if (registrationStatus) {\n              // Retry the original request. We have to change the x-ms-client-request-id\n              // otherwise Azure endpoint will return the initial 409 (cached) response.\n              request.headers.set(\"x-ms-client-request-id\", utils.generateUuid());\n              return policy._nextPolicy.sendRequest(request.clone());\n            }\n            return response;\n          })\n      );\n    }\n  }\n\n  return Promise.resolve(response);\n}\n\n/**\n * Reuses the headers of the original request and url (if specified).\n * @param {WebResourceLike} originalRequest The original request\n * @param {boolean} reuseUrlToo Should the url from the original request be reused as well. Default false.\n * @returns {object} A new request object with desired headers.\n */\nfunction getRequestEssentials(\n  originalRequest: WebResourceLike,\n  reuseUrlToo = false\n): WebResourceLike {\n  const reqOptions: WebResourceLike = originalRequest.clone();\n  if (reuseUrlToo) {\n    reqOptions.url = originalRequest.url;\n  }\n\n  // We have to change the x-ms-client-request-id otherwise Azure endpoint\n  // will return the initial 409 (cached) response.\n  reqOptions.headers.set(\"x-ms-client-request-id\", utils.generateUuid());\n\n  // Set content-type to application/json\n  reqOptions.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n\n  return reqOptions;\n}\n\n/**\n * Validates the error code and message associated with 409 response status code. If it matches to that of\n * RP not registered then it returns the name of the RP else returns undefined.\n * @param {string} body The response body received after making the original request.\n * @returns {string} The name of the RP if condition is satisfied else undefined.\n */\nfunction checkRPNotRegisteredError(body: string): string {\n  let result, responseBody;\n  if (body) {\n    try {\n      responseBody = JSON.parse(body);\n    } catch (err) {\n      // do nothing;\n    }\n    if (\n      responseBody &&\n      responseBody.error &&\n      responseBody.error.message &&\n      responseBody.error.code &&\n      responseBody.error.code === \"MissingSubscriptionRegistration\"\n    ) {\n      const matchRes = responseBody.error.message.match(/.*'(.*)'/i);\n      if (matchRes) {\n        result = matchRes.pop();\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Extracts the first part of the URL, just after subscription:\n * https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param {string} url The original request url\n * @returns {string} The url prefix as explained above.\n */\nfunction extractSubscriptionUrl(url: string): string {\n  let result;\n  const matchRes = url.match(/.*\\/subscriptions\\/[a-f0-9-]+\\//gi);\n  if (matchRes && matchRes[0]) {\n    result = matchRes[0];\n  } else {\n    throw new Error(`Unable to extract subscriptionId from the given url - ${url}.`);\n  }\n  return result;\n}\n\n/**\n * Registers the given provider.\n * @param {RPRegistrationPolicy} policy The RPRegistrationPolicy this function is being called against.\n * @param {string} urlPrefix https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param {string} provider The provider name to be registered.\n * @param {WebResourceLike} originalRequest The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @param {registrationCallback} callback The callback that handles the RP registration\n */\nfunction registerRP(\n  policy: RPRegistrationPolicy,\n  urlPrefix: string,\n  provider: string,\n  originalRequest: WebResourceLike\n): Promise<boolean> {\n  const postUrl = `${urlPrefix}providers/${provider}/register?api-version=2016-02-01`;\n  const getUrl = `${urlPrefix}providers/${provider}?api-version=2016-02-01`;\n  const reqOptions = getRequestEssentials(originalRequest);\n  reqOptions.method = \"POST\";\n  reqOptions.url = postUrl;\n\n  return policy._nextPolicy.sendRequest(reqOptions).then((response) => {\n    if (response.status !== 200) {\n      throw new Error(`Autoregistration of ${provider} failed. Please try registering manually.`);\n    }\n    return getRegistrationStatus(policy, getUrl, originalRequest);\n  });\n}\n\n/**\n * Polls the registration status of the provider that was registered. Polling happens at an interval of 30 seconds.\n * Polling will happen till the registrationState property of the response body is \"Registered\".\n * @param {RPRegistrationPolicy} policy The RPRegistrationPolicy this function is being called against.\n * @param {string} url The request url for polling\n * @param {WebResourceLike} originalRequest The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @returns {Promise<boolean>} True if RP Registration is successful.\n */\nfunction getRegistrationStatus(\n  policy: RPRegistrationPolicy,\n  url: string,\n  originalRequest: WebResourceLike\n): Promise<boolean> {\n  const reqOptions: any = getRequestEssentials(originalRequest);\n  reqOptions.url = url;\n  reqOptions.method = \"GET\";\n\n  return policy._nextPolicy.sendRequest(reqOptions).then((res) => {\n    const obj = res.parsedBody as any;\n    if (res.parsedBody && obj.registrationState && obj.registrationState === \"Registered\") {\n      return true;\n    } else {\n      return utils\n        .delay(policy._retryTimeout * 1000)\n        .then(() => getRegistrationStatus(policy, url, originalRequest));\n    }\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AccessToken } from \"@azure/core-auth\";\n\n/**\n * Defines the default token refresh buffer duration.\n */\nexport const TokenRefreshBufferMs = 2 * 60 * 1000; // 2 Minutes\n\n/**\n * Provides a cache for an AccessToken that was that\n * was returned from a TokenCredential.\n */\nexport interface AccessTokenCache {\n  /**\n   * Sets the cached token.\n   *\n   * @param The {@link AccessToken} to be cached or null to\n   *        clear the cached token.\n   */\n  setCachedToken(accessToken: AccessToken | undefined): void;\n\n  /**\n   * Returns the cached {@link AccessToken} or undefined if nothing is cached.\n   */\n  getCachedToken(): AccessToken | undefined;\n}\n\n/**\n * Provides an {@link AccessTokenCache} implementation which clears\n * the cached {@link AccessToken}'s after the expiresOnTimestamp has\n * passed.\n */\nexport class ExpiringAccessTokenCache implements AccessTokenCache {\n  private tokenRefreshBufferMs: number;\n  private cachedToken?: AccessToken = undefined;\n\n  /**\n   * Constructs an instance of {@link ExpiringAccessTokenCache} with\n   * an optional expiration buffer time.\n   */\n  constructor(tokenRefreshBufferMs: number = TokenRefreshBufferMs) {\n    this.tokenRefreshBufferMs = tokenRefreshBufferMs;\n  }\n\n  setCachedToken(accessToken: AccessToken | undefined): void {\n    this.cachedToken = accessToken;\n  }\n\n  getCachedToken(): AccessToken | undefined {\n    if (\n      this.cachedToken &&\n      Date.now() + this.tokenRefreshBufferMs >= this.cachedToken.expiresOnTimestamp\n    ) {\n      this.cachedToken = undefined;\n    }\n\n    return this.cachedToken;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AccessToken, TokenCredential, GetTokenOptions } from \"@azure/core-auth\";\n\n/**\n * Helps the core-http token authentication policies with requesting a new token if we're not currently waiting for a new token.\n */\nexport class AccessTokenRefresher {\n  private promise: Promise<AccessToken | undefined> | undefined;\n  private lastCalled = 0;\n\n  constructor(\n    private credential: TokenCredential,\n    private scopes: string | string[],\n    private requiredMillisecondsBeforeNewRefresh: number = 30000\n  ) {}\n\n  /**\n   * Returns true if the required milliseconds(defaulted to 30000) have been passed signifying\n   * that we are ready for a new refresh.\n   *\n   * @returns {boolean}\n   */\n  public isReady(): boolean {\n    // We're only ready for a new refresh if the required milliseconds have passed.\n    return (\n      !this.lastCalled || Date.now() - this.lastCalled > this.requiredMillisecondsBeforeNewRefresh\n    );\n  }\n\n  /**\n   * Stores the time in which it is called,\n   * then requests a new token,\n   * then sets this.promise to undefined,\n   * then returns the token.\n   * @param options getToken options\n   */\n  private async getToken(options: GetTokenOptions): Promise<AccessToken | undefined> {\n    this.lastCalled = Date.now();\n    const token = await this.credential.getToken(this.scopes, options);\n    this.promise = undefined;\n    return token || undefined;\n  }\n\n  /**\n   * Requests a new token if we're not currently waiting for a new token.\n   * Returns null if the required time between each call hasn't been reached.\n   * @param options getToken options\n   */\n  public refresh(options: GetTokenOptions): Promise<AccessToken | undefined> {\n    if (!this.promise) {\n      this.promise = this.getToken(options);\n    }\n\n    return this.promise;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { TokenCredential, GetTokenOptions } from \"@azure/core-auth\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyOptions,\n  RequestPolicyFactory\n} from \"../policies/requestPolicy\";\nimport { Constants } from \"../util/constants\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { HttpHeaders } from \"../httpHeaders\";\nimport { WebResourceLike } from \"../webResource\";\nimport { AccessTokenCache, ExpiringAccessTokenCache } from \"../credentials/accessTokenCache\";\nimport { AccessTokenRefresher } from \"../credentials/accessTokenRefresher\";\n\n/**\n * Creates a new BearerTokenAuthenticationPolicy factory.\n *\n * @param credential The TokenCredential implementation that can supply the bearer token.\n * @param scopes The scopes for which the bearer token applies.\n */\nexport function bearerTokenAuthenticationPolicy(\n  credential: TokenCredential,\n  scopes: string | string[]\n): RequestPolicyFactory {\n  const tokenCache: AccessTokenCache = new ExpiringAccessTokenCache();\n  const tokenRefresher = new AccessTokenRefresher(\n    credential,\n    scopes,\n    timeBetweenRefreshAttemptsInMs\n  );\n\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new BearerTokenAuthenticationPolicy(nextPolicy, options, tokenCache, tokenRefresher);\n    }\n  };\n}\n\n/**\n * The automated token refresh will only start to happen at the\n * expiration date minus the value of timeBetweenRefreshAttemptsInMs,\n * which is by default 30 seconds.\n */\nconst timeBetweenRefreshAttemptsInMs = 30000;\n\n/**\n *\n * Provides a RequestPolicy that can request a token from a TokenCredential\n * implementation and then apply it to the Authorization header of a request\n * as a Bearer token.\n *\n */\nexport class BearerTokenAuthenticationPolicy extends BaseRequestPolicy {\n  /**\n   * Creates a new BearerTokenAuthenticationPolicy object.\n   *\n   * @param nextPolicy The next RequestPolicy in the request pipeline.\n   * @param options Options for this RequestPolicy.\n   * @param credential The TokenCredential implementation that can supply the bearer token.\n   * @param scopes The scopes for which the bearer token applies.\n   * @param tokenCache The cache for the most recent AccessToken returned from the TokenCredential.\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private tokenCache: AccessTokenCache,\n    private tokenRefresher: AccessTokenRefresher\n  ) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Applies the Bearer token to the request through the Authorization header.\n   * @param webResource\n   */\n  public async sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!webResource.headers) webResource.headers = new HttpHeaders();\n    const token = await this.getToken({\n      abortSignal: webResource.abortSignal,\n      tracingOptions: {\n        spanOptions: webResource.spanOptions\n      }\n    });\n    webResource.headers.set(Constants.HeaderConstants.AUTHORIZATION, `Bearer ${token}`);\n    return this._nextPolicy.sendRequest(webResource);\n  }\n\n  /**\n   * Attempts a token update if any other time related conditionals have been reached based on the tokenRefresher class.\n   */\n  private async updateTokenIfNeeded(options: GetTokenOptions): Promise<void> {\n    if (this.tokenRefresher.isReady()) {\n      const accessToken = await this.tokenRefresher.refresh(options);\n      this.tokenCache.setCachedToken(accessToken);\n    }\n  }\n\n  private async getToken(options: GetTokenOptions): Promise<string | undefined> {\n    let accessToken = this.tokenCache.getCachedToken();\n    if (accessToken === undefined) {\n      // Waiting for the next refresh only if the cache is unable to retrieve the access token,\n      // which means that it has expired, or it has never been set.\n      accessToken = await this.tokenRefresher.refresh(options);\n      this.tokenCache.setCachedToken(accessToken);\n    } else {\n      // If we still have a cached access token,\n      // And any other time related conditionals have been reached based on the tokenRefresher class,\n      // then attempt to refresh without waiting.\n      this.updateTokenIfNeeded(options);\n    }\n\n    return accessToken ? accessToken.token : undefined;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport * as utils from \"../util/utils\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\nimport {\n  RetryData,\n  RetryError,\n  shouldRetry,\n  updateRetryData,\n  DEFAULT_CLIENT_MAX_RETRY_INTERVAL,\n  DEFAULT_CLIENT_RETRY_COUNT,\n  DEFAULT_CLIENT_RETRY_INTERVAL,\n  DEFAULT_CLIENT_MIN_RETRY_INTERVAL,\n  isNumber\n} from \"../util/exponentialBackoffStrategy\";\n\nexport function systemErrorRetryPolicy(\n  retryCount?: number,\n  retryInterval?: number,\n  minRetryInterval?: number,\n  maxRetryInterval?: number\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new SystemErrorRetryPolicy(\n        nextPolicy,\n        options,\n        retryCount,\n        retryInterval,\n        minRetryInterval,\n        maxRetryInterval\n      );\n    }\n  };\n}\n\n/**\n * @class\n * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n *\n * @constructor\n * @param {number} retryCount        The client retry count.\n * @param {number} retryInterval     The client retry interval, in milliseconds.\n * @param {number} minRetryInterval  The minimum retry interval, in milliseconds.\n * @param {number} maxRetryInterval  The maximum retry interval, in milliseconds.\n */\nexport class SystemErrorRetryPolicy extends BaseRequestPolicy {\n  retryCount: number;\n  retryInterval: number;\n  minRetryInterval: number;\n  maxRetryInterval: number;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryCount?: number,\n    retryInterval?: number,\n    minRetryInterval?: number,\n    maxRetryInterval?: number\n  ) {\n    super(nextPolicy, options);\n    this.retryCount = isNumber(retryCount) ? retryCount : DEFAULT_CLIENT_RETRY_COUNT;\n    this.retryInterval = isNumber(retryInterval) ? retryInterval : DEFAULT_CLIENT_RETRY_INTERVAL;\n    this.minRetryInterval = isNumber(minRetryInterval)\n      ? minRetryInterval\n      : DEFAULT_CLIENT_MIN_RETRY_INTERVAL;\n    this.maxRetryInterval = isNumber(maxRetryInterval)\n      ? maxRetryInterval\n      : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request.clone())\n      .catch((error) => retry(this, request, error.response, error));\n  }\n}\n\nasync function retry(\n  policy: SystemErrorRetryPolicy,\n  request: WebResourceLike,\n  operationResponse: HttpOperationResponse,\n  err?: RetryError,\n  retryData?: RetryData\n): Promise<HttpOperationResponse> {\n  retryData = updateRetryData(policy, retryData, err);\n\n  function shouldPolicyRetry(_response?: HttpOperationResponse, error?: RetryError): boolean {\n    if (\n      error &&\n      error.code &&\n      (error.code === \"ETIMEDOUT\" ||\n        error.code === \"ESOCKETTIMEDOUT\" ||\n        error.code === \"ECONNREFUSED\" ||\n        error.code === \"ECONNRESET\" ||\n        error.code === \"ENOENT\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  if (shouldRetry(policy.retryCount, shouldPolicyRetry, retryData, operationResponse, err)) {\n    // If previous operation ended with an error and the policy allows a retry, do that\n    try {\n      await utils.delay(retryData.retryInterval);\n      return policy._nextPolicy.sendRequest(request.clone());\n    } catch (err) {\n      return retry(policy, request, operationResponse, err, retryData);\n    }\n  } else {\n    if (err) {\n      // If the operation failed in the end, return all errors instead of just the last one\n      return Promise.reject(retryData.error);\n    }\n    return operationResponse;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The format that will be used to join an array of values together for a query parameter value.\n */\nexport enum QueryCollectionFormat {\n  Csv = \",\",\n  Ssv = \" \",\n  Tsv = \"\\t\",\n  Pipes = \"|\",\n  Multi = \"Multi\"\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ProxySettings } from \"../serviceClient\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\n\nconst proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\n\nexport function getDefaultProxySettings(_proxyUrl?: string): ProxySettings | undefined {\n  return undefined;\n}\n\nexport function proxyPolicy(_proxySettings?: ProxySettings): RequestPolicyFactory {\n  return {\n    create: (_nextPolicy: RequestPolicy, _options: RequestPolicyOptions) => {\n      throw proxyNotSupportedInBrowser;\n    }\n  };\n}\n\nexport class ProxyPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n    throw proxyNotSupportedInBrowser;\n  }\n\n  public sendRequest(_request: WebResourceLike): Promise<HttpOperationResponse> {\n    throw proxyNotSupportedInBrowser;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyOptions,\n  RequestPolicyFactory\n} from \"./requestPolicy\";\nimport { WebResourceLike } from \"../webResource\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { Constants } from \"../util/constants\";\nimport { delay } from \"../util/utils\";\n\ntype ResponseHandler = (\n  httpRequest: WebResourceLike,\n  response: HttpOperationResponse\n) => Promise<HttpOperationResponse>;\nconst StatusCodes = Constants.HttpConstants.StatusCodes;\n\nexport function throttlingRetryPolicy(): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new ThrottlingRetryPolicy(nextPolicy, options);\n    }\n  };\n}\n\n/**\n * To learn more, please refer to\n * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n */\nexport class ThrottlingRetryPolicy extends BaseRequestPolicy {\n  private _handleResponse: ResponseHandler;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    _handleResponse?: ResponseHandler\n  ) {\n    super(nextPolicy, options);\n    this._handleResponse = _handleResponse || this._defaultResponseHandler;\n  }\n\n  public async sendRequest(httpRequest: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(httpRequest.clone()).then((response) => {\n      if (response.status !== StatusCodes.TooManyRequests) {\n        return response;\n      } else {\n        return this._handleResponse(httpRequest, response);\n      }\n    });\n  }\n\n  private async _defaultResponseHandler(\n    httpRequest: WebResourceLike,\n    httpResponse: HttpOperationResponse\n  ): Promise<HttpOperationResponse> {\n    const retryAfterHeader: string | undefined = httpResponse.headers.get(\n      Constants.HeaderConstants.RETRY_AFTER\n    );\n\n    if (retryAfterHeader) {\n      const delayInMs: number | undefined = ThrottlingRetryPolicy.parseRetryAfterHeader(\n        retryAfterHeader\n      );\n      if (delayInMs) {\n        return delay(delayInMs).then((_: any) => this._nextPolicy.sendRequest(httpRequest));\n      }\n    }\n\n    return httpResponse;\n  }\n\n  public static parseRetryAfterHeader(headerValue: string): number | undefined {\n    const retryAfterInSeconds = Number(headerValue);\n    if (Number.isNaN(retryAfterInSeconds)) {\n      return ThrottlingRetryPolicy.parseDateRetryAfterHeader(headerValue);\n    } else {\n      return retryAfterInSeconds * 1000;\n    }\n  }\n\n  public static parseDateRetryAfterHeader(headerValue: string): number | undefined {\n    try {\n      const now: number = Date.now();\n      const date: number = Date.parse(headerValue);\n      const diff = date - now;\n\n      return Number.isNaN(diff) ? undefined : diff;\n    } catch (error) {\n      return undefined;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ServiceClientCredentials } from \"../credentials/serviceClientCredentials\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport function signingPolicy(\n  authenticationProvider: ServiceClientCredentials\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new SigningPolicy(nextPolicy, options, authenticationProvider);\n    }\n  };\n}\n\nexport class SigningPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    public authenticationProvider: ServiceClientCredentials\n  ) {\n    super(nextPolicy, options);\n  }\n\n  signRequest(request: WebResourceLike): Promise<WebResourceLike> {\n    return this.authenticationProvider.signRequest(request);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this.signRequest(request).then((nextRequest) =>\n      this._nextPolicy.sendRequest(nextRequest)\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyOptions,\n  RequestPolicyFactory\n} from \"./requestPolicy\";\nimport { WebResourceLike } from \"../webResource\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\n\n/**\n * Options for how HTTP connections should be maintained for future\n * requests.\n */\nexport interface KeepAliveOptions {\n  /*\n   * When true, connections will be kept alive for multiple requests.\n   * Defaults to true.\n   */\n  enable: boolean;\n}\n\nexport const DefaultKeepAliveOptions: KeepAliveOptions = {\n  enable: true\n};\n\nexport function keepAlivePolicy(keepAliveOptions?: KeepAliveOptions): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new KeepAlivePolicy(nextPolicy, options, keepAliveOptions || DefaultKeepAliveOptions);\n    }\n  };\n}\n\n/**\n * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n */\nexport class KeepAlivePolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of KeepAlivePolicy.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {KeepAliveOptions} [keepAliveOptions]\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private readonly keepAliveOptions: KeepAliveOptions\n  ) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param {WebResourceLike} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof KeepAlivePolicy\n   */\n  public async sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    request.keepAlive = this.keepAliveOptions.enable;\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n",{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\common\\Logger.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\context\\propagation\\getter.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\context\\propagation\\HttpTextPropagator.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\context\\propagation\\NoopHttpTextPropagator.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\context\\propagation\\setter.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\correlation_context\\CorrelationContext.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\correlation_context\\EntryValue.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\metrics\\BatchObserverResult.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\metrics\\BoundInstrument.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\metrics\\Meter.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\metrics\\MeterProvider.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\metrics\\Metric.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\metrics\\NoopMeter.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\metrics\\NoopMeterProvider.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\metrics\\Observation.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\metrics\\ObserverResult.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\Event.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\instrumentation\\Plugin.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\link_context.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\link.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\trace_flags.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\NoopSpan.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\NoopTracer.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\NoopTracerProvider.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\Sampler.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\SamplingResult.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\span_context.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\span_kind.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\span.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\SpanOptions.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\status.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\TimedEvent.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\tracer_provider.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\trace\\tracer.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\context-base\\0.10.2\\node_modules\\@opentelemetry\\context-base\\src\\types.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\context-base\\0.10.2\\node_modules\\@opentelemetry\\context-base\\src\\context.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\context-base\\0.10.2\\node_modules\\@opentelemetry\\context-base\\src\\NoopContextManager.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\context-base\\0.10.2\\node_modules\\@opentelemetry\\context-base\\src\\index.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\platform\\browser\\globalThis.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\platform\\browser\\index.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\api\\global-utils.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\api\\context.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\api\\trace.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\api\\metrics.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\api\\propagation.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\lichi\\source\\repos\\async_spool_core\\SDK\\js\\common\\temp\\node_modules\\.pnpm\\registry.npmjs.org\\@opentelemetry\\api\\0.10.2\\node_modules\\@opentelemetry\\api\\src\\index.ts"},"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Span, SpanContext, Attributes, Status, TraceFlags } from \"@opentelemetry/api\";\n\n/**\n * A no-op implementation of Span that can safely be used without side-effects.\n */\nexport class NoOpSpan implements Span {\n  /**\n   * Returns the SpanContext associated with this Span.\n   */\n  context(): SpanContext {\n    return {\n      spanId: \"\",\n      traceId: \"\",\n      traceFlags: TraceFlags.NONE\n    };\n  }\n\n  /**\n   * Marks the end of Span execution.\n   * @param _endTime The time to use as the Span's end time. Defaults to\n   * the current time.\n   */\n  end(_endTime?: number): void {\n    /* Noop */\n  }\n\n  /**\n   * Sets an attribute on the Span\n   * @param _key the attribute key\n   * @param _value the attribute value\n   */\n  setAttribute(_key: string, _value: unknown): this {\n    return this;\n  }\n\n  /**\n   * Sets attributes on the Span\n   * @param _attributes the attributes to add\n   */\n  setAttributes(_attributes: Attributes): this {\n    return this;\n  }\n\n  /**\n   * Adds an event to the Span\n   * @param _name The name of the event\n   * @param _attributes The associated attributes to add for this event\n   */\n  addEvent(_name: string, _attributes?: Attributes): this {\n    return this;\n  }\n\n  /**\n   * Sets a status on the span. Overrides the default of CanonicalCode.OK.\n   * @param _status The status to set.\n   */\n  setStatus(_status: Status): this {\n    return this;\n  }\n\n  /**\n   * Updates the name of the Span\n   * @param _name the new Span name\n   */\n  updateName(_name: string): this {\n    return this;\n  }\n\n  /**\n   * Returns whether this span will be recorded\n   */\n  isRecording(): boolean {\n    return false;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { NoOpSpan } from \"./noOpSpan\";\nimport { Tracer, Span, SpanOptions } from \"@opentelemetry/api\";\n\n/**\n * A no-op implementation of Tracer that can be used when tracing\n * is disabled.\n */\nexport class NoOpTracer implements Tracer {\n  /**\n   * Starts a new Span.\n   * @param _name The name of the span.\n   * @param _options The SpanOptions used during Span creation.\n   */\n  startSpan(_name: string, _options?: SpanOptions): Span {\n    return new NoOpSpan();\n  }\n\n  /**\n   * Returns the current Span from the current context, if available.\n   */\n  getCurrentSpan(): Span {\n    return new NoOpSpan();\n  }\n\n  /**\n   * Executes the given function within the context provided by a Span.\n   * @param _span The span that provides the context.\n   * @param fn The function to be executed.\n   */\n  withSpan<T extends (...args: unknown[]) => ReturnType<T>>(_span: Span, fn: T): ReturnType<T> {\n    return fn();\n  }\n\n  /**\n   * Bind a Span as the target's scope\n   * @param target An object to bind the scope.\n   * @param _span A specific Span to use. Otherwise, use the current one.\n   */\n  bind<T>(target: T, _span?: Span): T {\n    return target;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport function getGlobalObject(): any {\n  return self;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Tracer } from \"@opentelemetry/api\";\nimport { getGlobalObject } from \"./global\";\n\n// V1 = OpenTelemetry 0.1\n// V2 = OpenTelemetry 0.2\n// V3 = OpenTelemetry 0.6.1\nconst GLOBAL_TRACER_VERSION = 3;\n// preview5 shipped with @azure/core-tracing.tracerCache\n// and didn't have smart detection for collisions\nconst GLOBAL_TRACER_SYMBOL = Symbol.for(\"@azure/core-tracing.tracerCache2\");\n\nexport interface TracerCache {\n  version: number;\n  tracer?: Tracer;\n}\n\nlet cache: TracerCache;\n\nfunction loadTracerCache(): void {\n  const globalObj = getGlobalObject();\n  const existingCache: TracerCache = globalObj[GLOBAL_TRACER_SYMBOL];\n  let setGlobalCache = true;\n  if (existingCache) {\n    if (existingCache.version === GLOBAL_TRACER_VERSION) {\n      cache = existingCache;\n    } else {\n      setGlobalCache = false;\n      if (existingCache.tracer) {\n        throw new Error(\n          `Two incompatible versions of @azure/core-tracing have been loaded.\n          This library is ${GLOBAL_TRACER_VERSION}, existing is ${existingCache.version}.`\n        );\n      }\n    }\n  }\n\n  if (!cache) {\n    cache = {\n      tracer: undefined,\n      version: GLOBAL_TRACER_VERSION\n    };\n  }\n  if (setGlobalCache) {\n    globalObj[GLOBAL_TRACER_SYMBOL] = cache;\n  }\n}\n\nexport function getCache(): TracerCache {\n  if (!cache) {\n    loadTracerCache();\n  }\n  return cache;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { NoOpTracer } from \"./tracers/noop/noOpTracer\";\nimport { Tracer } from \"@opentelemetry/api\";\nimport { getCache } from \"./utils/cache\";\n\nlet defaultTracer: Tracer;\n\nfunction getDefaultTracer(): Tracer {\n  if (!defaultTracer) {\n    defaultTracer = new NoOpTracer();\n  }\n  return defaultTracer;\n}\n\n/**\n * Sets the global tracer, enabling tracing for the Azure SDK.\n * @param tracer An OpenTelemetry Tracer instance.\n */\nexport function setTracer(tracer: Tracer): void {\n  const cache = getCache();\n  cache.tracer = tracer;\n}\n\n/**\n * Retrieves the active tracer, or returns a\n * no-op implementation if one is not set.\n */\nexport function getTracer(): Tracer {\n  const cache = getCache();\n  if (!cache.tracer) {\n    return getDefaultTracer();\n  }\n  return cache.tracer;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { SpanContext, TraceFlags } from \"../interfaces\";\n\nconst VERSION = \"00\";\n\n/**\n * Generates a `SpanContext` given a `traceparent` header value.\n * @param traceParent Serialized span context data as a `traceparent` header value.\n * @returns The `SpanContext` generated from the `traceparent` value.\n */\nexport function extractSpanContextFromTraceParentHeader(\n  traceParentHeader: string\n): SpanContext | undefined {\n  const parts = traceParentHeader.split(\"-\");\n\n  if (parts.length !== 4) {\n    return;\n  }\n\n  const [version, traceId, spanId, traceOptions] = parts;\n\n  if (version !== VERSION) {\n    return;\n  }\n\n  const traceFlags = parseInt(traceOptions, 16);\n\n  const spanContext: SpanContext = {\n    spanId,\n    traceId,\n    traceFlags\n  };\n\n  return spanContext;\n}\n\n/**\n * Generates a `traceparent` value given a span context.\n * @param spanContext Contains context for a specific span.\n * @returns The `spanContext` represented as a `traceparent` value.\n */\nexport function getTraceParentHeader(spanContext: SpanContext): string | undefined {\n  const missingFields: string[] = [];\n  if (!spanContext.traceId) {\n    missingFields.push(\"traceId\");\n  }\n  if (!spanContext.spanId) {\n    missingFields.push(\"spanId\");\n  }\n\n  if (missingFields.length) {\n    return;\n  }\n\n  const flags = spanContext.traceFlags || TraceFlags.NONE;\n  const hexFlags = flags.toString(16);\n  const traceFlags = hexFlags.length === 1 ? `0${hexFlags}` : hexFlags;\n\n  // https://www.w3.org/TR/trace-context/#traceparent-header-field-values\n  return `${VERSION}-${spanContext.traceId}-${spanContext.spanId}-${traceFlags}`;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { getTracer, getTraceParentHeader } from \"@azure/core-tracing\";\nimport { SpanOptions, SpanKind } from \"@opentelemetry/api\";\nimport {\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions,\n  BaseRequestPolicy\n} from \"./requestPolicy\";\nimport { WebResourceLike } from \"../webResource\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { URLBuilder } from \"../url\";\n\nexport interface TracingPolicyOptions {\n  userAgent?: string;\n}\n\nexport function tracingPolicy(tracingOptions: TracingPolicyOptions = {}): RequestPolicyFactory {\n  return {\n    create(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n      return new TracingPolicy(nextPolicy, options, tracingOptions);\n    }\n  };\n}\n\nexport class TracingPolicy extends BaseRequestPolicy {\n  private userAgent?: string;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    tracingOptions: TracingPolicyOptions\n  ) {\n    super(nextPolicy, options);\n    this.userAgent = tracingOptions.userAgent;\n  }\n\n  public async sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!request.spanOptions || !request.spanOptions.parent) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    // create a new span\n    const tracer = getTracer();\n    const spanOptions: SpanOptions = {\n      ...request.spanOptions,\n      kind: SpanKind.CLIENT\n    };\n    const path = URLBuilder.parse(request.url).getPath() || \"/\";\n    const span = tracer.startSpan(path, spanOptions);\n    span.setAttributes({\n      \"http.method\": request.method,\n      \"http.url\": request.url,\n      requestId: request.requestId\n    });\n\n    if (this.userAgent) {\n      span.setAttribute(\"http.user_agent\", this.userAgent);\n    }\n\n    try {\n      // set headers\n      const spanContext = span.context();\n      const traceParentHeader = getTraceParentHeader(spanContext);\n      if (traceParentHeader) {\n        request.headers.set(\"traceparent\", traceParentHeader);\n        const traceState = spanContext.traceState && spanContext.traceState.serialize();\n        // if tracestate is set, traceparent MUST be set, so only set tracestate after traceparent\n        if (traceState) {\n          request.headers.set(\"tracestate\", traceState);\n        }\n      }\n\n      const response = await this._nextPolicy.sendRequest(request);\n      span.setAttribute(\"http.status_code\", response.status);\n      const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n      if (serviceRequestId) {\n        span.setAttribute(\"serviceRequestId\", serviceRequestId);\n      }\n      span.end();\n      return response;\n    } catch (err) {\n      span.end();\n      throw err;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyOptions,\n  RequestPolicyFactory\n} from \"./requestPolicy\";\nimport { WebResource } from \"../webResource\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\n\nconst DisbleResponseDecompressionNotSupportedInBrowser = new Error(\n  \"DisableResponseDecompressionPolicy is not supported in browser environment\"\n);\n\n/**\n * {@link DisableResponseDecompressionPolicy} is not supported in browser and attempting\n * to use it will results in error being thrown.\n */\nexport function disableResponseDecompressionPolicy(): RequestPolicyFactory {\n  return {\n    create: (_nextPolicy: RequestPolicy, _options: RequestPolicyOptions) => {\n      throw DisbleResponseDecompressionNotSupportedInBrowser;\n    }\n  };\n}\n\nexport class DisableResponseDecompressionPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n    throw DisbleResponseDecompressionNotSupportedInBrowser;\n  }\n\n  public async sendRequest(_request: WebResource): Promise<HttpOperationResponse> {\n    throw DisbleResponseDecompressionNotSupportedInBrowser;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// BaseRequestPolicy has a protected constructor.\n/* eslint-disable @typescript-eslint/no-useless-constructor */\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyOptions,\n  RequestPolicyFactory\n} from \"./requestPolicy\";\nimport { WebResourceLike } from \"../webResource\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\n\nexport function ndJsonPolicy(): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new NdJsonPolicy(nextPolicy, options);\n    }\n  };\n}\n\n/**\n * NdJsonPolicy that formats a JSON array as newline-delimited JSON\n */\nclass NdJsonPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of KeepAlivePolicy.\n   *\n   * @param nextPolicy\n   * @param options\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends a request.\n   *\n   * @param request\n   */\n  public async sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    // There currently isn't a good way to bypass the serializer\n    if (typeof request.body === \"string\" && request.body.startsWith(\"[\")) {\n      const body = JSON.parse(request.body);\n      if (Array.isArray(body)) {\n        request.body = body.map((item) => JSON.stringify(item) + \"\\n\").join(\"\");\n      }\n    }\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { TokenCredential, isTokenCredential } from \"@azure/core-auth\";\nimport { DefaultHttpClient } from \"./defaultHttpClient\";\nimport { HttpClient } from \"./httpClient\";\nimport { HttpOperationResponse, RestResponse } from \"./httpOperationResponse\";\nimport { HttpPipelineLogger } from \"./httpPipelineLogger\";\nimport { logPolicy, LogPolicyOptions } from \"./policies/logPolicy\";\nimport { OperationArguments } from \"./operationArguments\";\nimport {\n  getPathStringFromParameter,\n  getPathStringFromParameterPath,\n  OperationParameter,\n  ParameterPath\n} from \"./operationParameter\";\nimport { isStreamOperation, OperationSpec } from \"./operationSpec\";\nimport {\n  deserializationPolicy,\n  DeserializationContentTypes,\n  DefaultDeserializationOptions\n} from \"./policies/deserializationPolicy\";\nimport { exponentialRetryPolicy, DefaultRetryOptions } from \"./policies/exponentialRetryPolicy\";\nimport { generateClientRequestIdPolicy } from \"./policies/generateClientRequestIdPolicy\";\nimport {\n  userAgentPolicy,\n  getDefaultUserAgentHeaderName,\n  getDefaultUserAgentValue\n} from \"./policies/userAgentPolicy\";\nimport { redirectPolicy, DefaultRedirectOptions } from \"./policies/redirectPolicy\";\nimport {\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./policies/requestPolicy\";\nimport { rpRegistrationPolicy } from \"./policies/rpRegistrationPolicy\";\nimport { bearerTokenAuthenticationPolicy } from \"./policies/bearerTokenAuthenticationPolicy\";\nimport { systemErrorRetryPolicy } from \"./policies/systemErrorRetryPolicy\";\nimport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nimport { CompositeMapper, DictionaryMapper, Mapper, MapperType, Serializer } from \"./serializer\";\nimport { URLBuilder } from \"./url\";\nimport * as utils from \"./util/utils\";\nimport { stringifyXML } from \"./util/xml\";\nimport {\n  RequestOptionsBase,\n  RequestPrepareOptions,\n  WebResource,\n  WebResourceLike,\n  isWebResourceLike\n} from \"./webResource\";\nimport { OperationResponse } from \"./operationResponse\";\nimport { ServiceCallback, isNode } from \"./util/utils\";\nimport { proxyPolicy } from \"./policies/proxyPolicy\";\nimport { throttlingRetryPolicy } from \"./policies/throttlingRetryPolicy\";\nimport { ServiceClientCredentials } from \"./credentials/serviceClientCredentials\";\nimport { signingPolicy } from \"./policies/signingPolicy\";\nimport { logger } from \"./log\";\nimport { InternalPipelineOptions } from \"./pipelineOptions\";\nimport { DefaultKeepAliveOptions, keepAlivePolicy } from \"./policies/keepAlivePolicy\";\nimport { tracingPolicy } from \"./policies/tracingPolicy\";\nimport { disableResponseDecompressionPolicy } from \"./policies/disableResponseDecompressionPolicy\";\nimport { ndJsonPolicy } from \"./policies/ndJsonPolicy\";\nimport { XML_ATTRKEY, SerializerOptions, XML_CHARKEY } from \"./util/serializer.common\";\n\n/**\n * Options to configure a proxy for outgoing requests (Node.js only).\n */\nexport interface ProxySettings {\n  /**\n   * The proxy's host address.\n   */\n  host: string;\n\n  /**\n   * The proxy host's port.\n   */\n  port: number;\n\n  /**\n   * The user name to authenticate with the proxy, if required.\n   */\n  username?: string;\n\n  /**\n   * The password to authenticate with the proxy, if required.\n   */\n  password?: string;\n}\n\nexport type ProxyOptions = ProxySettings; // Alias ProxySettings as ProxyOptions for future use.\n\n/**\n * Options to be provided while creating the client.\n */\nexport interface ServiceClientOptions {\n  /**\n   * An array of factories which get called to create the RequestPolicy pipeline used to send a HTTP\n   * request on the wire, or a function that takes in the defaultRequestPolicyFactories and returns\n   * the requestPolicyFactories that will be used.\n   */\n  requestPolicyFactories?:\n    | RequestPolicyFactory[]\n    | ((defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | RequestPolicyFactory[]);\n  /**\n   * The HttpClient that will be used to send HTTP requests.\n   */\n  httpClient?: HttpClient;\n  /**\n   * The HttpPipelineLogger that can be used to debug RequestPolicies within the HTTP pipeline.\n   */\n  httpPipelineLogger?: HttpPipelineLogger;\n  /**\n   * If set to true, turn off the default retry policy.\n   */\n  noRetryPolicy?: boolean;\n  /**\n   * Gets or sets the retry timeout in seconds for AutomaticRPRegistration. Default value is 30.\n   */\n  rpRegistrationRetryTimeout?: number;\n  /**\n   * Whether or not to generate a client request ID header for each HTTP request.\n   */\n  generateClientRequestIdHeader?: boolean;\n  /**\n   * Whether to include credentials in CORS requests in the browser.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials for more information.\n   */\n  withCredentials?: boolean;\n  /**\n   * If specified, a GenerateRequestIdPolicy will be added to the HTTP pipeline that will add a\n   * header to all outgoing requests with this header name and a random UUID as the request ID.\n   */\n  clientRequestIdHeaderName?: string;\n  /**\n   * The content-types that will be associated with JSON or XML serialization.\n   */\n  deserializationContentTypes?: DeserializationContentTypes;\n  /**\n   * The header name to use for the telemetry header while sending the request. If this is not\n   * specified, then \"User-Agent\" will be used when running on Node.js and \"x-ms-useragent\" will\n   * be used when running in a browser.\n   */\n  userAgentHeaderName?: string | ((defaultUserAgentHeaderName: string) => string);\n  /**\n   * The string to be set to the telemetry header while sending the request, or a function that\n   * takes in the default user-agent string and returns the user-agent string that will be used.\n   */\n  userAgent?: string | ((defaultUserAgent: string) => string);\n  /**\n   * Proxy settings which will be used for every HTTP request (Node.js only).\n   */\n  proxySettings?: ProxySettings;\n}\n\n/**\n * @class\n * Initializes a new instance of the ServiceClient.\n */\nexport class ServiceClient {\n  /**\n   * If specified, this is the base URI that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   */\n  protected baseUri?: string;\n\n  /**\n   * The default request content type for the service.\n   * Used if no requestContentType is present on an OperationSpec.\n   */\n  protected requestContentType?: string;\n\n  /**\n   * The HTTP client that will be used to send requests.\n   */\n  private readonly _httpClient: HttpClient;\n  private readonly _requestPolicyOptions: RequestPolicyOptions;\n\n  private readonly _requestPolicyFactories: RequestPolicyFactory[];\n  private readonly _withCredentials: boolean;\n\n  /**\n   * The ServiceClient constructor\n   * @constructor\n   * @param credentials The credentials used for authentication with the service.\n   * @param options The service client options that govern the behavior of the client.\n   */\n  constructor(\n    credentials?: TokenCredential | ServiceClientCredentials,\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options?: ServiceClientOptions\n  ) {\n    if (!options) {\n      options = {};\n    }\n\n    this._withCredentials = options.withCredentials || false;\n    this._httpClient = options.httpClient || new DefaultHttpClient();\n    this._requestPolicyOptions = new RequestPolicyOptions(options.httpPipelineLogger);\n\n    let requestPolicyFactories: RequestPolicyFactory[];\n    if (Array.isArray(options.requestPolicyFactories)) {\n      logger.info(\"ServiceClient: using custom request policies\");\n      requestPolicyFactories = options.requestPolicyFactories;\n    } else {\n      let authPolicyFactory: RequestPolicyFactory | undefined = undefined;\n      if (isTokenCredential(credentials)) {\n        logger.info(\n          \"ServiceClient: creating bearer token authentication policy from provided credentials\"\n        );\n        // Create a wrapped RequestPolicyFactory here so that we can provide the\n        // correct scope to the BearerTokenAuthenticationPolicy at the first time\n        // one is requested.  This is needed because generated ServiceClient\n        // implementations do not set baseUri until after ServiceClient's constructor\n        // is finished, leaving baseUri empty at the time when it is needed to\n        // build the correct scope name.\n        const wrappedPolicyFactory: () => RequestPolicyFactory = () => {\n          let bearerTokenPolicyFactory: RequestPolicyFactory | undefined = undefined;\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const serviceClient = this;\n          return {\n            create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): RequestPolicy {\n              if (bearerTokenPolicyFactory === undefined || bearerTokenPolicyFactory === null) {\n                bearerTokenPolicyFactory = bearerTokenAuthenticationPolicy(\n                  credentials,\n                  `${serviceClient.baseUri || \"\"}/.default`\n                );\n              }\n\n              return bearerTokenPolicyFactory.create(nextPolicy, options);\n            }\n          };\n        };\n\n        authPolicyFactory = wrappedPolicyFactory();\n      } else if (credentials && typeof credentials.signRequest === \"function\") {\n        logger.info(\"ServiceClient: creating signing policy from provided credentials\");\n        authPolicyFactory = signingPolicy(credentials);\n      } else if (credentials !== undefined && credentials !== null) {\n        throw new Error(\"The credentials argument must implement the TokenCredential interface\");\n      }\n\n      logger.info(\"ServiceClient: using default request policies\");\n      requestPolicyFactories = createDefaultRequestPolicyFactories(authPolicyFactory, options);\n      if (options.requestPolicyFactories) {\n        // options.requestPolicyFactories can also be a function that manipulates\n        // the default requestPolicyFactories array\n        const newRequestPolicyFactories:\n          | void\n          | RequestPolicyFactory[] = options.requestPolicyFactories(requestPolicyFactories);\n        if (newRequestPolicyFactories) {\n          requestPolicyFactories = newRequestPolicyFactories;\n        }\n      }\n    }\n    this._requestPolicyFactories = requestPolicyFactories;\n  }\n\n  /**\n   * Send the provided httpRequest.\n   */\n  sendRequest(options: RequestPrepareOptions | WebResourceLike): Promise<HttpOperationResponse> {\n    if (options === null || options === undefined || typeof options !== \"object\") {\n      throw new Error(\"options cannot be null or undefined and it must be of type object.\");\n    }\n\n    let httpRequest: WebResourceLike;\n    try {\n      if (isWebResourceLike(options)) {\n        options.validateRequestProperties();\n        httpRequest = options;\n      } else {\n        httpRequest = new WebResource();\n        httpRequest = httpRequest.prepare(options);\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    let httpPipeline: RequestPolicy = this._httpClient;\n    if (this._requestPolicyFactories && this._requestPolicyFactories.length > 0) {\n      for (let i = this._requestPolicyFactories.length - 1; i >= 0; --i) {\n        httpPipeline = this._requestPolicyFactories[i].create(\n          httpPipeline,\n          this._requestPolicyOptions\n        );\n      }\n    }\n    return httpPipeline.sendRequest(httpRequest);\n  }\n\n  /**\n   * Send an HTTP request that is populated using the provided OperationSpec.\n   * @param {OperationArguments} operationArguments The arguments that the HTTP request's templated values will be populated from.\n   * @param {OperationSpec} operationSpec The OperationSpec to use to populate the httpRequest.\n   * @param {ServiceCallback} callback The callback to call when the response is received.\n   */\n  async sendOperationRequest(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n    callback?: ServiceCallback<any>\n  ): Promise<RestResponse> {\n    if (typeof operationArguments.options === \"function\") {\n      callback = operationArguments.options;\n      operationArguments.options = undefined;\n    }\n\n    const serializerOptions = operationArguments.options?.serializerOptions;\n    const httpRequest: WebResourceLike = new WebResource();\n\n    let result: Promise<RestResponse>;\n    try {\n      const baseUri: string | undefined = operationSpec.baseUrl || this.baseUri;\n      if (!baseUri) {\n        throw new Error(\n          \"If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.\"\n        );\n      }\n\n      httpRequest.method = operationSpec.httpMethod;\n      httpRequest.operationSpec = operationSpec;\n\n      const requestUrl: URLBuilder = URLBuilder.parse(baseUri);\n      if (operationSpec.path) {\n        requestUrl.appendPath(operationSpec.path);\n      }\n      if (operationSpec.urlParameters && operationSpec.urlParameters.length > 0) {\n        for (const urlParameter of operationSpec.urlParameters) {\n          let urlParameterValue: string = getOperationArgumentValueFromParameter(\n            this,\n            operationArguments,\n            urlParameter,\n            operationSpec.serializer\n          );\n          urlParameterValue = operationSpec.serializer.serialize(\n            urlParameter.mapper,\n            urlParameterValue,\n            getPathStringFromParameter(urlParameter),\n            serializerOptions\n          );\n          if (!urlParameter.skipEncoding) {\n            urlParameterValue = encodeURIComponent(urlParameterValue);\n          }\n          requestUrl.replaceAll(\n            `{${urlParameter.mapper.serializedName || getPathStringFromParameter(urlParameter)}}`,\n            urlParameterValue\n          );\n        }\n      }\n      if (operationSpec.queryParameters && operationSpec.queryParameters.length > 0) {\n        for (const queryParameter of operationSpec.queryParameters) {\n          let queryParameterValue: any = getOperationArgumentValueFromParameter(\n            this,\n            operationArguments,\n            queryParameter,\n            operationSpec.serializer\n          );\n          if (queryParameterValue !== undefined && queryParameterValue !== null) {\n            queryParameterValue = operationSpec.serializer.serialize(\n              queryParameter.mapper,\n              queryParameterValue,\n              getPathStringFromParameter(queryParameter),\n              serializerOptions\n            );\n            if (\n              queryParameter.collectionFormat !== undefined &&\n              queryParameter.collectionFormat !== null\n            ) {\n              if (queryParameter.collectionFormat === QueryCollectionFormat.Multi) {\n                if (queryParameterValue.length === 0) {\n                  // The collection is empty, no need to try serializing the current queryParam\n                  continue;\n                } else {\n                  for (const index in queryParameterValue) {\n                    const item = queryParameterValue[index];\n                    queryParameterValue[index] =\n                      item === undefined || item === null ? \"\" : item.toString();\n                  }\n                }\n              } else if (\n                queryParameter.collectionFormat === QueryCollectionFormat.Ssv ||\n                queryParameter.collectionFormat === QueryCollectionFormat.Tsv\n              ) {\n                queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n              }\n            }\n            if (!queryParameter.skipEncoding) {\n              if (Array.isArray(queryParameterValue)) {\n                for (const index in queryParameterValue) {\n                  if (\n                    queryParameterValue[index] !== undefined &&\n                    queryParameterValue[index] !== null\n                  ) {\n                    queryParameterValue[index] = encodeURIComponent(queryParameterValue[index]);\n                  }\n                }\n              } else {\n                queryParameterValue = encodeURIComponent(queryParameterValue);\n              }\n            }\n            if (\n              queryParameter.collectionFormat !== undefined &&\n              queryParameter.collectionFormat !== null &&\n              queryParameter.collectionFormat !== QueryCollectionFormat.Multi &&\n              queryParameter.collectionFormat !== QueryCollectionFormat.Ssv &&\n              queryParameter.collectionFormat !== QueryCollectionFormat.Tsv\n            ) {\n              queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n            }\n            requestUrl.setQueryParameter(\n              queryParameter.mapper.serializedName || getPathStringFromParameter(queryParameter),\n              queryParameterValue\n            );\n          }\n        }\n      }\n      httpRequest.url = requestUrl.toString();\n\n      const contentType = operationSpec.contentType || this.requestContentType;\n      if (contentType) {\n        httpRequest.headers.set(\"Content-Type\", contentType);\n      }\n\n      if (operationSpec.headerParameters) {\n        for (const headerParameter of operationSpec.headerParameters) {\n          let headerValue: any = getOperationArgumentValueFromParameter(\n            this,\n            operationArguments,\n            headerParameter,\n            operationSpec.serializer\n          );\n          if (headerValue !== undefined && headerValue !== null) {\n            headerValue = operationSpec.serializer.serialize(\n              headerParameter.mapper,\n              headerValue,\n              getPathStringFromParameter(headerParameter),\n              serializerOptions\n            );\n            const headerCollectionPrefix = (headerParameter.mapper as DictionaryMapper)\n              .headerCollectionPrefix;\n            if (headerCollectionPrefix) {\n              for (const key of Object.keys(headerValue)) {\n                httpRequest.headers.set(headerCollectionPrefix + key, headerValue[key]);\n              }\n            } else {\n              httpRequest.headers.set(\n                headerParameter.mapper.serializedName ||\n                  getPathStringFromParameter(headerParameter),\n                headerValue\n              );\n            }\n          }\n        }\n      }\n\n      const options: RequestOptionsBase | undefined = operationArguments.options;\n      if (options) {\n        if (options.customHeaders) {\n          for (const customHeaderName in options.customHeaders) {\n            httpRequest.headers.set(customHeaderName, options.customHeaders[customHeaderName]);\n          }\n        }\n\n        if (options.abortSignal) {\n          httpRequest.abortSignal = options.abortSignal;\n        }\n\n        if (options.timeout) {\n          httpRequest.timeout = options.timeout;\n        }\n\n        if (options.onUploadProgress) {\n          httpRequest.onUploadProgress = options.onUploadProgress;\n        }\n\n        if (options.onDownloadProgress) {\n          httpRequest.onDownloadProgress = options.onDownloadProgress;\n        }\n\n        if (options.spanOptions) {\n          httpRequest.spanOptions = options.spanOptions;\n        }\n\n        if (options.shouldDeserialize !== undefined && options.shouldDeserialize !== null) {\n          httpRequest.shouldDeserialize = options.shouldDeserialize;\n        }\n      }\n\n      httpRequest.withCredentials = this._withCredentials;\n\n      serializeRequestBody(this, httpRequest, operationArguments, operationSpec);\n\n      if (httpRequest.streamResponseBody === undefined || httpRequest.streamResponseBody === null) {\n        httpRequest.streamResponseBody = isStreamOperation(operationSpec);\n      }\n\n      let rawResponse: HttpOperationResponse;\n      let sendRequestError;\n      try {\n        rawResponse = await this.sendRequest(httpRequest);\n      } catch (error) {\n        sendRequestError = error;\n      }\n      if (sendRequestError) {\n        if (sendRequestError.response) {\n          sendRequestError.details = flattenResponse(\n            sendRequestError.response,\n            operationSpec.responses[sendRequestError.statusCode] ||\n              operationSpec.responses[\"default\"]\n          );\n        }\n        result = Promise.reject(sendRequestError);\n      } else {\n        result = Promise.resolve(\n          flattenResponse(rawResponse!, operationSpec.responses[rawResponse!.status])\n        );\n      }\n    } catch (error) {\n      result = Promise.reject(error);\n    }\n\n    const cb = callback;\n    if (cb) {\n      result\n        // tslint:disable-next-line:no-null-keyword\n        .then((res) => cb(null, res._response.parsedBody, res._response.request, res._response))\n        .catch((err) => cb(err));\n    }\n\n    return result;\n  }\n}\n\nexport function serializeRequestBody(\n  serviceClient: ServiceClient,\n  httpRequest: WebResourceLike,\n  operationArguments: OperationArguments,\n  operationSpec: OperationSpec\n): void {\n  const serializerOptions = operationArguments.options?.serializerOptions ?? {};\n  const updatedOptions: Required<SerializerOptions> = {\n    rootName: serializerOptions.rootName ?? \"\",\n    includeRoot: serializerOptions.includeRoot ?? false,\n    xmlCharKey: serializerOptions.xmlCharKey ?? XML_CHARKEY\n  };\n\n  const xmlCharKey = serializerOptions.xmlCharKey;\n  if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n    httpRequest.body = getOperationArgumentValueFromParameter(\n      serviceClient,\n      operationArguments,\n      operationSpec.requestBody,\n      operationSpec.serializer\n    );\n\n    const bodyMapper = operationSpec.requestBody.mapper;\n    const {\n      required,\n      xmlName,\n      xmlElementName,\n      serializedName,\n      xmlNamespace,\n      xmlNamespacePrefix\n    } = bodyMapper;\n    const typeName = bodyMapper.type.name;\n\n    try {\n      if ((httpRequest.body !== undefined && httpRequest.body !== null) || required) {\n        const requestBodyParameterPathString: string = getPathStringFromParameter(\n          operationSpec.requestBody\n        );\n        httpRequest.body = operationSpec.serializer.serialize(\n          bodyMapper,\n          httpRequest.body,\n          requestBodyParameterPathString,\n          updatedOptions\n        );\n\n        const isStream = typeName === MapperType.Stream;\n\n        if (operationSpec.isXML) {\n          const xmlnsKey = xmlNamespacePrefix ? `xmlns:${xmlNamespacePrefix}` : \"xmlns\";\n          const value = getXmlValueWithNamespace(\n            xmlNamespace,\n            xmlnsKey,\n            typeName,\n            httpRequest.body,\n            updatedOptions\n          );\n          if (typeName === MapperType.Sequence) {\n            httpRequest.body = stringifyXML(\n              utils.prepareXMLRootList(\n                value,\n                xmlElementName || xmlName || serializedName!,\n                xmlnsKey,\n                xmlNamespace\n              ),\n              {\n                rootName: xmlName || serializedName,\n                xmlCharKey\n              }\n            );\n          } else if (!isStream) {\n            httpRequest.body = stringifyXML(value, {\n              rootName: xmlName || serializedName,\n              xmlCharKey\n            });\n          }\n        } else if (\n          typeName === MapperType.String &&\n          (operationSpec.contentType?.match(\"text/plain\") || operationSpec.mediaType === \"text\")\n        ) {\n          // the String serializer has validated that request body is a string\n          // so just send the string.\n          return;\n        } else if (!isStream) {\n          httpRequest.body = JSON.stringify(httpRequest.body);\n        }\n      }\n    } catch (error) {\n      throw new Error(\n        `Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(\n          serializedName,\n          undefined,\n          \"  \"\n        )}.`\n      );\n    }\n  } else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n    httpRequest.formData = {};\n    for (const formDataParameter of operationSpec.formDataParameters) {\n      const formDataParameterValue: any = getOperationArgumentValueFromParameter(\n        serviceClient,\n        operationArguments,\n        formDataParameter,\n        operationSpec.serializer\n      );\n      if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n        const formDataParameterPropertyName: string =\n          formDataParameter.mapper.serializedName || getPathStringFromParameter(formDataParameter);\n        httpRequest.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(\n          formDataParameter.mapper,\n          formDataParameterValue,\n          getPathStringFromParameter(formDataParameter),\n          updatedOptions\n        );\n      }\n    }\n  }\n}\n\n/**\n * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself\n */\nfunction getXmlValueWithNamespace(\n  xmlNamespace: string | undefined,\n  xmlnsKey: string,\n  typeName: string,\n  serializedValue: any,\n  options: Required<SerializerOptions>\n): any {\n  // Composite and Sequence schemas already got their root namespace set during serialization\n  // We just need to add xmlns to the other schema types\n  if (xmlNamespace && ![\"Composite\", \"Sequence\", \"Dictionary\"].includes(typeName)) {\n    const result: any = {};\n    result[options.xmlCharKey] = serializedValue;\n    result[XML_ATTRKEY] = { [xmlnsKey]: xmlNamespace };\n    return result;\n  }\n\n  return serializedValue;\n}\n\nfunction getValueOrFunctionResult(\n  value: undefined | string | ((defaultValue: string) => string),\n  defaultValueCreator: () => string\n): string {\n  let result: string;\n  if (typeof value === \"string\") {\n    result = value;\n  } else {\n    result = defaultValueCreator();\n    if (typeof value === \"function\") {\n      result = value(result);\n    }\n  }\n  return result;\n}\n\nfunction createDefaultRequestPolicyFactories(\n  authPolicyFactory: RequestPolicyFactory | undefined,\n  options: ServiceClientOptions\n): RequestPolicyFactory[] {\n  const factories: RequestPolicyFactory[] = [];\n\n  if (options.generateClientRequestIdHeader) {\n    factories.push(generateClientRequestIdPolicy(options.clientRequestIdHeaderName));\n  }\n\n  if (authPolicyFactory) {\n    factories.push(authPolicyFactory);\n  }\n\n  const userAgentHeaderName: string = getValueOrFunctionResult(\n    options.userAgentHeaderName,\n    getDefaultUserAgentHeaderName\n  );\n  const userAgentHeaderValue: string = getValueOrFunctionResult(\n    options.userAgent,\n    getDefaultUserAgentValue\n  );\n  if (userAgentHeaderName && userAgentHeaderValue) {\n    factories.push(userAgentPolicy({ key: userAgentHeaderName, value: userAgentHeaderValue }));\n  }\n  factories.push(redirectPolicy());\n  factories.push(rpRegistrationPolicy(options.rpRegistrationRetryTimeout));\n\n  if (!options.noRetryPolicy) {\n    factories.push(exponentialRetryPolicy());\n    factories.push(systemErrorRetryPolicy());\n    factories.push(throttlingRetryPolicy());\n  }\n\n  factories.push(deserializationPolicy(options.deserializationContentTypes));\n\n  if (isNode) {\n    factories.push(proxyPolicy(options.proxySettings));\n  }\n\n  factories.push(logPolicy({ logger: logger.info }));\n\n  return factories;\n}\n\nexport function createPipelineFromOptions(\n  pipelineOptions: InternalPipelineOptions,\n  authPolicyFactory?: RequestPolicyFactory\n): ServiceClientOptions {\n  const requestPolicyFactories: RequestPolicyFactory[] = [];\n\n  if (pipelineOptions.sendStreamingJson) {\n    requestPolicyFactories.push(ndJsonPolicy());\n  }\n\n  let userAgentValue = undefined;\n  if (pipelineOptions.userAgentOptions && pipelineOptions.userAgentOptions.userAgentPrefix) {\n    const userAgentInfo: string[] = [];\n    userAgentInfo.push(pipelineOptions.userAgentOptions.userAgentPrefix);\n\n    // Add the default user agent value if it isn't already specified\n    // by the userAgentPrefix option.\n    const defaultUserAgentInfo = getDefaultUserAgentValue();\n    if (userAgentInfo.indexOf(defaultUserAgentInfo) === -1) {\n      userAgentInfo.push(defaultUserAgentInfo);\n    }\n\n    userAgentValue = userAgentInfo.join(\" \");\n  }\n\n  const keepAliveOptions = {\n    ...DefaultKeepAliveOptions,\n    ...pipelineOptions.keepAliveOptions\n  };\n\n  const retryOptions = {\n    ...DefaultRetryOptions,\n    ...pipelineOptions.retryOptions\n  };\n\n  const redirectOptions = {\n    ...DefaultRedirectOptions,\n    ...pipelineOptions.redirectOptions\n  };\n\n  if (isNode) {\n    requestPolicyFactories.push(proxyPolicy(pipelineOptions.proxyOptions));\n  }\n\n  const deserializationOptions = {\n    ...DefaultDeserializationOptions,\n    ...pipelineOptions.deserializationOptions\n  };\n\n  const loggingOptions: LogPolicyOptions = {\n    ...pipelineOptions.loggingOptions\n  };\n\n  requestPolicyFactories.push(\n    tracingPolicy({ userAgent: userAgentValue }),\n    keepAlivePolicy(keepAliveOptions),\n    userAgentPolicy({ value: userAgentValue }),\n    generateClientRequestIdPolicy(),\n    deserializationPolicy(deserializationOptions.expectedContentTypes),\n    throttlingRetryPolicy(),\n    systemErrorRetryPolicy(),\n    exponentialRetryPolicy(\n      retryOptions.maxRetries,\n      retryOptions.retryDelayInMs,\n      retryOptions.maxRetryDelayInMs\n    )\n  );\n\n  if (redirectOptions.handleRedirects) {\n    requestPolicyFactories.push(redirectPolicy(redirectOptions.maxRetries));\n  }\n\n  if (authPolicyFactory) {\n    requestPolicyFactories.push(authPolicyFactory);\n  }\n\n  requestPolicyFactories.push(logPolicy(loggingOptions));\n\n  if (isNode && pipelineOptions.decompressResponse === false) {\n    requestPolicyFactories.push(disableResponseDecompressionPolicy());\n  }\n\n  return {\n    httpClient: pipelineOptions.httpClient,\n    requestPolicyFactories\n  };\n}\n\nexport type PropertyParent = { [propertyName: string]: any };\n\n/**\n * Get the property parent for the property at the provided path when starting with the provided\n * parent object.\n */\nexport function getPropertyParent(parent: PropertyParent, propertyPath: string[]): PropertyParent {\n  if (parent && propertyPath) {\n    const propertyPathLength: number = propertyPath.length;\n    for (let i = 0; i < propertyPathLength - 1; ++i) {\n      const propertyName: string = propertyPath[i];\n      if (!parent[propertyName]) {\n        parent[propertyName] = {};\n      }\n      parent = parent[propertyName];\n    }\n  }\n  return parent;\n}\n\nfunction getOperationArgumentValueFromParameter(\n  serviceClient: ServiceClient,\n  operationArguments: OperationArguments,\n  parameter: OperationParameter,\n  serializer: Serializer\n): any {\n  return getOperationArgumentValueFromParameterPath(\n    serviceClient,\n    operationArguments,\n    parameter.parameterPath,\n    parameter.mapper,\n    serializer\n  );\n}\n\nexport function getOperationArgumentValueFromParameterPath(\n  serviceClient: ServiceClient,\n  operationArguments: OperationArguments,\n  parameterPath: ParameterPath,\n  parameterMapper: Mapper,\n  serializer: Serializer\n): any {\n  let value: any;\n  if (typeof parameterPath === \"string\") {\n    parameterPath = [parameterPath];\n  }\n  const serializerOptions = operationArguments.options?.serializerOptions;\n  if (Array.isArray(parameterPath)) {\n    if (parameterPath.length > 0) {\n      if (parameterMapper.isConstant) {\n        value = parameterMapper.defaultValue;\n      } else {\n        let propertySearchResult: PropertySearchResult = getPropertyFromParameterPath(\n          operationArguments,\n          parameterPath\n        );\n        if (!propertySearchResult.propertyFound) {\n          propertySearchResult = getPropertyFromParameterPath(serviceClient, parameterPath);\n        }\n\n        let useDefaultValue = false;\n        if (!propertySearchResult.propertyFound) {\n          useDefaultValue =\n            parameterMapper.required ||\n            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n        }\n        value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n      }\n\n      // Serialize just for validation purposes.\n      const parameterPathString: string = getPathStringFromParameterPath(\n        parameterPath,\n        parameterMapper\n      );\n      serializer.serialize(parameterMapper, value, parameterPathString, serializerOptions);\n    }\n  } else {\n    if (parameterMapper.required) {\n      value = {};\n    }\n\n    for (const propertyName in parameterPath) {\n      const propertyMapper: Mapper = (parameterMapper as CompositeMapper).type.modelProperties![\n        propertyName\n      ];\n      const propertyPath: ParameterPath = parameterPath[propertyName];\n      const propertyValue: any = getOperationArgumentValueFromParameterPath(\n        serviceClient,\n        operationArguments,\n        propertyPath,\n        propertyMapper,\n        serializer\n      );\n      // Serialize just for validation purposes.\n      const propertyPathString: string = getPathStringFromParameterPath(\n        propertyPath,\n        propertyMapper\n      );\n      serializer.serialize(propertyMapper, propertyValue, propertyPathString, serializerOptions);\n      if (propertyValue !== undefined && propertyValue !== null) {\n        if (!value) {\n          value = {};\n        }\n        value[propertyName] = propertyValue;\n      }\n    }\n  }\n  return value;\n}\n\ninterface PropertySearchResult {\n  propertyValue?: any;\n  propertyFound: boolean;\n}\n\nfunction getPropertyFromParameterPath(\n  parent: { [parameterName: string]: any },\n  parameterPath: string[]\n): PropertySearchResult {\n  const result: PropertySearchResult = { propertyFound: false };\n  let i = 0;\n  for (; i < parameterPath.length; ++i) {\n    const parameterPathPart: string = parameterPath[i];\n    // Make sure to check inherited properties too, so don't use hasOwnProperty().\n    if (parent !== undefined && parent !== null && parameterPathPart in parent) {\n      parent = parent[parameterPathPart];\n    } else {\n      break;\n    }\n  }\n  if (i === parameterPath.length) {\n    result.propertyValue = parent;\n    result.propertyFound = true;\n  }\n  return result;\n}\n\nexport function flattenResponse(\n  _response: HttpOperationResponse,\n  responseSpec: OperationResponse | undefined\n): RestResponse {\n  const parsedHeaders = _response.parsedHeaders;\n  const bodyMapper = responseSpec && responseSpec.bodyMapper;\n\n  const addOperationResponse = (obj: {}): {\n    _response: HttpOperationResponse;\n  } => {\n    return Object.defineProperty(obj, \"_response\", {\n      value: _response\n    });\n  };\n\n  if (bodyMapper) {\n    const typeName = bodyMapper.type.name;\n    if (typeName === \"Stream\") {\n      return addOperationResponse({\n        ...parsedHeaders,\n        blobBody: _response.blobBody,\n        readableStreamBody: _response.readableStreamBody\n      });\n    }\n\n    const modelProperties =\n      (typeName === \"Composite\" && (bodyMapper as CompositeMapper).type.modelProperties) || {};\n    const isPageableResponse = Object.keys(modelProperties).some(\n      (k) => modelProperties[k].serializedName === \"\"\n    );\n    if (typeName === \"Sequence\" || isPageableResponse) {\n      const arrayResponse = [...(_response.parsedBody || [])] as RestResponse & any[];\n\n      for (const key of Object.keys(modelProperties)) {\n        if (modelProperties[key].serializedName) {\n          arrayResponse[key] = _response.parsedBody[key];\n        }\n      }\n\n      if (parsedHeaders) {\n        for (const key of Object.keys(parsedHeaders)) {\n          arrayResponse[key] = parsedHeaders[key];\n        }\n      }\n      addOperationResponse(arrayResponse);\n      return arrayResponse;\n    }\n\n    if (typeName === \"Composite\" || typeName === \"Dictionary\") {\n      return addOperationResponse({\n        ...parsedHeaders,\n        ..._response.parsedBody\n      });\n    }\n  }\n\n  if (\n    bodyMapper ||\n    _response.request.method === \"HEAD\" ||\n    utils.isPrimitiveType(_response.parsedBody)\n  ) {\n    // primitive body types and HEAD booleans\n    return addOperationResponse({\n      ...parsedHeaders,\n      body: _response.parsedBody\n    });\n  }\n\n  return addOperationResponse({\n    ...parsedHeaders,\n    ..._response.parsedBody\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpHeaders } from \"../httpHeaders\";\nimport * as base64 from \"../util/base64\";\nimport { Constants } from \"../util/constants\";\nimport { WebResourceLike } from \"../webResource\";\nimport { ServiceClientCredentials } from \"./serviceClientCredentials\";\nconst HeaderConstants = Constants.HeaderConstants;\nconst DEFAULT_AUTHORIZATION_SCHEME = \"Basic\";\n\nexport class BasicAuthenticationCredentials implements ServiceClientCredentials {\n  userName: string;\n  password: string;\n  authorizationScheme: string = DEFAULT_AUTHORIZATION_SCHEME;\n\n  /**\n   * Creates a new BasicAuthenticationCredentials object.\n   *\n   * @constructor\n   * @param {string} userName User name.\n   * @param {string} password Password.\n   * @param {string} [authorizationScheme] The authorization scheme.\n   */\n  constructor(\n    userName: string,\n    password: string,\n    authorizationScheme: string = DEFAULT_AUTHORIZATION_SCHEME\n  ) {\n    if (userName === null || userName === undefined || typeof userName.valueOf() !== \"string\") {\n      throw new Error(\"userName cannot be null or undefined and must be of type string.\");\n    }\n    if (password === null || password === undefined || typeof password.valueOf() !== \"string\") {\n      throw new Error(\"password cannot be null or undefined and must be of type string.\");\n    }\n    this.userName = userName;\n    this.password = password;\n    this.authorizationScheme = authorizationScheme;\n  }\n\n  /**\n   * Signs a request with the Authentication header.\n   *\n   * @param {WebResourceLike} webResource The WebResourceLike to be signed.\n   * @returns {Promise<WebResourceLike>} The signed request object.\n   */\n  signRequest(webResource: WebResourceLike): Promise<WebResourceLike> {\n    const credentials = `${this.userName}:${this.password}`;\n    const encodedCredentials = `${this.authorizationScheme} ${base64.encodeString(credentials)}`;\n    if (!webResource.headers) webResource.headers = new HttpHeaders();\n    webResource.headers.set(HeaderConstants.AUTHORIZATION, encodedCredentials);\n    return Promise.resolve(webResource);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpHeaders } from \"../httpHeaders\";\nimport { WebResourceLike } from \"../webResource\";\nimport { ServiceClientCredentials } from \"./serviceClientCredentials\";\n\n/**\n * @interface ApiKeyCredentialOptions\n * Describes the options to be provided while creating an instance of ApiKeyCredentials\n */\nexport interface ApiKeyCredentialOptions {\n  /**\n   * A key value pair of the header parameters that need to be applied to the request.\n   */\n  inHeader?: { [x: string]: any };\n  /**\n   * A key value pair of the query parameters that need to be applied to the request.\n   */\n  inQuery?: { [x: string]: any };\n}\n\n/**\n * Authenticates to a service using an API key.\n */\nexport class ApiKeyCredentials implements ServiceClientCredentials {\n  /**\n   * A key value pair of the header parameters that need to be applied to the request.\n   */\n  private readonly inHeader?: { [x: string]: any };\n  /**\n   * A key value pair of the query parameters that need to be applied to the request.\n   */\n  private readonly inQuery?: { [x: string]: any };\n\n  /**\n   * @constructor\n   * @param {object} options   Specifies the options to be provided for auth. Either header or query needs to be provided.\n   */\n  constructor(options: ApiKeyCredentialOptions) {\n    if (!options || (options && !options.inHeader && !options.inQuery)) {\n      throw new Error(\n        `options cannot be null or undefined. Either \"inHeader\" or \"inQuery\" property of the options object needs to be provided.`\n      );\n    }\n    this.inHeader = options.inHeader;\n    this.inQuery = options.inQuery;\n  }\n\n  /**\n   * Signs a request with the values provided in the inHeader and inQuery parameter.\n   *\n   * @param {WebResourceLike} webResource The WebResourceLike to be signed.\n   * @returns {Promise<WebResourceLike>} The signed request object.\n   */\n  signRequest(webResource: WebResourceLike): Promise<WebResourceLike> {\n    if (!webResource) {\n      return Promise.reject(\n        new Error(`webResource cannot be null or undefined and must be of type \"object\".`)\n      );\n    }\n\n    if (this.inHeader) {\n      if (!webResource.headers) {\n        webResource.headers = new HttpHeaders();\n      }\n      for (const headerName in this.inHeader) {\n        webResource.headers.set(headerName, this.inHeader[headerName]);\n      }\n    }\n\n    if (this.inQuery) {\n      if (!webResource.url) {\n        return Promise.reject(new Error(`url cannot be null in the request object.`));\n      }\n      if (webResource.url.indexOf(\"?\") < 0) {\n        webResource.url += \"?\";\n      }\n      for (const key in this.inQuery) {\n        if (!webResource.url.endsWith(\"?\")) {\n          webResource.url += \"&\";\n        }\n        webResource.url += `${key}=${this.inQuery[key]}`;\n      }\n    }\n\n    return Promise.resolve(webResource);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ApiKeyCredentials, ApiKeyCredentialOptions } from \"./apiKeyCredentials\";\n\nexport class TopicCredentials extends ApiKeyCredentials {\n  /**\n   * Creates a new EventGrid TopicCredentials object.\n   *\n   * @constructor\n   * @param {string} topicKey   The EventGrid topic key\n   */\n  constructor(topicKey: string) {\n    if (!topicKey || (topicKey && typeof topicKey !== \"string\")) {\n      throw new Error(\"topicKey cannot be null or undefined and must be of type string.\");\n    }\n    const options: ApiKeyCredentialOptions = {\n      inHeader: {\n        \"aeg-sas-key\": topicKey\n      }\n    };\n    super(options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/* eslint-disable-next-line @typescript-eslint/triple-slash-reference */\n/// <reference path=\"../dom-shim.d.ts\" />\n\nexport {\n  WebResource,\n  WebResourceLike,\n  HttpRequestBody,\n  RequestPrepareOptions,\n  HttpMethods,\n  ParameterValue,\n  RequestOptionsBase,\n  TransferProgressEvent\n} from \"./webResource\";\nexport { DefaultHttpClient } from \"./defaultHttpClient\";\nexport { HttpClient } from \"./httpClient\";\nexport { HttpHeader, HttpHeaders, HttpHeadersLike, RawHttpHeaders } from \"./httpHeaders\";\nexport { HttpOperationResponse, HttpResponse, RestResponse } from \"./httpOperationResponse\";\nexport { HttpPipelineLogger } from \"./httpPipelineLogger\";\nexport { HttpPipelineLogLevel } from \"./httpPipelineLogLevel\";\nexport { RestError } from \"./restError\";\nexport { OperationArguments } from \"./operationArguments\";\nexport {\n  OperationOptions,\n  OperationRequestOptions,\n  operationOptionsToRequestOptionsBase\n} from \"./operationOptions\";\nexport {\n  OperationParameter,\n  OperationQueryParameter,\n  OperationURLParameter,\n  ParameterPath\n} from \"./operationParameter\";\nexport { OperationResponse } from \"./operationResponse\";\nexport { OperationSpec } from \"./operationSpec\";\nexport {\n  ServiceClient,\n  ServiceClientOptions,\n  flattenResponse,\n  createPipelineFromOptions,\n  ProxySettings,\n  ProxyOptions\n} from \"./serviceClient\";\nexport { PipelineOptions, InternalPipelineOptions } from \"./pipelineOptions\";\nexport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nexport { Constants } from \"./util/constants\";\nexport { bearerTokenAuthenticationPolicy } from \"./policies/bearerTokenAuthenticationPolicy\";\nexport { LogPolicyOptions, logPolicy } from \"./policies/logPolicy\";\nexport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  RequestPolicyOptionsLike\n} from \"./policies/requestPolicy\";\nexport { generateClientRequestIdPolicy } from \"./policies/generateClientRequestIdPolicy\";\nexport { exponentialRetryPolicy, RetryOptions, RetryMode } from \"./policies/exponentialRetryPolicy\";\nexport { systemErrorRetryPolicy } from \"./policies/systemErrorRetryPolicy\";\nexport { throttlingRetryPolicy } from \"./policies/throttlingRetryPolicy\";\nexport { getDefaultProxySettings, proxyPolicy } from \"./policies/proxyPolicy\";\nexport { redirectPolicy, RedirectOptions } from \"./policies/redirectPolicy\";\nexport { keepAlivePolicy, KeepAliveOptions } from \"./policies/keepAlivePolicy\";\nexport { disableResponseDecompressionPolicy } from \"./policies/disableResponseDecompressionPolicy\";\nexport { signingPolicy } from \"./policies/signingPolicy\";\nexport {\n  userAgentPolicy,\n  getDefaultUserAgentValue,\n  UserAgentOptions,\n  TelemetryInfo\n} from \"./policies/userAgentPolicy\";\nexport {\n  deserializationPolicy,\n  DeserializationOptions,\n  deserializeResponseBody,\n  DeserializationContentTypes\n} from \"./policies/deserializationPolicy\";\nexport { tracingPolicy, TracingPolicyOptions } from \"./policies/tracingPolicy\";\nexport {\n  MapperType,\n  SimpleMapperType,\n  CompositeMapperType,\n  DictionaryMapperType,\n  SequenceMapperType,\n  EnumMapperType,\n  Mapper,\n  BaseMapper,\n  CompositeMapper,\n  SequenceMapper,\n  DictionaryMapper,\n  EnumMapper,\n  MapperConstraints,\n  PolymorphicDiscriminator,\n  Serializer,\n  UrlParameterValue,\n  serializeObject\n} from \"./serializer\";\nexport {\n  stripRequest,\n  stripResponse,\n  delay,\n  executePromisesSequentially,\n  generateUuid,\n  encodeUri,\n  ServiceCallback,\n  promiseToCallback,\n  promiseToServiceCallback,\n  isValidUuid,\n  applyMixins,\n  isNode,\n  isDuration\n} from \"./util/utils\";\nexport { URLBuilder, URLQuery } from \"./url\";\nexport { AbortSignalLike } from \"@azure/abort-controller\";\n\n// Credentials\nexport { TokenCredential, GetTokenOptions, AccessToken, isTokenCredential } from \"@azure/core-auth\";\nexport { AccessTokenCache, ExpiringAccessTokenCache } from \"./credentials/accessTokenCache\";\nexport { AccessTokenRefresher } from \"./credentials/accessTokenRefresher\";\nexport { BasicAuthenticationCredentials } from \"./credentials/basicAuthenticationCredentials\";\nexport { ApiKeyCredentials, ApiKeyCredentialOptions } from \"./credentials/apiKeyCredentials\";\nexport { ServiceClientCredentials } from \"./credentials/serviceClientCredentials\";\nexport { TopicCredentials } from \"./credentials/topicCredentials\";\nexport { Authenticator } from \"./credentials/credentials\";\n\nexport { parseXML, stringifyXML } from \"./util/xml\";\nexport { XML_ATTRKEY, XML_CHARKEY, SerializerOptions } from \"./util/serializer.common\";\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar core_http_1 = require(\"@azure/core-http\");\r\nvar defaultSettings = {\r\n    version: \"1.0.0\",\r\n    registrationId: \"\",\r\n    sessionId: \"\",\r\n    pnhAppId: \"AcsWeb\",\r\n    pnhTemplate: \"AcsWeb_Chat_1.0\",\r\n    platform: \"SPOOL\",\r\n    platformUIVersion: \"0.0.0\",\r\n    environment: \"\",\r\n    productName: \"acs-chat-web\",\r\n    trouterServiceUrl: \"https://go.trouter.skype.com/v4/a\",\r\n    registrarServiceUrl: \"https://edge.skype.com/registrar/prod/v3/registrations\",\r\n    registrarRefreshTimeoutInMs: 350000,\r\n    timeoutOptions: {\r\n        connectionTimeoutMs: 20000,\r\n        fetchTimeoutMs: 10000,\r\n        pingTimeoutMs: 40000,\r\n        pongTimeoutMs: 5000,\r\n        maxBackoffMs: 50000,\r\n        requestTimeoutMs: 5000\r\n    },\r\n    maxRegistrationTimeInMs: 7200000\r\n};\r\nexports.createSettings = function (options) {\r\n    var _a;\r\n    var settings = defaultSettings;\r\n    settings.registrationId = core_http_1.generateUuid();\r\n    settings.sessionId = core_http_1.generateUuid();\r\n    settings.maxRegistrationTimeInMs = (_a = options === null || options === void 0 ? void 0 : options.registrationTimeInMs) !== null && _a !== void 0 ? _a : defaultSettings.maxRegistrationTimeInMs;\r\n    return settings;\r\n};\r\nexports.defaultTelemetrySettings = {\r\n    // TBD Can we hook up OpenTelemetry?\r\n    enabled: false\r\n};\r\n","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nexports.__esModule = true;\r\nvar tstrouter_1 = require(\"@skype/tstrouter\");\r\nvar TrouterUtils_1 = require(\"./TrouterUtils\");\r\nvar TrouterSettings_1 = require(\"./TrouterSettings\");\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"Unknown\"] = 0] = \"Unknown\";\r\n    ConnectionState[ConnectionState[\"Connected\"] = 2] = \"Connected\";\r\n    ConnectionState[ConnectionState[\"Disconnected\"] = 3] = \"Disconnected\";\r\n    ConnectionState[ConnectionState[\"Switching\"] = 9] = \"Switching\";\r\n})(ConnectionState = exports.ConnectionState || (exports.ConnectionState = {}));\r\nvar CommunicationSignalingClient = /** @class */ (function () {\r\n    function CommunicationSignalingClient(credential, logger, options) {\r\n        var _this = this;\r\n        this.logger = logger;\r\n        this.stateChangedListener = null;\r\n        this.trouter = tstrouter_1.createTrouterService(TrouterUtils_1.toLogProvider(logger));\r\n        this.config = {\r\n            trouterSettings: TrouterSettings_1.createSettings(options),\r\n            skypeTokenProvider: function () { return __awaiter(_this, void 0, void 0, function () { var _a, _b; return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _b = (_a = Promise).resolve;\r\n                        return [4 /*yield*/, credential.getToken()];\r\n                    case 1: return [2 /*return*/, _b.apply(_a, [(_c.sent()).token])];\r\n                }\r\n            }); }); },\r\n            telemetryConfig: {\r\n                eventLogger: TrouterUtils_1.toTelemetrySender(logger),\r\n                settings: TrouterSettings_1.defaultTelemetrySettings\r\n            }\r\n        };\r\n    }\r\n    CommunicationSignalingClient.prototype.start = function () {\r\n        this.trouter.start(this.config);\r\n    };\r\n    CommunicationSignalingClient.prototype.stop = function () {\r\n        this.trouter.offStateChanged(this.stateChangedListener);\r\n        this.trouter.clearMessageHandlers();\r\n        this.trouter.stop();\r\n    };\r\n    CommunicationSignalingClient.prototype.on = function (event, listener) {\r\n        if (event === \"connectionChanged\") {\r\n            this.trouter.offStateChanged(this.stateChangedListener);\r\n            this.stateChangedListener = function (state, _url) { return listener(state); };\r\n            this.trouter.onStateChanged(this.stateChangedListener);\r\n            return;\r\n        }\r\n        this.trouter.registerMessageHandler(TrouterUtils_1.toMessageHandler(event, listener));\r\n    };\r\n    return CommunicationSignalingClient;\r\n}());\r\nexports.CommunicationSignalingClient = CommunicationSignalingClient;\r\n","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nexports.__esModule = true;\r\n__export(require(\"./SignalingClient\"));\r\n"],"names":["root","factory","module","this","moduleId","installedModules","exports","i","l","call","__webpack_require__","m","modules","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","obj","stringify","error","start","Date","now","reset","Timespan","logProvider","skypeTokenProvider","options","__extends","setPrototypeOf","__proto__","b","constructor","extendStatics","create","__","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","step","next","e","result","done","then","fulfilled","rejected","apply","__generator","body","v","op","f","_","y","t","label","ops","pop","trys","length","push","g","sent","verb","throw","return","Symbol","iterator","message","_this","Error","logger","maxBackoffInMs","initialDelay","backoffCount","id","ExponentialDelay","idCounter","delay","taskName","timerHandle","calculateNextBackoffMs","info","backoffMs","cancelFunc","setTimeout","cancel","debug","clearTimeout","Math","random","backoff","pow","fudge","round","min","backoffs","setTelemetryLogger","eventLogger","register","client","transports","_a","performRegistration","cachedRegistrationParams","unregister","unregisterRequest","registrarUrl","registrationId","method","mode","headers","accept","callRegistrar","cancelPendingRequests","keys","forEach","resendRegistration","eventName","registerRequest","payload","clientDescription","nodeId","toJson","startBackoff","maxRetryDelayMs","initialRetryDelayMs","stopBackoff","getSkypeToken","token","error_1","cancelError_1","request","cachedSkypetoken","stopwatch","response","req","_b","error_2","canceledError_1","_c","setSkypeTokenHeader","clone","fetchWithTimeout","status","url","statusText","sendTelemetryEvent","ok","skypetoken","set","fetch","catch","requestTimeoutMs","properties","result_code","begin_timestamp","startTime","elapsed","duration","logEvent","clientEvent","RegistrarClient","require","__WEBPACK_EXTERNAL_MODULE_20__","warn","Logger","HttpHeaders","TrouterState","UserActivityState","constants","TROUTER_INIT","TROUTER_READY_EVENT","TROUTER_READY_TIMEOUT","TROUTER_TOKEN_REQUEST","TROUTER_TOKEN_GET_SUCCEEDED","TROUTER_TOKEN_GET_FAILED","TROUTER_RECONNECTING","RENEWAL","NEW_CONNECTION","ENDPOINT_REGISTRATION_FAILED","CLIENT_VERSION","HANDLED_MESSAGE_ACK","UNHANDLED_MESSAGE_ACK","FAILED_MESSAGE_ACK","expirationTsInSec","getTime","ttlInSec","Function","eval","window","connectionId","connectedClientId","domId","unsecureUrl","c2cUrlBase","expirationTsSec","getRemainingTtlInSec","calculateTtlInSec","ServerState","UserActivityEventReason","messageHandlers","handler","some","item","clear","active","handleMessage","resultCode","isHandled","safeExecuteHandle","messageHandler","exception","MessageHandlerRegistry","provider","forceRefresh","cachedToken","logFunc","tokenProvider","listener","fsm","TrouterManagerFsm","baseEndpointUrl","processedMessageLoss","stop","configure","firstConnection","secondConnection","checkConnection","disconnectDetected","getServerState","getState","startFirstConnection","TrouterConnection","startSecondConnection","getUserActivityState","Unknown","userActivityState","stopFirstConnection","dontUnregister","storedFirstConnection","stopSecondConnection","stopSecondConnectionDelayed","lingeringConnectionDelayMs","switchConnections","tmp","doesSecondConnectionExist","dispatchConnected","ss","slice","connectionInfo","newEndpointUrl","clientId","connectionTtlSec","onTrouterConnected","dispatchReconnecting","onTrouterDisconnected","dispatchStopped","onDownstreamRequest","connection","path","shortUrl","rsp","send","writeHead","end","onTrouterRequest","onConnected","onRegistered","onReconnecting","onReconnectIsRequired","onReconnectionRequired","onDisconnected","setUserActivityState","state","onTrouterMessageLost","indicators","onTrouterMessageLoss","filter","di","tag","etag","duplicates","sendProcessedDroppedIndicators","map","messageLossProcessed","messageLossIndicators","TrouterManager","getPromise","pendingPromise","pendingPromiseResolveRef","pendingPromiseRejectRef","resolveUrl","resolveCallback","rejectUrl","rejectCallback","resetUrl","TrouterUrlPromise","global","io","version","protocol","j","sockets","connect","host","details","socket","uri","util","parseUri","location","document","domain","hostname","port","uuri","uniqueUri","secure","query","merge","Socket","of","re","parts","str","exec","base","addition","chunkQuery","components","part","join","qs","params","split","kv","load","fn","readyState","pageLoaded","on","element","event","capture","attachEvent","addEventListener","xdomain","ua","hasCORS","concat","defer","webkit","target","additional","deep","lastseen","seen","depth","prop","indexOf","mixin","ctor","ctor2","inherit","isArray","Array","toString","intersect","arr","arr2","longest","shortest","ret","toArray","enu","a","withCredentials","test","navigator","userAgent","EventEmitter","$events","addListener","once","self","removeListener","arguments","list","pos","splice","removeAllListeners","listeners","emit","args","parent","nativeJSON","key","valueOf","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","string","lastIndex","escapable","replace","meta","charCodeAt","holder","k","partial","mind","gap","date","rep","String","indent","quote","parse","JSON","cx","replacer","space","text","reviver","walk","parser","packets","reasons","advice","encodePacket","packet","type","endpoint","ack","data","reason","adv","ev","ackId","encoded","encodePayload","decoded","decodePacket","match","regexp","pieces","opts","decodePayload","charAt","substr","Number","sessid","connectErrorCallback","isOpened","Transport","onData","clearCloseTimeout","connected","connecting","reconnecting","setCloseTimeout","msgs","onPacket","setHeartbeatTimeout","onHeartbeat","onConnect","closeTimeout","onDisconnect","close","clearTimeouts","reopenTimeout","heartbeat","onOpen","onClose","prepareUrl","scheme","resource","ready","clearEventHandlers","Infinity","open","namespaces","buffer","doBuffer","isXDomain","disconnectSync","SocketNamespace","publish","nsp","$emit","handshake","onError","getElementsByTagName","script","createElement","src","insertAt","parentNode","insertBefore","complete","removeChild","xhr","onreadystatechange","empty","responseText","getTransport","override","transport","check","xdomainCheck","sessionid","sid","connectTimeoutTimer","remainingTransports","tryNextTransport","heartbeatTimeout","heartbeatTimeoutTimer","setBuffer","disconnect","err","reconnect","wasConnecting","wasConnected","reconnectionAttempts","reconnectionTimer","maybeReconnect","reconnectionDelay","redoTransports","tryMultiple","maxAttempts","limit","flags","json","ackPackets","acks","namespace","lastArg","Flag","websocket","WS","MozWebSocket","WebSocket","onopen","onmessage","onclose","onerror","sendBuffer","XHR","post","posting","sendXHR","ackTimeoutTimer","onload","XDomainRequest","stateChange","ackTimeoutMs","setRequestHeader","contentType","usesXDomReq","socketProtocol","isXProtocol","XHRPolling","abort","x","scheduleFn","customSchedulerFn","asapFn","asap","vertxNext","flush","useSetTimeout","len","callback","queue","onFulfillment","onRejection","child","noop","PROMISE_ID","makePromise","_state","_result","subscribe","Constructor","promise","GET_THEN_ERROR","fulfillmentHandler","rejectionHandler","thenable","tryThen","sealed","fulfill","_label","FULFILLED","REJECTED","maybeThenable","originalThen","originalResolve","handleOwnThenable","isFunction","handleForeignThenable","selfFulfillment","objectOrFunction","handleMaybeThenable","getThen","_onerror","PENDING","_subscribers","publishRejection","settled","subscribers","detail","invokeCallback","TRY_CATCH_ERROR","succeeded","failed","hasCallback","tryCatch","cannotReturnOwn","resolver","input","_instanceConstructor","_input","_remaining","_enumerate","validationError","entries","nextId","needsResolver","initializePromise","needsNew","local","promiseToString","cast","_isArray","arg","scheduleFlush","browserWindow","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","process","isWorker","nextTick","observer","node","createTextNode","observe","characterData","iterations","port1","port2","postMessage","vertx","runOnLoop","runOnContext","useVertxTimer","substring","_eachEntry","Enumerator","entry","_then","_settledAt","_willSettleAt","all","race","Resolve","Reject","_setScheduler","setScheduler","_setAsap","setAsap","_asap","polyfill","fun","cachedSetTimeout","defaultSetTimout","marker","cachedClearTimeout","defaultClearTimeout","draining","currentQueue","queueIndex","drainQueue","runTimeout","cleanUpNextTick","run","runClearTimeout","timeout","array","Item","title","browser","env","argv","versions","off","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","webpackPolyfill","deprecate","paths","children","ResponseData","ClientEventName","stepName","operation","delta","ts","TrackerStep","Properties","numberOfPingReplies","connectedTimestamp","isNewUrl","transportType","connectionNumber","enabled","numberOfStepsToMaintain","logHealthCheckError","sendProgressTimeoutSecs","logSendPingError","trouter_js_client_connected","trouter_js_client_disconnected","trouter_js_client_error","trouter_js_client_progress","trouter_js_client_response","trouter_js_client_request","trouter_js_client_registration","trouter_js_client_unregistration","trouter_js_client_check_connection","logfunc","clientInfo","endpointId","clientCorrelationID","environment","steps","connectionAttempt","totalStepCount","beginTimestamp","eventLogSettings","connectedInfo","enable","telemetrySender","disable","sendProgress","context","sendTelemetry","Progress","cancelProgressTimer","progressTimeout","resetProgressSendTimer","timeoutSecs","setConnectedInfo","clearConnectedInfo","copyProperties","dest","source","increasePingResponseCount","eventProperties","progress","epid","clientID","eventVersion","cv","serverState","surl","ttlInSecs","exc","createStep","addStep","progressHint","trackStart","trackEnd","trackError","subOperation","trackProgress","trackConnected","totalSteps","connectionDuration","Connected","stepCount","connectionEstablishmentMs_Total","trackDisconnected","sessionLengthMS","Disconnected","trackNewConnection","trackRequest","errorMsg","hasError","requestID","httpMethod","bodyLength","requestTimeStamp","startTS","correlationVector","header","Request","trackResponse","latencyMS","responseData","responseTimestamp","sentTS","responseCode","responseLength","Response","sendResponseError","mergeSettings","settings","max","newProgressTimeout","ConnectionTracker","backoffId","setMaxBackoffMs","ms","ExponentialBackoff","hr","cvHeader","requestJson","cvCounter","replied","timedout","timeoutTimerId","receivedCv","updateCvHeader","targetCallback","dataCallback","incrementCorrelationVector","sendResponse","write","chunk","manager","initialUserActivityState","inIncallMode","pendingTimers","UNKNOWN_TRANSPORT","timeoutOptions","healthBackoff","maxBackoffMs","tokenBackoff","safeString","connectionTracker","applyConnectionTrackerOptions","incallModeTimeoutMs","TrouterFsm","useIncallMode","registration","fetchTimeoutMs","registrarClient","createRegistrarClient","registrarOptions","trouterUrl","urlChanged","onTrouterReconnect","CheckConnection","allocateResult","connectionExpireTimestampInSecs","getToken","useCache","onTokenReceived","stack","msg","requestFunction","startConnectionTimer","stopConnectionTimer","connectionTimeoutMs","connectionTimeoutId","onConnectingTimeout","startPingTimer","transportTypeName","pingTimeoutMs","pingTimerId","setInterval","onPingInterval","stopPingTimer","clearPingResponseTimer","clearInterval","shouldSkipRegistration","hasCustomRegisterTtl","registrarTtlSec","startRegisterTimer","registrationTimerId","getRegistrationTtl","ttl","onRegistrationTimeout","stopRegisterTimer","buildSocketIoUrlParams","connectparams","signatureData","urlParams","tc","encodeURI","auth","userActivity","createUserActivityObject","appendConnectedClientIds","buildQuery","startSocketIo","ioOptions","socketio","stopSocketIo","onSocketConnecting","onSocketConnect","onSocketConnectFailed","onSocketDisconnect","onSocketReconnect","onSocketReconnectFailed","onSocketReconnecting","onSocketError","onSocketMessage","eventArgs","dispatchRegistered","dispatchDownstreamRequest","dispatchReconnectIsRequired","dispatchDisconnected","dispatchTrouterMessageLost","processedMessageLossEvent","droppedIndicators","sendDownstreamEvent","resetAllocationConnectionParams","sendAllocateRequest","appendCorrelationIds","allocateRequest","responseStatusCode","responseObj","onAllocationResponse","onAllocationFailed","sendPingRequest","pingResponseTimerId","onPingResponse","onPingResponseTimeout","pongTimeoutMs","onSetUserActivityState","changed","sendUserActivityState","sendUserActivityStateMultiple","Modified","forceReconnect","sendRegisterRequest","appId","pnhAppId","aesKey","languageId","platform","templateKey","pnhTemplateKey","platformUIVersion","productContext","TROUTER","onRegistrationSucceed","Registration","span","sendUnregisterRequest","onUnregistrationSucceed","Unregistration","onUnregistrationFailed","timeoutMs","resetTokenBackoff","resetRegisterBackoff","clearTimers","clearTimer","restartIncallModeTimer","clearIncallModeTimerId","incallModeTimerId","onIncallModeTimer","enterIncallMode","incallTimeoutOptions","exitIncallMode","isIncallMode","onConnecting","onConnectingFailed","serverClosed","isActive","errorObject","chainIdLogText","chainId","urlPath","connectedUrl","calculateExpireTsInSec","onReconnectRequired","ccid","curlb","onAllocationSucceed","isParamsOnly","sep","getHealthUrl","allocateUrl","lastIndexOf","cd","remaining","activityEvent","onDownstreamEventResponse","userActivitySecondResendDelayMs","registerTimer","onActivityStateResponseTimeout","userActivityResponseTimeoutMs","responseCallback","timerId","timerDescription","allocationTtl","telemetrySettings","Active","stateStr","Inactive","State","ConnectedSubstate","worker","incallModeEnabled","Initial","connectionErrors","connectedSubstate","Allocating","Handshaking","Connecting","RetrievingToken","setState","showIgnored","isRegistered","UnregisteringRetrievingToken","Registering","Unregistering","unauthorized","resetAllocationIfNecessary","NotRegistered","switchToIncallModeIfEnabled","onMissedResponse","onRegistrationFailed","Registered","onResponseHandlerName","first","Switching","startingCfg","ecsCfg","TelemetryEnabled","ClientTelemetryEventEnabled","res","cfg","trouterSettings","productName","sessionId","populateTelemetryOptions","telemetryConfig","TrouterConnectionUrl","trouterServiceUrl","registrarServiceUrl","pnhTemplate","pnhProductContext","pnhContext","maxRegistrationTimeInMs","trouterConnectTimeoutInMs","existingUrl","newBase","schemaSepPos","pathSepPos","__assign","assign","stateChangedListeners","trouterUrlPromise","disableInternalSkypeTokenCache","addCacheAsBackupTo","trouterCfg","populateTrouterOptions","trouterServer","setEcsConfig","fullEcsData","registerListener","unregisterListener","endpointUrl","notifyStateChanged","func","bestPath","tryMessageHandlers","flowTags","getTrouterUrlAsync","onStateChanged","wrappedCallback","offStateChanged","wrapper","sizeBeforeRemoval","addCallback","removeCallback","index","registerMessageHandler","clearMessageHandlers","eventId","evt","rawBody","responseHeaders","responseBody","TrouterService","uuidv4","base64.decodeString","base64.encodeByteArray","utils.isValidUuid","utils.isDuration","coreLogger","utils.delay","utils.generateUuid","utils\n                .delay","retry","trace_flags_1","context_1","platform_1","context_base_1","global_utils_1","setter","setter_1","getter_1","trace_1","metrics_1","propagation_1","TraceFlags","SpanKind","DefaultHttpClient","utils.prepareXMLRootList","utils.isPrimitiveType","base64.encodeString","core_http_1","tstrouter_1","TrouterUtils_1","TrouterSettings_1","require$$0"],"mappings":"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"}