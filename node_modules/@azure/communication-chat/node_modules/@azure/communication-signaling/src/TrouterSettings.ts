// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import { TrouterSettings, TrouterTelemetrySettings } from "@skype/tstrouter";
import { generateUuid } from "@azure/core-http";
import { SignalingClientOptions } from "./SignalingClient";

const defaultSettings: TrouterSettings = {
  version: "1.0.0", // SignalingClient version, required for trouter connection
  registrationId: "", // Required for trouter connection
  sessionId: "", // Required for trouter connection
  pnhAppId: "AcsWeb",
  pnhTemplate: "AcsWeb_Chat_1.0",
  platform: "SPOOL",
  platformUIVersion: "0.0.0",
  environment: "", // TBD
  productName: "acs-chat-web",
  trouterServiceUrl: "https://go.trouter.skype.com/v4/a",
  registrarServiceUrl: "https://edge.skype.com/registrar/prod/v3/registrations",
  registrarRefreshTimeoutInMs: 350000,
  timeoutOptions: {
    connectionTimeoutMs: 20000,
    fetchTimeoutMs: 10000,
    pingTimeoutMs: 40000,
    pongTimeoutMs: 5000,
    maxBackoffMs: 50000,
    requestTimeoutMs: 5000
  },
  maxRegistrationTimeInMs: 7200000
};

export const createSettings = (options?: SignalingClientOptions): TrouterSettings => {
  const settings = defaultSettings;
  settings.registrationId = generateUuid();
  settings.sessionId = generateUuid();
  settings.maxRegistrationTimeInMs =
    options?.registrationTimeInMs ?? defaultSettings.maxRegistrationTimeInMs;
  return settings;
};

export const defaultTelemetrySettings: TrouterTelemetrySettings = {
  // TBD Can we hook up OpenTelemetry?
  enabled: false
};
