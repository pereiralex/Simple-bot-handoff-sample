{"version":3,"file":"chatThread.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/chatThread.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ChatApiClient } from \"../chatApiClient\";\nimport {\n  ChatThreadListChatReadReceiptsOptionalParams,\n  ChatThreadListChatReadReceiptsResponse,\n  SendReadReceiptRequest,\n  SendChatMessageRequest,\n  ChatThreadSendChatMessageResponse,\n  ChatThreadListChatMessagesOptionalParams,\n  ChatThreadListChatMessagesResponse,\n  ChatThreadGetChatMessageResponse,\n  UpdateChatMessageRequest,\n  ChatThreadListChatParticipantsOptionalParams,\n  ChatThreadListChatParticipantsResponse,\n  CommunicationIdentifierModel,\n  AddChatParticipantsRequest,\n  ChatThreadAddChatParticipantsResponse,\n  UpdateChatThreadRequest,\n  ChatThreadGetChatThreadPropertiesResponse,\n  ChatThreadListChatReadReceiptsNextOptionalParams,\n  ChatThreadListChatReadReceiptsNextResponse,\n  ChatThreadListChatMessagesNextOptionalParams,\n  ChatThreadListChatMessagesNextResponse,\n  ChatThreadListChatParticipantsNextOptionalParams,\n  ChatThreadListChatParticipantsNextResponse\n} from \"../models\";\n\n/** Class representing a ChatThread. */\nexport class ChatThread {\n  private readonly client: ChatApiClient;\n\n  /**\n   * Initialize a new instance of the class ChatThread class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ChatApiClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets chat message read receipts for a thread.\n   * @param chatThreadId Thread id to get the chat message read receipts for.\n   * @param options The options parameters.\n   */\n  listChatReadReceipts(\n    chatThreadId: string,\n    options?: ChatThreadListChatReadReceiptsOptionalParams\n  ): Promise<ChatThreadListChatReadReceiptsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listChatReadReceiptsOperationSpec\n    ) as Promise<ChatThreadListChatReadReceiptsResponse>;\n  }\n\n  /**\n   * Sends a read receipt event to a thread, on behalf of a user.\n   * @param chatThreadId Thread id to send the read receipt event to.\n   * @param sendReadReceiptRequest Read receipt details.\n   * @param options The options parameters.\n   */\n  sendChatReadReceipt(\n    chatThreadId: string,\n    sendReadReceiptRequest: SendReadReceiptRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      sendReadReceiptRequest,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      sendChatReadReceiptOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Sends a message to a thread.\n   * @param chatThreadId The thread id to send the message to.\n   * @param sendChatMessageRequest Details of the message to send.\n   * @param options The options parameters.\n   */\n  sendChatMessage(\n    chatThreadId: string,\n    sendChatMessageRequest: SendChatMessageRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<ChatThreadSendChatMessageResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      sendChatMessageRequest,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      sendChatMessageOperationSpec\n    ) as Promise<ChatThreadSendChatMessageResponse>;\n  }\n\n  /**\n   * Gets a list of messages from a thread.\n   * @param chatThreadId The thread id of the message.\n   * @param options The options parameters.\n   */\n  listChatMessages(\n    chatThreadId: string,\n    options?: ChatThreadListChatMessagesOptionalParams\n  ): Promise<ChatThreadListChatMessagesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listChatMessagesOperationSpec\n    ) as Promise<ChatThreadListChatMessagesResponse>;\n  }\n\n  /**\n   * Gets a message by id.\n   * @param chatThreadId The thread id to which the message was sent.\n   * @param chatMessageId The message id.\n   * @param options The options parameters.\n   */\n  getChatMessage(\n    chatThreadId: string,\n    chatMessageId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<ChatThreadGetChatMessageResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      chatMessageId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getChatMessageOperationSpec\n    ) as Promise<ChatThreadGetChatMessageResponse>;\n  }\n\n  /**\n   * Updates a message.\n   * @param chatThreadId The thread id to which the message was sent.\n   * @param chatMessageId The message id.\n   * @param updateChatMessageRequest Details of the request to update the message.\n   * @param options The options parameters.\n   */\n  updateChatMessage(\n    chatThreadId: string,\n    chatMessageId: string,\n    updateChatMessageRequest: UpdateChatMessageRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      chatMessageId,\n      updateChatMessageRequest,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      updateChatMessageOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Deletes a message.\n   * @param chatThreadId The thread id to which the message was sent.\n   * @param chatMessageId The message id.\n   * @param options The options parameters.\n   */\n  deleteChatMessage(\n    chatThreadId: string,\n    chatMessageId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      chatMessageId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      deleteChatMessageOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Posts a typing event to a thread, on behalf of a user.\n   * @param chatThreadId Id of the thread.\n   * @param options The options parameters.\n   */\n  sendTypingNotification(\n    chatThreadId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      sendTypingNotificationOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Gets the participants of a thread.\n   * @param chatThreadId Thread id to get participants for.\n   * @param options The options parameters.\n   */\n  listChatParticipants(\n    chatThreadId: string,\n    options?: ChatThreadListChatParticipantsOptionalParams\n  ): Promise<ChatThreadListChatParticipantsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listChatParticipantsOperationSpec\n    ) as Promise<ChatThreadListChatParticipantsResponse>;\n  }\n\n  /**\n   * Remove a participant from a thread.\n   * @param chatThreadId Thread id to remove the participant from.\n   * @param participantCommunicationIdentifier Id of the thread participant to remove from the thread.\n   * @param options The options parameters.\n   */\n  removeChatParticipant(\n    chatThreadId: string,\n    participantCommunicationIdentifier: CommunicationIdentifierModel,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      participantCommunicationIdentifier,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      removeChatParticipantOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Adds thread participants to a thread. If participants already exist, no change occurs.\n   * @param chatThreadId Id of the thread to add participants to.\n   * @param addChatParticipantsRequest Thread participants to be added to the thread.\n   * @param options The options parameters.\n   */\n  addChatParticipants(\n    chatThreadId: string,\n    addChatParticipantsRequest: AddChatParticipantsRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<ChatThreadAddChatParticipantsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      addChatParticipantsRequest,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      addChatParticipantsOperationSpec\n    ) as Promise<ChatThreadAddChatParticipantsResponse>;\n  }\n\n  /**\n   * Updates a thread's properties.\n   * @param chatThreadId The id of the thread to update.\n   * @param updateChatThreadRequest Request payload for updating a chat thread.\n   * @param options The options parameters.\n   */\n  updateChatThreadProperties(\n    chatThreadId: string,\n    updateChatThreadRequest: UpdateChatThreadRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      updateChatThreadRequest,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      updateChatThreadPropertiesOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Gets a chat thread's properties.\n   * @param chatThreadId Id of the thread.\n   * @param options The options parameters.\n   */\n  getChatThreadProperties(\n    chatThreadId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<ChatThreadGetChatThreadPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getChatThreadPropertiesOperationSpec\n    ) as Promise<ChatThreadGetChatThreadPropertiesResponse>;\n  }\n\n  /**\n   * ListChatReadReceiptsNext\n   * @param chatThreadId Thread id to get the chat message read receipts for.\n   * @param nextLink The nextLink from the previous successful call to the ListChatReadReceipts method.\n   * @param options The options parameters.\n   */\n  listChatReadReceiptsNext(\n    chatThreadId: string,\n    nextLink: string,\n    options?: ChatThreadListChatReadReceiptsNextOptionalParams\n  ): Promise<ChatThreadListChatReadReceiptsNextResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      nextLink,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listChatReadReceiptsNextOperationSpec\n    ) as Promise<ChatThreadListChatReadReceiptsNextResponse>;\n  }\n\n  /**\n   * ListChatMessagesNext\n   * @param chatThreadId The thread id of the message.\n   * @param nextLink The nextLink from the previous successful call to the ListChatMessages method.\n   * @param options The options parameters.\n   */\n  listChatMessagesNext(\n    chatThreadId: string,\n    nextLink: string,\n    options?: ChatThreadListChatMessagesNextOptionalParams\n  ): Promise<ChatThreadListChatMessagesNextResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      nextLink,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listChatMessagesNextOperationSpec\n    ) as Promise<ChatThreadListChatMessagesNextResponse>;\n  }\n\n  /**\n   * ListChatParticipantsNext\n   * @param chatThreadId Thread id to get participants for.\n   * @param nextLink The nextLink from the previous successful call to the ListChatParticipants method.\n   * @param options The options parameters.\n   */\n  listChatParticipantsNext(\n    chatThreadId: string,\n    nextLink: string,\n    options?: ChatThreadListChatParticipantsNextOptionalParams\n  ): Promise<ChatThreadListChatParticipantsNextResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      chatThreadId,\n      nextLink,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listChatParticipantsNextOperationSpec\n    ) as Promise<ChatThreadListChatParticipantsNextResponse>;\n  }\n}\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst listChatReadReceiptsOperationSpec: coreHttp.OperationSpec = {\n  path: \"/chat/threads/{chatThreadId}/readReceipts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ChatMessageReadReceiptsCollection\n    },\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.maxPageSize,\n    Parameters.skip,\n    Parameters.apiVersion\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.chatThreadId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst sendChatReadReceiptOperationSpec: coreHttp.OperationSpec = {\n  path: \"/chat/threads/{chatThreadId}/readReceipts\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  requestBody: Parameters.sendReadReceiptRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.chatThreadId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst sendChatMessageOperationSpec: coreHttp.OperationSpec = {\n  path: \"/chat/threads/{chatThreadId}/messages\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.SendChatMessageResult\n    },\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  requestBody: Parameters.sendChatMessageRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.chatThreadId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listChatMessagesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/chat/threads/{chatThreadId}/messages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ChatMessagesCollection\n    },\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.maxPageSize,\n    Parameters.apiVersion,\n    Parameters.startTime\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.chatThreadId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getChatMessageOperationSpec: coreHttp.OperationSpec = {\n  path: \"/chat/threads/{chatThreadId}/messages/{chatMessageId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ChatMessage\n    },\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.chatThreadId,\n    Parameters.chatMessageId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateChatMessageOperationSpec: coreHttp.OperationSpec = {\n  path: \"/chat/threads/{chatThreadId}/messages/{chatMessageId}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    204: {},\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  requestBody: Parameters.updateChatMessageRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.chatThreadId,\n    Parameters.chatMessageId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType1],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteChatMessageOperationSpec: coreHttp.OperationSpec = {\n  path: \"/chat/threads/{chatThreadId}/messages/{chatMessageId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.chatThreadId,\n    Parameters.chatMessageId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst sendTypingNotificationOperationSpec: coreHttp.OperationSpec = {\n  path: \"/chat/threads/{chatThreadId}/typing\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.chatThreadId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listChatParticipantsOperationSpec: coreHttp.OperationSpec = {\n  path: \"/chat/threads/{chatThreadId}/participants\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ChatParticipantsCollection\n    },\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.maxPageSize,\n    Parameters.skip,\n    Parameters.apiVersion\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.chatThreadId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst removeChatParticipantOperationSpec: coreHttp.OperationSpec = {\n  path: \"/chat/threads/{chatThreadId}/participants/:remove\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  requestBody: Parameters.participantCommunicationIdentifier,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.chatThreadId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst addChatParticipantsOperationSpec: coreHttp.OperationSpec = {\n  path: \"/chat/threads/{chatThreadId}/participants/:add\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.AddChatParticipantsResult\n    },\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  requestBody: Parameters.addChatParticipantsRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.chatThreadId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateChatThreadPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/chat/threads/{chatThreadId}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    204: {},\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  requestBody: Parameters.updateChatThreadRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.chatThreadId],\n  headerParameters: [Parameters.accept, Parameters.contentType1],\n  mediaType: \"json\",\n  serializer\n};\nconst getChatThreadPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/chat/threads/{chatThreadId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ChatThreadProperties\n    },\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.chatThreadId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listChatReadReceiptsNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ChatMessageReadReceiptsCollection\n    },\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.maxPageSize,\n    Parameters.skip,\n    Parameters.apiVersion\n  ],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.chatThreadId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listChatMessagesNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ChatMessagesCollection\n    },\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.maxPageSize,\n    Parameters.apiVersion,\n    Parameters.startTime\n  ],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.chatThreadId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listChatParticipantsNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ChatParticipantsCollection\n    },\n    401: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    403: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    429: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    },\n    503: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.maxPageSize,\n    Parameters.skip,\n    Parameters.apiVersion\n  ],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.chatThreadId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}